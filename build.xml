<?xml version="1.0" encoding="UTF-8"?>
<project name="JAME" default="build">
	<property environment="env" />
	<property name="maven.home" value="${env.M2_HOME}" />
	<property name="jame.version" value="6.2.1" />
	<property name="jame.folder" value="JAME" />
	<property name="mainmodule" value="net.sf.jame.main.swing" />
	<macrodef name="maven">
		<attribute name="options" default="" />
		<attribute name="goal" />
		<attribute name="basedir" />
		<attribute name="resultproperty" default="maven.result" />
		<element name="args" implicit="true" optional="true" />
		<sequential>
			<java classname="org.codehaus.classworlds.Launcher" fork="true" dir="@{basedir}" resultproperty="@{resultproperty}">
				<jvmarg value="-Xmx512m" />
				<classpath>
					<fileset dir="${maven.home}/boot">
						<include name="*.jar" />
					</fileset>
					<fileset dir="${maven.home}/lib">
						<include name="*.jar" />
					</fileset>
				</classpath>
				<sysproperty key="classworlds.conf" value="${maven.home}/bin/m2.conf" />
				<sysproperty key="maven.home" value="${maven.home}" />
				<sysproperty key="maven.multiModuleProjectDirectory" value="true" />
				<arg line="--batch-mode @{options} @{goal}" />
			</java>
		</sequential>
	</macrodef>
	<macrodef name="build">
		<attribute name="os" />
		<attribute name="arch" />
		<attribute name="version" />
		<attribute name="basedir" />
		<attribute name="resultproperty" default="build.result" />
		<element name="args" implicit="true" optional="true" />
		<sequential>
			<maven basedir="@{basedir}" options="-P @{os}_@{arch}" goal="install" resultproperty="maven.build.result" />
			<delete dir="@{basedir}/dist/@{os}_@{arch}" />
			<mkdir dir="@{basedir}/dist/@{os}_@{arch}/${jame.folder}/JAME"/>
			<copy failonerror="true" todir="@{basedir}/dist/@{os}_@{arch}/${jame.folder}" overwrite="true">
				<fileset dir="@{basedir}/resources/exe/@{os}">
					<include name="**/*" />
				</fileset>
			</copy>
			<copy failonerror="true" todir="@{basedir}/dist/@{os}_@{arch}/${jame.folder}/JAME" overwrite="true">
				<fileset dir="@{basedir}/${mainmodule}/target/lib/@{os}/@{arch}/@{os}">
					<include name="*" />
				</fileset>
			</copy>
			<copy failonerror="true" todir="@{basedir}/dist/@{os}_@{arch}/${jame.folder}/JAME" overwrite="true">
				<fileset dir="@{basedir}/${mainmodule}/target/jars">
					<include name="*" />
				</fileset>
			</copy>
			<copy failonerror="true" todir="@{basedir}/dist/@{os}_@{arch}/${jame.folder}/JAME" overwrite="true">
				<fileset dir="@{basedir}/${mainmodule}/target">
					<include name="*.jar" />
				</fileset>
			</copy>
			<copy failonerror="true" todir="@{basedir}/dist/@{os}_@{arch}/${jame.folder}" overwrite="true">
				<fileset dir="@{basedir}/resources">
					<include name="thirdparties/**/*" />
				</fileset>
				<fileset dir="@{basedir}/resources">
					<include name="examples/**/*" />
				</fileset>
				<fileset dir="@{basedir}/resources">
					<include name="scripts/**/*" />
				</fileset>
				<fileset dir="@{basedir}/resources">
					<include name="*.html" />
				</fileset>
				<fileset dir="@{basedir}/resources">
					<include name="*.txt" />
				</fileset>
			</copy>
		</sequential>
	</macrodef>
	<macrodef name="buildosx">
		<attribute name="os" />
		<attribute name="arch" />
		<attribute name="version" />
		<attribute name="basedir" />
		<attribute name="resultproperty" default="build.osx.result" />
		<element name="args" implicit="true" optional="true" />
		<sequential>
			<build basedir="@{basedir}" os="@{os}" arch="@{arch}" version="@{version}" resultproperty="build.result" />
			<move failonerror="true" todir="@{basedir}/dist/@{os}_@{arch}/${jame.folder}/JAME.app/Contents/MacOS">
				<fileset dir="@{basedir}/dist/@{os}_@{arch}/${jame.folder}/JAME">
					<filename name="*.jnilib"/>
				</fileset>
				<fileset dir="@{basedir}/dist/@{os}_@{arch}/${jame.folder}/JAME">
					<filename name="*.jar"/>
				</fileset>
			</move>
			<chmod failonerror="true" perm="aug+x" file="@{basedir}/dist/@{os}_@{arch}/${jame.folder}/JAME.app/Contents/MacOS/Application Stub" />
			<delete failonerror="true" dir="@{basedir}/dist/@{os}_@{arch}/${jame.folder}/JAME" />
		</sequential>
	</macrodef>
	<macrodef name="makedmg">
		<attribute name="os" />
		<attribute name="arch" />
		<attribute name="version" />
		<attribute name="basedir" />
		<attribute name="resultproperty" default="makedmg.result" />
		<element name="args" implicit="true" optional="true" />
		<sequential>
			<exec executable="find">
				<arg value="@{basedir}/dist/@{os}_@{arch}" />
				<arg value="-name" />
				<arg value=".DS_Store" />
				<arg value='-delete' />
			</exec>
			<delete file="@{basedir}/dist/jame_@{os}_@{arch}_@{version}.dmg" />
			<exec executable="hdiutil">
				<arg value="create" />
				<arg value="@{basedir}/dist/jame_@{os}_@{arch}_@{version}.dmg" />
				<arg value="-volname" />
				<arg value="JAME @{version}" />
				<arg value="-fs" />
				<arg value="HFS+" />
				<arg value="-srcfolder" />
				<arg value="@{basedir}/dist/@{os}_@{arch}" />
			</exec>
		</sequential>
	</macrodef>
	<macrodef name="makezip">
		<attribute name="os" />
		<attribute name="arch" />
		<attribute name="version" />
		<attribute name="basedir" />
		<attribute name="resultproperty" default="makezip.result" />
		<element name="args" implicit="true" optional="true" />
		<sequential>
			<zip destfile="@{basedir}/dist/jame_@{os}_@{arch}_@{version}.zip">
				<fileset dir="@{basedir}/dist/@{os}_@{arch}">
					<include name="**/*" />
					<exclude name="**/.DS_store" />
				</fileset>
			</zip>
		</sequential>
	</macrodef>
	<macrodef name="changecopyright">
		<attribute name="path" />
		<attribute name="file" />
		<attribute name="basedir" />
		<attribute name="resultproperty" default="changecopyright.result" />
		<element name="args" implicit="true" optional="true" />
		<sequential>
			<java classname="net.sf.jame.fileutility.ChangeCopyright">
	         	<arg value="utils/@{file}"/>
	         	<arg value="@{basedir}/@{path}"/>
	         	<classpath>
	           		<pathelement location="utils/FileUtility.jar"/>
	         	</classpath>
	       	</java>
		</sequential>
	</macrodef>	
	<macrodef name="addcopyright">
		<attribute name="path" />
		<attribute name="file" />
		<attribute name="basedir" />
		<attribute name="resultproperty" default="addcopyright.result" />
		<element name="args" implicit="true" optional="true" />
		<sequential>
			<java classname="net.sf.jame.fileutility.AddCopyright">
	         	<arg value="utils/@{file}"/>
	         	<arg value="@{basedir}/@{path}"/>
	         	<classpath>
	           		<pathelement location="utils/FileUtility.jar"/>
	         	</classpath>
	       	</java>
		</sequential>
	</macrodef>	
	<macrodef name="linecount">
		<attribute name="path" />
		<attribute name="basedir" />
		<attribute name="resultproperty" default="linecount.result" />
		<element name="args" implicit="true" optional="true" />
		<sequential>
			<java classname="net.sf.jame.fileutility.LineCount">
	         	<arg value="@{basedir}/@{path}"/>
	         	<classpath>
	           		<pathelement location="utils/FileUtility.jar"/>
	         	</classpath>
	       	</java>
		</sequential>
	</macrodef>	
	<condition property="is_macosx">
		<os family="mac" />
	</condition>
	<target name="clean">
		<delete dir="${basedir}/dist" />
		<mkdir dir="${basedir}/dist" />
		<maven basedir="${basedir}" goal="clean" resultproperty="maven.build.result" />
	</target>
	<target name="update-version">
		<replaceregexp match="JAME [0-9]\.[0-9]\.[0-9]" replace="JAME ${jame.version}" flags="g" byline="true">
		    <fileset dir="${basedir}/..">
		    	<include name="**/*.md"/>
		    	<include name="**/*.txt"/>
		    	<include name="**/*.html"/>
    			<include name="**/*.java"/>
			</fileset>
		</replaceregexp>
		<replaceregexp match="net.sf.jame.main-[0-9]\.[0-9]\.[0-9]" replace="net.sf.jame.main-${jame.version}" flags="g" byline="true">
		    <fileset dir="${basedir}/..">
    			<include name="**/*.wflow"/>
		    	<include name="**/*.bat"/>
		    	<include name="**/*.sh"/>
			</fileset>
		</replaceregexp>
		<maven basedir="${basedir}" goal="versions:set" resultproperty="maven.build.result" options="-DnewVersion=${jame.version}"/>
		<maven basedir="${basedir}" goal="versions:commit" resultproperty="maven.build.result"/>
	</target>
	<target name="change-copyright">
		<changecopyright basedir="${basedir}" path="net.sf.jame.core/src/main/java" file="copyright.txt"/>
		<changecopyright basedir="${basedir}" path="net.sf.jame.queue/src/main/java" file="copyright.txt"/>
		<changecopyright basedir="${basedir}" path="net.sf.jame.twister/src/main/java" file="copyright.txt"/>
		<changecopyright basedir="${basedir}" path="net.sf.jame.mandelbrot/src/main/java" file="copyright.txt"/>
		<changecopyright basedir="${basedir}" path="net.sf.jame.contextfree/src/main/java" file="copyright.txt"/>
		<changecopyright basedir="${basedir}" path="net.sf.jame.devtools/src/main/java" file="copyright.txt"/>
		<changecopyright basedir="${basedir}" path="net.sf.jame.core.swing/src/main/java" file="copyright.txt"/>
		<changecopyright basedir="${basedir}" path="net.sf.jame.twister.swing/src/main/java" file="copyright.txt"/>
		<changecopyright basedir="${basedir}" path="net.sf.jame.mandelbrot.swing/src/main/java" file="copyright.txt"/>
		<changecopyright basedir="${basedir}" path="net.sf.jame.contextfree.swing/src/main/java" file="copyright.txt"/>
		<changecopyright basedir="${basedir}" path="net.sf.jame.contextfree/src/test/java" file="copyright.txt"/>
		<changecopyright basedir="${basedir}" path="net.sf.jame.queue/src/test/java" file="copyright.txt"/>
		<changecopyright basedir="${basedir}" path="net.sf.jame.main/src/test/java" file="copyright.txt"/>
		<changecopyright basedir="${basedir}" path="net.sf.jame.main.swing/src/test/java" file="copyright.txt"/>
		<changecopyright basedir="${basedir}" path="net.sf.jame.mandelbrot/src/main/java/net/sf/jame/mandelbrot/renderer/BestXaosMandelbrotRenderer.java" file="copyright-xaos.txt"/>
		<changecopyright basedir="${basedir}" path="net.sf.jame.mandelbrot/src/main/java/net/sf/jame/mandelbrot/renderer/FastXaosMandelbrotRenderer.java" file="copyright-xaos.txt"/>
		<changecopyright basedir="${basedir}" path="net.sf.jame.core/src/main/java/net/sf/jame/core/media/g3d" file="copyright-idx3d.txt"/>
	</target>
	<target name="add-copyright">
		<addcopyright basedir="${basedir}" path="net.sf.jame.core/src/main/java" file="copyright.txt"/>
		<addcopyright basedir="${basedir}" path="net.sf.jame.queue/src/main/java" file="copyright.txt"/>
		<addcopyright basedir="${basedir}" path="net.sf.jame.twister/src/main/java" file="copyright.txt"/>
		<addcopyright basedir="${basedir}" path="net.sf.jame.mandelbrot/src/main/java" file="copyright.txt"/>
		<addcopyright basedir="${basedir}" path="net.sf.jame.contextfree/src/main/java" file="copyright.txt"/>
		<addcopyright basedir="${basedir}" path="net.sf.jame.devtools/src/main/java" file="copyright.txt"/>
		<addcopyright basedir="${basedir}" path="net.sf.jame.core.swing/src/main/java" file="copyright.txt"/>
		<addcopyright basedir="${basedir}" path="net.sf.jame.twister.swing/src/main/java" file="copyright.txt"/>
		<addcopyright basedir="${basedir}" path="net.sf.jame.mandelbrot.swing/src/main/java" file="copyright.txt"/>
		<addcopyright basedir="${basedir}" path="net.sf.jame.contextfree.swing/src/main/java" file="copyright.txt"/>
		<addcopyright basedir="${basedir}" path="net.sf.jame.contextfree/src/test/java" file="copyright.txt"/>
		<addcopyright basedir="${basedir}" path="net.sf.jame.queue/src/test/java" file="copyright.txt"/>
		<addcopyright basedir="${basedir}" path="net.sf.jame.main/src/test/java" file="copyright.txt"/>
		<addcopyright basedir="${basedir}" path="net.sf.jame.main.swing/src/test/java" file="copyright.txt"/>
		<addcopyright basedir="${basedir}" path="net.sf.jame.mandelbrot/src/main/java/net/sf/jame/mandelbrot/renderer/BestXaosMandelbrotRenderer.java" file="copyright-xaos.txt"/>
		<addcopyright basedir="${basedir}" path="net.sf.jame.mandelbrot/src/main/java/net/sf/jame/mandelbrot/renderer/FastXaosMandelbrotRenderer.java" file="copyright-xaos.txt"/>
		<addcopyright basedir="${basedir}" path="net.sf.jame.core/src/main/java/net/sf/jame/core/media/g3d" file="copyright-idx3d.txt"/>
	</target>
	<target name="line-count">
		<linecount basedir="${basedir}" path="."/>
	</target>
	<target name="javadocs">
		<javadoc packagenames="net.sf.*" destdir="${basedir}/../docs" author="true" version="true" use="true" windowtitle="JAME" failonwarning="false" failonerror="false">
			<fileset dir="${basedir}/net.sf.jame.core/src/main/java" defaultexcludes="yes">
		    </fileset>
			<fileset dir="${basedir}/net.sf.jame.queue/src/main/java" defaultexcludes="yes">
		    </fileset>
			<fileset dir="${basedir}/net.sf.jame.devtools/src/main/java" defaultexcludes="yes">
			</fileset>
			<fileset dir="${basedir}/net.sf.jame.twister/src/main/java" defaultexcludes="yes">
		    </fileset>
			<fileset dir="${basedir}/net.sf.jame.mandelbrot/src/main/java" defaultexcludes="yes">
		    </fileset>
			<fileset dir="${basedir}/net.sf.jame.core.swing/src/main/java" defaultexcludes="yes">
		    </fileset>
			<fileset dir="${basedir}/net.sf.jame.twister.swing/src/main/java" defaultexcludes="yes">
		    </fileset>
			<fileset dir="${basedir}/net.sf.jame.mandelbrot.swing/src/main/java" defaultexcludes="yes">
		    </fileset>
			<fileset dir="${basedir}/net.sf.jame.main.swing/src/main/java" defaultexcludes="yes">
			</fileset>
	  	</javadoc>
	</target>
	<target name="build-macos-64bit" if="is_macosx">
		<buildosx basedir="${basedir}" os="macos" arch="x86_64" version="${jame.version}" resultproperty="ant.build.result" />
		<makedmg basedir="${basedir}" os="macos" arch="x86_64" version="${jame.version}" resultproperty="ant.makedmg.result" />
	</target>
	<target name="build-win32-64bit">
		<build basedir="${basedir}" os="win32" arch="x86_64" version="${jame.version}" resultproperty="ant.build.result" />
		<makezip basedir="${basedir}" os="win32" arch="x86_64" version="${jame.version}" resultproperty="ant.makezip.result" />
	</target>
	<target name="build-linux-64bit">
		<build basedir="${basedir}" os="linux" arch="x86_64" version="${jame.version}" resultproperty="ant.build.result" />
		<makezip basedir="${basedir}" os="linux" arch="x86_64" version="${jame.version}" resultproperty="ant.makezip.result" />
	</target>
	<target name="build-macos" depends="build-macos-64bit" if="is_macosx" />
	<target name="build-win32" depends="build-win32-64bit" />
	<target name="build-linux" depends="build-linux-64bit" />
	<target name="build" depends="build-macos, build-win32, build-linux" />
	<target name="all" depends="clean, update-version, build" />
</project>
