/* This file was generated by SableCC (http://www.sablecc.org/). */

package net.sf.jame.contextfree.cfdg.node;

import net.sf.jame.contextfree.cfdg.analysis.*;

@SuppressWarnings("nls")
public final class ABackgroundCfdgDeclaration extends PCfdgDeclaration
{
    private PBackgroundDeclaration _backgroundDeclaration_;

    public ABackgroundCfdgDeclaration()
    {
        // Constructor
    }

    public ABackgroundCfdgDeclaration(
        @SuppressWarnings("hiding") PBackgroundDeclaration _backgroundDeclaration_)
    {
        // Constructor
        setBackgroundDeclaration(_backgroundDeclaration_);

    }

    @Override
    public Object clone()
    {
        return new ABackgroundCfdgDeclaration(
            cloneNode(this._backgroundDeclaration_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseABackgroundCfdgDeclaration(this);
    }

    public PBackgroundDeclaration getBackgroundDeclaration()
    {
        return this._backgroundDeclaration_;
    }

    public void setBackgroundDeclaration(PBackgroundDeclaration node)
    {
        if(this._backgroundDeclaration_ != null)
        {
            this._backgroundDeclaration_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._backgroundDeclaration_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._backgroundDeclaration_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._backgroundDeclaration_ == child)
        {
            this._backgroundDeclaration_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._backgroundDeclaration_ == oldChild)
        {
            setBackgroundDeclaration((PBackgroundDeclaration) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
