/* This file was generated by SableCC (http://www.sablecc.org/). */

package net.sf.jame.contextfree.cfdg.node;

import net.sf.jame.contextfree.cfdg.analysis.*;

@SuppressWarnings("nls")
public final class ACurrentColorAdjustment extends PColorAdjustment
{
    private PCurrentColorAdjustment _currentColorAdjustment_;

    public ACurrentColorAdjustment()
    {
        // Constructor
    }

    public ACurrentColorAdjustment(
        @SuppressWarnings("hiding") PCurrentColorAdjustment _currentColorAdjustment_)
    {
        // Constructor
        setCurrentColorAdjustment(_currentColorAdjustment_);

    }

    @Override
    public Object clone()
    {
        return new ACurrentColorAdjustment(
            cloneNode(this._currentColorAdjustment_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseACurrentColorAdjustment(this);
    }

    public PCurrentColorAdjustment getCurrentColorAdjustment()
    {
        return this._currentColorAdjustment_;
    }

    public void setCurrentColorAdjustment(PCurrentColorAdjustment node)
    {
        if(this._currentColorAdjustment_ != null)
        {
            this._currentColorAdjustment_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._currentColorAdjustment_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._currentColorAdjustment_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._currentColorAdjustment_ == child)
        {
            this._currentColorAdjustment_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._currentColorAdjustment_ == oldChild)
        {
            setCurrentColorAdjustment((PCurrentColorAdjustment) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
