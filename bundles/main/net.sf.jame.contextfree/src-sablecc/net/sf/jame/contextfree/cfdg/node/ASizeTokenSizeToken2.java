/* This file was generated by SableCC (http://www.sablecc.org/). */

package net.sf.jame.contextfree.cfdg.node;

import net.sf.jame.contextfree.cfdg.analysis.Analysis;

@SuppressWarnings("nls")
public final class ASizeTokenSizeToken2 extends PSizeToken2
{
    private TSizeToken _sizeToken_;

    public ASizeTokenSizeToken2()
    {
        // Constructor
    }

    public ASizeTokenSizeToken2(
        @SuppressWarnings("hiding") TSizeToken _sizeToken_)
    {
        // Constructor
        setSizeToken(_sizeToken_);

    }

    @Override
    public Object clone()
    {
        return new ASizeTokenSizeToken2(
            cloneNode(this._sizeToken_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseASizeTokenSizeToken2(this);
    }

    public TSizeToken getSizeToken()
    {
        return this._sizeToken_;
    }

    public void setSizeToken(TSizeToken node)
    {
        if(this._sizeToken_ != null)
        {
            this._sizeToken_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._sizeToken_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._sizeToken_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._sizeToken_ == child)
        {
            this._sizeToken_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._sizeToken_ == oldChild)
        {
            setSizeToken((TSizeToken) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
