/* This file was generated by SableCC (http://www.sablecc.org/). */

package net.sf.jame.contextfree.cfdg.lexer;

import java.io.*;
import net.sf.jame.contextfree.cfdg.node.*;

@SuppressWarnings("nls")
public class Lexer
{
    protected Token token;
    protected State state = State.INITIAL;

    private PushbackReader in;
    private int line;
    private int pos;
    private boolean cr;
    private boolean eof;
    private final StringBuffer text = new StringBuffer();

    @SuppressWarnings("unused")
    protected void filter() throws LexerException, IOException
    {
        // Do nothing
    }

    public Lexer(@SuppressWarnings("hiding") PushbackReader in)
    {
        this.in = in;
    }
 
    public Token peek() throws LexerException, IOException
    {
        while(this.token == null)
        {
            this.token = getToken();
            filter();
        }

        return this.token;
    }

    public Token next() throws LexerException, IOException
    {
        while(this.token == null)
        {
            this.token = getToken();
            filter();
        }

        Token result = this.token;
        this.token = null;
        return result;
    }

    protected Token getToken() throws IOException, LexerException
    {
        int dfa_state = 0;

        int start_pos = this.pos;
        int start_line = this.line;

        int accept_state = -1;
        int accept_token = -1;
        int accept_length = -1;
        int accept_pos = -1;
        int accept_line = -1;

        @SuppressWarnings("hiding") int[][][] gotoTable = Lexer.gotoTable[this.state.id()];
        @SuppressWarnings("hiding") int[] accept = Lexer.accept[this.state.id()];
        this.text.setLength(0);

        while(true)
        {
            int c = getChar();

            if(c != -1)
            {
                switch(c)
                {
                case 10:
                    if(this.cr)
                    {
                        this.cr = false;
                    }
                    else
                    {
                        this.line++;
                        this.pos = 0;
                    }
                    break;
                case 13:
                    this.line++;
                    this.pos = 0;
                    this.cr = true;
                    break;
                default:
                    this.pos++;
                    this.cr = false;
                    break;
                }

                this.text.append((char) c);

                do
                {
                    int oldState = (dfa_state < -1) ? (-2 -dfa_state) : dfa_state;

                    dfa_state = -1;

                    int[][] tmp1 =  gotoTable[oldState];
                    int low = 0;
                    int high = tmp1.length - 1;

                    while(low <= high)
                    {
                        int middle = (low + high) / 2;
                        int[] tmp2 = tmp1[middle];

                        if(c < tmp2[0])
                        {
                            high = middle - 1;
                        }
                        else if(c > tmp2[1])
                        {
                            low = middle + 1;
                        }
                        else
                        {
                            dfa_state = tmp2[2];
                            break;
                        }
                    }
                }while(dfa_state < -1);
            }
            else
            {
                dfa_state = -1;
            }

            if(dfa_state >= 0)
            {
                if(accept[dfa_state] != -1)
                {
                    accept_state = dfa_state;
                    accept_token = accept[dfa_state];
                    accept_length = this.text.length();
                    accept_pos = this.pos;
                    accept_line = this.line;
                }
            }
            else
            {
                if(accept_state != -1)
                {
                    switch(accept_token)
                    {
                    case 0:
                        {
                            @SuppressWarnings("hiding") Token token = new0(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 1:
                        {
                            @SuppressWarnings("hiding") Token token = new1(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 2:
                        {
                            @SuppressWarnings("hiding") Token token = new2(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 3:
                        {
                            @SuppressWarnings("hiding") Token token = new3(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 4:
                        {
                            @SuppressWarnings("hiding") Token token = new4(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 5:
                        {
                            @SuppressWarnings("hiding") Token token = new5(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 6:
                        {
                            @SuppressWarnings("hiding") Token token = new6(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 7:
                        {
                            @SuppressWarnings("hiding") Token token = new7(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 8:
                        {
                            @SuppressWarnings("hiding") Token token = new8(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 9:
                        {
                            @SuppressWarnings("hiding") Token token = new9(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 10:
                        {
                            @SuppressWarnings("hiding") Token token = new10(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 11:
                        {
                            @SuppressWarnings("hiding") Token token = new11(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 12:
                        {
                            @SuppressWarnings("hiding") Token token = new12(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 13:
                        {
                            @SuppressWarnings("hiding") Token token = new13(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 14:
                        {
                            @SuppressWarnings("hiding") Token token = new14(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 15:
                        {
                            @SuppressWarnings("hiding") Token token = new15(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 16:
                        {
                            @SuppressWarnings("hiding") Token token = new16(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 17:
                        {
                            @SuppressWarnings("hiding") Token token = new17(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 18:
                        {
                            @SuppressWarnings("hiding") Token token = new18(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 19:
                        {
                            @SuppressWarnings("hiding") Token token = new19(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 20:
                        {
                            @SuppressWarnings("hiding") Token token = new20(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 21:
                        {
                            @SuppressWarnings("hiding") Token token = new21(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 22:
                        {
                            @SuppressWarnings("hiding") Token token = new22(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 23:
                        {
                            @SuppressWarnings("hiding") Token token = new23(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 24:
                        {
                            @SuppressWarnings("hiding") Token token = new24(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 25:
                        {
                            @SuppressWarnings("hiding") Token token = new25(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 26:
                        {
                            @SuppressWarnings("hiding") Token token = new26(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 27:
                        {
                            @SuppressWarnings("hiding") Token token = new27(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 28:
                        {
                            @SuppressWarnings("hiding") Token token = new28(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 29:
                        {
                            @SuppressWarnings("hiding") Token token = new29(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 30:
                        {
                            @SuppressWarnings("hiding") Token token = new30(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 31:
                        {
                            @SuppressWarnings("hiding") Token token = new31(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 32:
                        {
                            @SuppressWarnings("hiding") Token token = new32(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 33:
                        {
                            @SuppressWarnings("hiding") Token token = new33(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 34:
                        {
                            @SuppressWarnings("hiding") Token token = new34(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 35:
                        {
                            @SuppressWarnings("hiding") Token token = new35(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 36:
                        {
                            @SuppressWarnings("hiding") Token token = new36(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 37:
                        {
                            @SuppressWarnings("hiding") Token token = new37(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 38:
                        {
                            @SuppressWarnings("hiding") Token token = new38(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 39:
                        {
                            @SuppressWarnings("hiding") Token token = new39(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 40:
                        {
                            @SuppressWarnings("hiding") Token token = new40(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 41:
                        {
                            @SuppressWarnings("hiding") Token token = new41(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 42:
                        {
                            @SuppressWarnings("hiding") Token token = new42(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 43:
                        {
                            @SuppressWarnings("hiding") Token token = new43(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 44:
                        {
                            @SuppressWarnings("hiding") Token token = new44(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 45:
                        {
                            @SuppressWarnings("hiding") Token token = new45(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 46:
                        {
                            @SuppressWarnings("hiding") Token token = new46(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 47:
                        {
                            @SuppressWarnings("hiding") Token token = new47(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 48:
                        {
                            @SuppressWarnings("hiding") Token token = new48(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 49:
                        {
                            @SuppressWarnings("hiding") Token token = new49(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 50:
                        {
                            @SuppressWarnings("hiding") Token token = new50(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 51:
                        {
                            @SuppressWarnings("hiding") Token token = new51(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 52:
                        {
                            @SuppressWarnings("hiding") Token token = new52(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 53:
                        {
                            @SuppressWarnings("hiding") Token token = new53(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 54:
                        {
                            @SuppressWarnings("hiding") Token token = new54(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    }
                }
                else
                {
                    if(this.text.length() > 0)
                    {
                        throw new LexerException(
                            "[" + (start_line + 1) + "," + (start_pos + 1) + "]" +
                            " Unknown token: " + this.text);
                    }

                    @SuppressWarnings("hiding") EOF token = new EOF(
                        start_line + 1,
                        start_pos + 1);
                    return token;
                }
            }
        }
    }

    Token new0(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TBar(line, pos); }
    Token new1(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TStar(line, pos); }
    Token new2(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TPlus(line, pos); }
    Token new3(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TMinus(line, pos); }
    Token new4(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TSlash(line, pos); }
    Token new5(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TArrow(line, pos); }
    Token new6(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TComma(line, pos); }
    Token new7(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TLCbkt(line, pos); }
    Token new8(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TRCbkt(line, pos); }
    Token new9(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TLRbkt(line, pos); }
    Token new10(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TRRbkt(line, pos); }
    Token new11(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TLSbkt(line, pos); }
    Token new12(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TRSbkt(line, pos); }
    Token new13(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TStartshape(line, pos); }
    Token new14(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TBackground(line, pos); }
    Token new15(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TInclude(line, pos); }
    Token new16(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TTile(line, pos); }
    Token new17(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TSize(line, pos); }
    Token new18(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TRule(line, pos); }
    Token new19(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TPath(line, pos); }
    Token new20(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TShape(line, pos); }
    Token new21(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TSizeToken(text, line, pos); }
    Token new22(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new THueToken(text, line, pos); }
    Token new23(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TSaturationToken(text, line, pos); }
    Token new24(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TBrightnessToken(text, line, pos); }
    Token new25(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TAlphaToken(text, line, pos); }
    Token new26(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TTargetHueToken(text, line, pos); }
    Token new27(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TTargetSaturationToken(text, line, pos); }
    Token new28(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TTargetBrightnessToken(text, line, pos); }
    Token new29(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TTargetAlphaToken(text, line, pos); }
    Token new30(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TXToken(line, pos); }
    Token new31(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TYToken(line, pos); }
    Token new32(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TZToken(line, pos); }
    Token new33(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TX1Token(line, pos); }
    Token new34(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TY1Token(line, pos); }
    Token new35(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TX2Token(line, pos); }
    Token new36(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TY2Token(line, pos); }
    Token new37(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TRxToken(line, pos); }
    Token new38(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TRyToken(line, pos); }
    Token new39(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TParametersToken(text, line, pos); }
    Token new40(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TRotateToken(text, line, pos); }
    Token new41(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TFlipToken(text, line, pos); }
    Token new42(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TSkewToken(line, pos); }
    Token new43(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TStrokewidthToken(line, pos); }
    Token new44(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TCommand(text, line, pos); }
    Token new45(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TOperation(text, line, pos); }
    Token new46(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TFunctionArg0(line, pos); }
    Token new47(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TFunctionArg1(text, line, pos); }
    Token new48(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TFunctionArg2(text, line, pos); }
    Token new49(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TFilename(text, line, pos); }
    Token new50(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TString(text, line, pos); }
    Token new51(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TNumber(text, line, pos); }
    Token new52(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TWhiteSpace(text, line, pos); }
    Token new53(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TLineComment(text, line, pos); }
    Token new54(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TBlockComment(text, line, pos); }

    private int getChar() throws IOException
    {
        if(this.eof)
        {
            return -1;
        }

        int result = this.in.read();

        if(result == -1)
        {
            this.eof = true;
        }

        return result;
    }

    private void pushBack(int acceptLength) throws IOException
    {
        int length = this.text.length();
        for(int i = length - 1; i >= acceptLength; i--)
        {
            this.eof = false;

            this.in.unread(this.text.charAt(i));
        }
    }

    protected void unread(@SuppressWarnings("hiding") Token token) throws IOException
    {
        @SuppressWarnings("hiding") String text = token.getText();
        int length = text.length();

        for(int i = length - 1; i >= 0; i--)
        {
            this.eof = false;

            this.in.unread(text.charAt(i));
        }

        this.pos = token.getPos() - 1;
        this.line = token.getLine() - 1;
    }

    private String getText(int acceptLength)
    {
        StringBuffer s = new StringBuffer(acceptLength);
        for(int i = 0; i < acceptLength; i++)
        {
            s.append(this.text.charAt(i));
        }

        return s.toString();
    }

    private static int[][][][] gotoTable;
/*  {
        { // INITIAL
            {{9, 9, 1}, {10, 10, 2}, {12, 12, 3}, {13, 13, 4}, {32, 32, 5}, {34, 34, 6}, {35, 35, 7}, {36, 36, 8}, {40, 40, 9}, {41, 41, 10}, {42, 42, 11}, {43, 43, 12}, {44, 44, 13}, {45, 45, 14}, {46, 46, 15}, {47, 47, 16}, {48, 48, 17}, {49, 57, 18}, {65, 65, 19}, {66, 66, 20}, {67, 67, 21}, {68, 69, 20}, {70, 70, 22}, {71, 75, 20}, {76, 76, 23}, {77, 77, 24}, {78, 82, 20}, {83, 83, 25}, {84, 90, 20}, {91, 91, 26}, {93, 93, 27}, {94, 94, 28}, {95, 95, 29}, {97, 97, 30}, {98, 98, 31}, {99, 99, 32}, {100, 100, 33}, {101, 101, 34}, {102, 102, 35}, {103, 103, 33}, {104, 104, 36}, {105, 105, 37}, {106, 107, 33}, {108, 108, 38}, {109, 109, 39}, {110, 111, 33}, {112, 112, 40}, {113, 113, 33}, {114, 114, 41}, {115, 115, 42}, {116, 116, 43}, {117, 118, 33}, {119, 119, 44}, {120, 120, 45}, {121, 121, 46}, {122, 122, 47}, {123, 123, 48}, {124, 124, 49}, {125, 125, 50}, {170, 170, 51}, {181, 181, 52}, {186, 186, 53}, {192, 214, 54}, {216, 246, 55}, {248, 501, 56}, {506, 535, 57}, {592, 680, 58}, {688, 696, 59}, {699, 705, 60}, {720, 721, 61}, {736, 740, 62}, {890, 890, 63}, {902, 902, 64}, {904, 906, 65}, {908, 908, 66}, {910, 929, 67}, {931, 974, 68}, {976, 982, 69}, {986, 986, 70}, {988, 988, 71}, {990, 990, 72}, {992, 992, 73}, {994, 1011, 74}, {1025, 1036, 75}, {1038, 1103, 76}, {1105, 1116, 77}, {1118, 1153, 78}, {1168, 1220, 79}, {1223, 1224, 80}, {1227, 1228, 81}, {1232, 1259, 82}, {1262, 1269, 83}, {1272, 1273, 84}, {1329, 1366, 85}, {1369, 1369, 86}, {1377, 1415, 87}, {1488, 1514, 88}, {1520, 1522, 89}, {1569, 1594, 90}, {1600, 1610, 91}, {1632, 1641, 92}, {1649, 1719, 93}, {1722, 1726, 94}, {1728, 1742, 95}, {1744, 1747, 96}, {1749, 1749, 97}, {1765, 1766, 98}, {1776, 1785, 99}, {2309, 2361, 100}, {2365, 2365, 101}, {2392, 2401, 102}, {2406, 2415, 103}, {2437, 2444, 104}, {2447, 2448, 105}, {2451, 2472, 106}, {2474, 2480, 107}, {2482, 2482, 108}, {2486, 2489, 109}, {2524, 2525, 110}, {2527, 2529, 111}, {2534, 2543, 112}, {2544, 2545, 113}, {2565, 2570, 114}, {2575, 2576, 115}, {2579, 2600, 116}, {2602, 2608, 117}, {2610, 2611, 118}, {2613, 2614, 119}, {2616, 2617, 120}, {2649, 2652, 121}, {2654, 2654, 122}, {2662, 2671, 123}, {2674, 2676, 124}, {2693, 2699, 125}, {2701, 2701, 126}, {2703, 2705, 127}, {2707, 2728, 128}, {2730, 2736, 129}, {2738, 2739, 130}, {2741, 2745, 131}, {2749, 2749, 132}, {2784, 2784, 133}, {2790, 2799, 134}, {2821, 2828, 135}, {2831, 2832, 136}, {2835, 2856, 137}, {2858, 2864, 138}, {2866, 2867, 139}, {2870, 2873, 140}, {2877, 2877, 141}, {2908, 2909, 142}, {2911, 2913, 143}, {2918, 2927, 144}, {2949, 2954, 145}, {2958, 2960, 146}, {2962, 2965, 147}, {2969, 2970, 148}, {2972, 2972, 149}, {2974, 2975, 150}, {2979, 2980, 151}, {2984, 2986, 152}, {2990, 2997, 153}, {2999, 3001, 154}, {3047, 3055, 155}, {3077, 3084, 156}, {3086, 3088, 157}, {3090, 3112, 158}, {3114, 3123, 159}, {3125, 3129, 160}, {3168, 3169, 161}, {3174, 3183, 162}, {3205, 3212, 163}, {3214, 3216, 164}, {3218, 3240, 165}, {3242, 3251, 166}, {3253, 3257, 167}, {3294, 3294, 168}, {3296, 3297, 169}, {3302, 3311, 170}, {3333, 3340, 171}, {3342, 3344, 172}, {3346, 3368, 173}, {3370, 3385, 174}, {3424, 3425, 175}, {3430, 3439, 176}, {3585, 3630, 177}, {3632, 3632, 178}, {3634, 3635, 179}, {3648, 3654, 180}, {3664, 3673, 181}, {3713, 3714, 182}, {3716, 3716, 183}, {3719, 3720, 184}, {3722, 3722, 185}, {3725, 3725, 186}, {3732, 3735, 187}, {3737, 3743, 188}, {3745, 3747, 189}, {3749, 3749, 190}, {3751, 3751, 191}, {3754, 3755, 192}, {3757, 3758, 193}, {3760, 3760, 194}, {3762, 3763, 195}, {3773, 3773, 196}, {3776, 3780, 197}, {3782, 3782, 198}, {3792, 3801, 199}, {3804, 3805, 200}, {3872, 3881, 201}, {3904, 3911, 202}, {3913, 3945, 203}, {4256, 4293, 204}, {4304, 4342, 205}, {4352, 4441, 206}, {4447, 4514, 207}, {4520, 4601, 208}, {7680, 7835, 209}, {7840, 7929, 210}, {7936, 7957, 211}, {7960, 7965, 212}, {7968, 8005, 213}, {8008, 8013, 214}, {8016, 8023, 215}, {8025, 8025, 216}, {8027, 8027, 217}, {8029, 8029, 218}, {8031, 8061, 219}, {8064, 8116, 220}, {8118, 8124, 221}, {8126, 8126, 222}, {8130, 8132, 223}, {8134, 8140, 224}, {8144, 8147, 225}, {8150, 8155, 226}, {8160, 8172, 227}, {8178, 8180, 228}, {8182, 8188, 229}, {8319, 8319, 230}, {8450, 8450, 231}, {8455, 8455, 232}, {8458, 8467, 233}, {8469, 8469, 234}, {8472, 8477, 235}, {8484, 8484, 236}, {8486, 8486, 237}, {8488, 8488, 238}, {8490, 8497, 239}, {8499, 8504, 240}, {12293, 12293, 241}, {12337, 12341, 242}, {12353, 12436, 243}, {12443, 12446, 244}, {12449, 12538, 245}, {12540, 12542, 246}, {12549, 12588, 247}, {12593, 12686, 248}, {19968, 40869, 249}, {44032, 55203, 250}, {63744, 64045, 251}, {64256, 64262, 252}, {64275, 64279, 253}, {64287, 64296, 254}, {64298, 64310, 255}, {64312, 64316, 256}, {64318, 64318, 257}, {64320, 64321, 258}, {64323, 64324, 259}, {64326, 64433, 260}, {64467, 64829, 261}, {64848, 64911, 262}, {64914, 64967, 263}, {65008, 65019, 264}, {65136, 65138, 265}, {65140, 65140, 266}, {65142, 65276, 267}, {65296, 65305, 268}, {65313, 65338, 269}, {65345, 65370, 270}, {65382, 65470, 271}, {65474, 65479, 272}, {65482, 65487, 273}, {65490, 65495, 274}, {65498, 65500, 275}, },
            {{9, 32, -2}, },
            {{9, 32, -2}, },
            {{9, 32, -2}, },
            {{9, 9, 1}, {10, 10, 276}, {12, 32, -2}, },
            {{9, 32, -2}, },
            {{36, 36, 277}, {48, 57, 278}, {65, 90, 279}, {95, 95, 280}, {97, 122, 281}, {170, 170, 282}, {181, 181, 283}, {186, 186, 284}, {192, 214, 285}, {216, 246, 286}, {248, 501, 287}, {506, 535, 288}, {592, 680, 289}, {688, 696, 290}, {699, 705, 291}, {720, 721, 292}, {736, 740, 293}, {890, 890, 294}, {902, 902, 295}, {904, 906, 296}, {908, 908, 297}, {910, 929, 298}, {931, 974, 299}, {976, 982, 300}, {986, 986, 301}, {988, 988, 302}, {990, 990, 303}, {992, 992, 304}, {994, 1011, 305}, {1025, 1036, 306}, {1038, 1103, 307}, {1105, 1116, 308}, {1118, 1153, 309}, {1168, 1220, 310}, {1223, 1224, 311}, {1227, 1228, 312}, {1232, 1259, 313}, {1262, 1269, 314}, {1272, 1273, 315}, {1329, 1366, 316}, {1369, 1369, 317}, {1377, 1415, 318}, {1488, 1514, 319}, {1520, 1522, 320}, {1569, 1594, 321}, {1600, 1610, 322}, {1632, 1641, 323}, {1649, 1719, 324}, {1722, 1726, 325}, {1728, 1742, 326}, {1744, 1747, 327}, {1749, 1749, 328}, {1765, 1766, 329}, {1776, 1785, 330}, {2309, 2361, 331}, {2365, 2365, 332}, {2392, 2401, 333}, {2406, 2415, 334}, {2437, 2444, 335}, {2447, 2448, 336}, {2451, 2472, 337}, {2474, 2480, 338}, {2482, 2482, 339}, {2486, 2489, 340}, {2524, 2525, 341}, {2527, 2529, 342}, {2534, 2543, 343}, {2544, 2545, 344}, {2565, 2570, 345}, {2575, 2576, 346}, {2579, 2600, 347}, {2602, 2608, 348}, {2610, 2611, 349}, {2613, 2614, 350}, {2616, 2617, 351}, {2649, 2652, 352}, {2654, 2654, 353}, {2662, 2671, 354}, {2674, 2676, 355}, {2693, 2699, 356}, {2701, 2701, 357}, {2703, 2705, 358}, {2707, 2728, 359}, {2730, 2736, 360}, {2738, 2739, 361}, {2741, 2745, 362}, {2749, 2749, 363}, {2784, 2784, 364}, {2790, 2799, 365}, {2821, 2828, 366}, {2831, 2832, 367}, {2835, 2856, 368}, {2858, 2864, 369}, {2866, 2867, 370}, {2870, 2873, 371}, {2877, 2877, 372}, {2908, 2909, 373}, {2911, 2913, 374}, {2918, 2927, 375}, {2949, 2954, 376}, {2958, 2960, 377}, {2962, 2965, 378}, {2969, 2970, 379}, {2972, 2972, 380}, {2974, 2975, 381}, {2979, 2980, 382}, {2984, 2986, 383}, {2990, 2997, 384}, {2999, 3001, 385}, {3047, 3055, 386}, {3077, 3084, 387}, {3086, 3088, 388}, {3090, 3112, 389}, {3114, 3123, 390}, {3125, 3129, 391}, {3168, 3169, 392}, {3174, 3183, 393}, {3205, 3212, 394}, {3214, 3216, 395}, {3218, 3240, 396}, {3242, 3251, 397}, {3253, 3257, 398}, {3294, 3294, 399}, {3296, 3297, 400}, {3302, 3311, 401}, {3333, 3340, 402}, {3342, 3344, 403}, {3346, 3368, 404}, {3370, 3385, 405}, {3424, 3425, 406}, {3430, 3439, 407}, {3585, 3630, 408}, {3632, 3632, 409}, {3634, 3635, 410}, {3648, 3654, 411}, {3664, 3673, 412}, {3713, 3714, 413}, {3716, 3716, 414}, {3719, 3720, 415}, {3722, 3722, 416}, {3725, 3725, 417}, {3732, 3735, 418}, {3737, 3743, 419}, {3745, 3747, 420}, {3749, 3749, 421}, {3751, 3751, 422}, {3754, 3755, 423}, {3757, 3758, 424}, {3760, 3760, 425}, {3762, 3763, 426}, {3773, 3773, 427}, {3776, 3780, 428}, {3782, 3782, 429}, {3792, 3801, 430}, {3804, 3805, 431}, {3872, 3881, 432}, {3904, 3911, 433}, {3913, 3945, 434}, {4256, 4293, 435}, {4304, 4342, 436}, {4352, 4441, 437}, {4447, 4514, 438}, {4520, 4601, 439}, {7680, 7835, 440}, {7840, 7929, 441}, {7936, 7957, 442}, {7960, 7965, 443}, {7968, 8005, 444}, {8008, 8013, 445}, {8016, 8023, 446}, {8025, 8025, 447}, {8027, 8027, 448}, {8029, 8029, 449}, {8031, 8061, 450}, {8064, 8116, 451}, {8118, 8124, 452}, {8126, 8126, 453}, {8130, 8132, 454}, {8134, 8140, 455}, {8144, 8147, 456}, {8150, 8155, 457}, {8160, 8172, 458}, {8178, 8180, 459}, {8182, 8188, 460}, {8319, 8319, 461}, {8450, 8450, 462}, {8455, 8455, 463}, {8458, 8467, 464}, {8469, 8469, 465}, {8472, 8477, 466}, {8484, 8484, 467}, {8486, 8486, 468}, {8488, 8488, 469}, {8490, 8497, 470}, {8499, 8504, 471}, {12293, 12293, 472}, {12337, 12341, 473}, {12353, 12436, 474}, {12443, 12446, 475}, {12449, 12538, 476}, {12540, 12542, 477}, {12549, 12588, 478}, {12593, 12686, 479}, {19968, 40869, 480}, {44032, 55203, 481}, {63744, 64045, 482}, {64256, 64262, 483}, {64275, 64279, 484}, {64287, 64296, 485}, {64298, 64310, 486}, {64312, 64316, 487}, {64318, 64318, 488}, {64320, 64321, 489}, {64323, 64324, 490}, {64326, 64433, 491}, {64467, 64829, 492}, {64848, 64911, 493}, {64914, 64967, 494}, {65008, 65019, 495}, {65136, 65138, 496}, {65140, 65140, 497}, {65142, 65276, 498}, {65296, 65305, 499}, {65313, 65338, 500}, {65345, 65370, 501}, {65382, 65470, 502}, {65474, 65479, 503}, {65482, 65487, 504}, {65490, 65495, 505}, {65498, 65500, 506}, },
            {{0, 9, 507}, {10, 10, 508}, {11, 12, 507}, {13, 13, 509}, {14, 65535, 507}, },
            {{36, 36, 510}, {46, 46, 511}, {48, 57, 512}, {65, 90, 513}, {95, 95, 514}, {97, 122, 515}, {170, 170, 516}, {181, 181, 517}, {186, 186, 518}, {192, 214, 519}, {216, 246, 520}, {248, 501, 521}, {506, 535, 522}, {592, 680, 523}, {688, 696, 524}, {699, 705, 525}, {720, 721, 526}, {736, 740, 527}, {890, 890, 528}, {902, 902, 529}, {904, 906, 530}, {908, 908, 531}, {910, 929, 532}, {931, 974, 533}, {976, 982, 534}, {986, 986, 535}, {988, 988, 536}, {990, 990, 537}, {992, 992, 538}, {994, 1011, 539}, {1025, 1036, 540}, {1038, 1103, 541}, {1105, 1116, 542}, {1118, 1153, 543}, {1168, 1220, 544}, {1223, 1224, 545}, {1227, 1228, 546}, {1232, 1259, 547}, {1262, 1269, 548}, {1272, 1273, 549}, {1329, 1366, 550}, {1369, 1369, 551}, {1377, 1415, 552}, {1488, 1514, 553}, {1520, 1522, 554}, {1569, 1594, 555}, {1600, 1610, 556}, {1632, 1641, 557}, {1649, 1719, 558}, {1722, 1726, 559}, {1728, 1742, 560}, {1744, 1747, 561}, {1749, 1749, 562}, {1765, 1766, 563}, {1776, 1785, 564}, {2309, 2361, 565}, {2365, 2365, 566}, {2392, 2401, 567}, {2406, 2415, 568}, {2437, 2444, 569}, {2447, 2448, 570}, {2451, 2472, 571}, {2474, 2480, 572}, {2482, 2482, 573}, {2486, 2489, 574}, {2524, 2525, 575}, {2527, 2529, 576}, {2534, 2543, 577}, {2544, 2545, 578}, {2565, 2570, 579}, {2575, 2576, 580}, {2579, 2600, 581}, {2602, 2608, 582}, {2610, 2611, 583}, {2613, 2614, 584}, {2616, 2617, 585}, {2649, 2652, 586}, {2654, 2654, 587}, {2662, 2671, 588}, {2674, 2676, 589}, {2693, 2699, 590}, {2701, 2701, 591}, {2703, 2705, 592}, {2707, 2728, 593}, {2730, 2736, 594}, {2738, 2739, 595}, {2741, 2745, 596}, {2749, 2749, 597}, {2784, 2784, 598}, {2790, 2799, 599}, {2821, 2828, 600}, {2831, 2832, 601}, {2835, 2856, 602}, {2858, 2864, 603}, {2866, 2867, 604}, {2870, 2873, 605}, {2877, 2877, 606}, {2908, 2909, 607}, {2911, 2913, 608}, {2918, 2927, 609}, {2949, 2954, 610}, {2958, 2960, 611}, {2962, 2965, 612}, {2969, 2970, 613}, {2972, 2972, 614}, {2974, 2975, 615}, {2979, 2980, 616}, {2984, 2986, 617}, {2990, 2997, 618}, {2999, 3001, 619}, {3047, 3055, 620}, {3077, 3084, 621}, {3086, 3088, 622}, {3090, 3112, 623}, {3114, 3123, 624}, {3125, 3129, 625}, {3168, 3169, 626}, {3174, 3183, 627}, {3205, 3212, 628}, {3214, 3216, 629}, {3218, 3240, 630}, {3242, 3251, 631}, {3253, 3257, 632}, {3294, 3294, 633}, {3296, 3297, 634}, {3302, 3311, 635}, {3333, 3340, 636}, {3342, 3344, 637}, {3346, 3368, 638}, {3370, 3385, 639}, {3424, 3425, 640}, {3430, 3439, 641}, {3585, 3630, 642}, {3632, 3632, 643}, {3634, 3635, 644}, {3648, 3654, 645}, {3664, 3673, 646}, {3713, 3714, 647}, {3716, 3716, 648}, {3719, 3720, 649}, {3722, 3722, 650}, {3725, 3725, 651}, {3732, 3735, 652}, {3737, 3743, 653}, {3745, 3747, 654}, {3749, 3749, 655}, {3751, 3751, 656}, {3754, 3755, 657}, {3757, 3758, 658}, {3760, 3760, 659}, {3762, 3763, 660}, {3773, 3773, 661}, {3776, 3780, 662}, {3782, 3782, 663}, {3792, 3801, 664}, {3804, 3805, 665}, {3872, 3881, 666}, {3904, 3911, 667}, {3913, 3945, 668}, {4256, 4293, 669}, {4304, 4342, 670}, {4352, 4441, 671}, {4447, 4514, 672}, {4520, 4601, 673}, {7680, 7835, 674}, {7840, 7929, 675}, {7936, 7957, 676}, {7960, 7965, 677}, {7968, 8005, 678}, {8008, 8013, 679}, {8016, 8023, 680}, {8025, 8025, 681}, {8027, 8027, 682}, {8029, 8029, 683}, {8031, 8061, 684}, {8064, 8116, 685}, {8118, 8124, 686}, {8126, 8126, 687}, {8130, 8132, 688}, {8134, 8140, 689}, {8144, 8147, 690}, {8150, 8155, 691}, {8160, 8172, 692}, {8178, 8180, 693}, {8182, 8188, 694}, {8319, 8319, 695}, {8450, 8450, 696}, {8455, 8455, 697}, {8458, 8467, 698}, {8469, 8469, 699}, {8472, 8477, 700}, {8484, 8484, 701}, {8486, 8486, 702}, {8488, 8488, 703}, {8490, 8497, 704}, {8499, 8504, 705}, {12293, 12293, 706}, {12337, 12341, 707}, {12353, 12436, 708}, {12443, 12446, 709}, {12449, 12538, 710}, {12540, 12542, 711}, {12549, 12588, 712}, {12593, 12686, 713}, {19968, 40869, 714}, {44032, 55203, 715}, {63744, 64045, 716}, {64256, 64262, 717}, {64275, 64279, 718}, {64287, 64296, 719}, {64298, 64310, 720}, {64312, 64316, 721}, {64318, 64318, 722}, {64320, 64321, 723}, {64323, 64324, 724}, {64326, 64433, 725}, {64467, 64829, 726}, {64848, 64911, 727}, {64914, 64967, 728}, {65008, 65019, 729}, {65136, 65138, 730}, {65140, 65140, 731}, {65142, 65276, 732}, {65296, 65305, 733}, {65313, 65338, 734}, {65345, 65370, 735}, {65382, 65470, 736}, {65474, 65479, 737}, {65482, 65487, 738}, {65490, 65495, 739}, {65498, 65500, 740}, },
            {},
            {},
            {},
            {{46, 46, 15}, {48, 48, 741}, {49, 57, 742}, },
            {},
            {{46, 57, -14}, },
            {{48, 57, 743}, },
            {{42, 42, 744}, {47, 47, 745}, },
            {{36, 36, 746}, {46, 46, 747}, {48, 57, 748}, {65, 90, 749}, {95, 95, 750}, {97, 122, 751}, {170, 170, 752}, {181, 181, 753}, {186, 186, 754}, {192, 214, 755}, {216, 246, 756}, {248, 501, 757}, {506, 535, 758}, {592, 680, 759}, {688, 696, 760}, {699, 705, 761}, {720, 721, 762}, {736, 740, 763}, {890, 890, 764}, {902, 902, 765}, {904, 906, 766}, {908, 908, 767}, {910, 929, 768}, {931, 974, 769}, {976, 982, 770}, {986, 986, 771}, {988, 988, 772}, {990, 990, 773}, {992, 992, 774}, {994, 1011, 775}, {1025, 1036, 776}, {1038, 1103, 777}, {1105, 1116, 778}, {1118, 1153, 779}, {1168, 1220, 780}, {1223, 1224, 781}, {1227, 1228, 782}, {1232, 1259, 783}, {1262, 1269, 784}, {1272, 1273, 785}, {1329, 1366, 786}, {1369, 1369, 787}, {1377, 1415, 788}, {1488, 1514, 789}, {1520, 1522, 790}, {1569, 1594, 791}, {1600, 1610, 792}, {1632, 1641, 793}, {1649, 1719, 794}, {1722, 1726, 795}, {1728, 1742, 796}, {1744, 1747, 797}, {1749, 1749, 798}, {1765, 1766, 799}, {1776, 1785, 800}, {2309, 2361, 801}, {2365, 2365, 802}, {2392, 2401, 803}, {2406, 2415, 804}, {2437, 2444, 805}, {2447, 2448, 806}, {2451, 2472, 807}, {2474, 2480, 808}, {2482, 2482, 809}, {2486, 2489, 810}, {2524, 2525, 811}, {2527, 2529, 812}, {2534, 2543, 813}, {2544, 2545, 814}, {2565, 2570, 815}, {2575, 2576, 816}, {2579, 2600, 817}, {2602, 2608, 818}, {2610, 2611, 819}, {2613, 2614, 820}, {2616, 2617, 821}, {2649, 2652, 822}, {2654, 2654, 823}, {2662, 2671, 824}, {2674, 2676, 825}, {2693, 2699, 826}, {2701, 2701, 827}, {2703, 2705, 828}, {2707, 2728, 829}, {2730, 2736, 830}, {2738, 2739, 831}, {2741, 2745, 832}, {2749, 2749, 833}, {2784, 2784, 834}, {2790, 2799, 835}, {2821, 2828, 836}, {2831, 2832, 837}, {2835, 2856, 838}, {2858, 2864, 839}, {2866, 2867, 840}, {2870, 2873, 841}, {2877, 2877, 842}, {2908, 2909, 843}, {2911, 2913, 844}, {2918, 2927, 845}, {2949, 2954, 846}, {2958, 2960, 847}, {2962, 2965, 848}, {2969, 2970, 849}, {2972, 2972, 850}, {2974, 2975, 851}, {2979, 2980, 852}, {2984, 2986, 853}, {2990, 2997, 854}, {2999, 3001, 855}, {3047, 3055, 856}, {3077, 3084, 857}, {3086, 3088, 858}, {3090, 3112, 859}, {3114, 3123, 860}, {3125, 3129, 861}, {3168, 3169, 862}, {3174, 3183, 863}, {3205, 3212, 864}, {3214, 3216, 865}, {3218, 3240, 866}, {3242, 3251, 867}, {3253, 3257, 868}, {3294, 3294, 869}, {3296, 3297, 870}, {3302, 3311, 871}, {3333, 3340, 872}, {3342, 3344, 873}, {3346, 3368, 874}, {3370, 3385, 875}, {3424, 3425, 876}, {3430, 3439, 877}, {3585, 3630, 878}, {3632, 3632, 879}, {3634, 3635, 880}, {3648, 3654, 881}, {3664, 3673, 882}, {3713, 3714, 883}, {3716, 3716, 884}, {3719, 3720, 885}, {3722, 3722, 886}, {3725, 3725, 887}, {3732, 3735, 888}, {3737, 3743, 889}, {3745, 3747, 890}, {3749, 3749, 891}, {3751, 3751, 892}, {3754, 3755, 893}, {3757, 3758, 894}, {3760, 3760, 895}, {3762, 3763, 896}, {3773, 3773, 897}, {3776, 3780, 898}, {3782, 3782, 899}, {3792, 3801, 900}, {3804, 3805, 901}, {3872, 3881, 902}, {3904, 3911, 903}, {3913, 3945, 904}, {4256, 4293, 905}, {4304, 4342, 906}, {4352, 4441, 907}, {4447, 4514, 908}, {4520, 4601, 909}, {7680, 7835, 910}, {7840, 7929, 911}, {7936, 7957, 912}, {7960, 7965, 913}, {7968, 8005, 914}, {8008, 8013, 915}, {8016, 8023, 916}, {8025, 8025, 917}, {8027, 8027, 918}, {8029, 8029, 919}, {8031, 8061, 920}, {8064, 8116, 921}, {8118, 8124, 922}, {8126, 8126, 923}, {8130, 8132, 924}, {8134, 8140, 925}, {8144, 8147, 926}, {8150, 8155, 927}, {8160, 8172, 928}, {8178, 8180, 929}, {8182, 8188, 930}, {8319, 8319, 931}, {8450, 8450, 932}, {8455, 8455, 933}, {8458, 8467, 934}, {8469, 8469, 935}, {8472, 8477, 936}, {8484, 8484, 937}, {8486, 8486, 938}, {8488, 8488, 939}, {8490, 8497, 940}, {8499, 8504, 941}, {12293, 12293, 942}, {12337, 12341, 943}, {12353, 12436, 944}, {12443, 12446, 945}, {12449, 12538, 946}, {12540, 12542, 947}, {12549, 12588, 948}, {12593, 12686, 949}, {19968, 40869, 950}, {44032, 55203, 951}, {63744, 64045, 952}, {64256, 64262, 953}, {64275, 64279, 954}, {64287, 64296, 955}, {64298, 64310, 956}, {64312, 64316, 957}, {64318, 64318, 958}, {64320, 64321, 959}, {64323, 64324, 960}, {64326, 64433, 961}, {64467, 64829, 962}, {64848, 64911, 963}, {64914, 64967, 964}, {65008, 65019, 965}, {65136, 65138, 966}, {65140, 65140, 967}, {65142, 65276, 968}, {65296, 65305, 969}, {65313, 65338, 970}, {65345, 65370, 971}, {65382, 65470, 972}, {65474, 65479, 973}, {65482, 65487, 974}, {65490, 65495, 975}, {65498, 65500, 976}, },
            {{36, 46, -19}, {48, 48, 977}, {49, 57, 978}, {65, 65500, -19}, },
            {{36, 57, -10}, {65, 81, 513}, {82, 82, 979}, {83, 90, 513}, {95, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 57, -10}, {65, 75, 513}, {76, 76, 980}, {77, 84, 513}, {85, 85, 981}, {86, 90, 513}, {95, 65500, -10}, },
            {{36, 57, -10}, {65, 72, 513}, {73, 73, 982}, {74, 90, 513}, {95, 65500, -10}, },
            {{36, 72, -24}, {73, 73, 983}, {74, 65500, -24}, },
            {{36, 57, -10}, {65, 78, 513}, {79, 79, 984}, {80, 90, 513}, {95, 65500, -10}, },
            {{36, 57, -10}, {65, 83, 513}, {84, 84, 985}, {85, 90, 513}, {95, 65500, -10}, },
            {},
            {},
            {},
            {{36, 65500, -10}, },
            {{36, 95, -10}, {97, 97, 515}, {98, 98, 986}, {99, 99, 987}, {100, 107, 515}, {108, 108, 988}, {109, 114, 515}, {115, 115, 989}, {116, 116, 990}, {117, 122, 515}, {170, 65500, -10}, },
            {{36, 95, -10}, {97, 97, 991}, {98, 113, 515}, {114, 114, 992}, {115, 122, 515}, {170, 65500, -10}, },
            {{36, 95, -10}, {97, 110, 515}, {111, 111, 993}, {112, 122, 515}, {170, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 95, -10}, {97, 119, 515}, {120, 120, 994}, {121, 122, 515}, {170, 65500, -10}, },
            {{36, 95, -10}, {97, 107, 515}, {108, 108, 995}, {109, 122, 515}, {170, 65500, -10}, },
            {{36, 95, -10}, {97, 116, 515}, {117, 117, 996}, {118, 120, 515}, {121, 121, 997}, {122, 122, 515}, {170, 65500, -10}, },
            {{36, 95, -10}, {97, 109, 515}, {110, 110, 998}, {111, 122, 515}, {170, 65500, -10}, },
            {{36, 110, -34}, {111, 111, 999}, {112, 65500, -34}, },
            {{36, 95, -10}, {97, 97, 1000}, {98, 104, 515}, {105, 105, 1001}, {106, 122, 515}, {170, 65500, -10}, },
            {{36, 95, -10}, {97, 97, 1002}, {98, 122, 515}, {170, 65500, -10}, },
            {{36, 109, -39}, {110, 110, 1003}, {111, 111, 1004}, {112, 116, 515}, {117, 117, 1005}, {118, 119, 515}, {120, 120, 1006}, {121, 121, 1007}, {122, 65500, -38}, },
            {{36, 95, -10}, {97, 97, 1008}, {98, 103, 515}, {104, 104, 1009}, {105, 105, 1010}, {106, 106, 515}, {107, 107, 1011}, {108, 112, 515}, {113, 113, 1012}, {114, 115, 515}, {116, 116, 1013}, {117, 65500, -32}, },
            {{36, 95, -10}, {97, 97, 1014}, {98, 104, 515}, {105, 105, 1015}, {106, 65500, -41}, },
            {{36, 95, -10}, {97, 104, 515}, {105, 105, 1016}, {106, 65500, -41}, },
            {{36, 46, -10}, {48, 48, 512}, {49, 49, 1017}, {50, 50, 1018}, {51, 57, 512}, {65, 65500, -10}, },
            {{36, 48, -47}, {49, 49, 1019}, {50, 50, 1020}, {51, 65500, -47}, },
            {{36, 65500, -10}, },
            {},
            {{97, 97, 1021}, {98, 98, 1022}, {104, 104, 1023}, {115, 115, 1024}, },
            {},
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 36, 746}, {46, 46, 511}, {48, 57, 1025}, {65, 65500, -19}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -94}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -94}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -94}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -94}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -94}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -94}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -94}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -94}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -94}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -94}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -94}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -94}, },
            {{36, 65500, -10}, },
            {{36, 65500, -94}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -94}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{9, 32, -2}, },
            {{36, 36, 1026}, {46, 46, 1027}, {48, 57, 1028}, {65, 90, 1029}, {95, 95, 1030}, {97, 122, 1031}, {170, 170, 1032}, {181, 181, 1033}, {186, 186, 1034}, {192, 214, 1035}, {216, 246, 1036}, {248, 501, 1037}, {506, 535, 1038}, {592, 680, 1039}, {688, 696, 1040}, {699, 705, 1041}, {720, 721, 1042}, {736, 740, 1043}, {890, 890, 1044}, {902, 902, 1045}, {904, 906, 1046}, {908, 908, 1047}, {910, 929, 1048}, {931, 974, 1049}, {976, 982, 1050}, {986, 986, 1051}, {988, 988, 1052}, {990, 990, 1053}, {992, 992, 1054}, {994, 1011, 1055}, {1025, 1036, 1056}, {1038, 1103, 1057}, {1105, 1116, 1058}, {1118, 1153, 1059}, {1168, 1220, 1060}, {1223, 1224, 1061}, {1227, 1228, 1062}, {1232, 1259, 1063}, {1262, 1269, 1064}, {1272, 1273, 1065}, {1329, 1366, 1066}, {1369, 1369, 1067}, {1377, 1415, 1068}, {1488, 1514, 1069}, {1520, 1522, 1070}, {1569, 1594, 1071}, {1600, 1610, 1072}, {1632, 1641, 1073}, {1649, 1719, 1074}, {1722, 1726, 1075}, {1728, 1742, 1076}, {1744, 1747, 1077}, {1749, 1749, 1078}, {1765, 1766, 1079}, {1776, 1785, 1080}, {2309, 2361, 1081}, {2365, 2365, 1082}, {2392, 2401, 1083}, {2406, 2415, 1084}, {2437, 2444, 1085}, {2447, 2448, 1086}, {2451, 2472, 1087}, {2474, 2480, 1088}, {2482, 2482, 1089}, {2486, 2489, 1090}, {2524, 2525, 1091}, {2527, 2529, 1092}, {2534, 2543, 1093}, {2544, 2545, 1094}, {2565, 2570, 1095}, {2575, 2576, 1096}, {2579, 2600, 1097}, {2602, 2608, 1098}, {2610, 2611, 1099}, {2613, 2614, 1100}, {2616, 2617, 1101}, {2649, 2652, 1102}, {2654, 2654, 1103}, {2662, 2671, 1104}, {2674, 2676, 1105}, {2693, 2699, 1106}, {2701, 2701, 1107}, {2703, 2705, 1108}, {2707, 2728, 1109}, {2730, 2736, 1110}, {2738, 2739, 1111}, {2741, 2745, 1112}, {2749, 2749, 1113}, {2784, 2784, 1114}, {2790, 2799, 1115}, {2821, 2828, 1116}, {2831, 2832, 1117}, {2835, 2856, 1118}, {2858, 2864, 1119}, {2866, 2867, 1120}, {2870, 2873, 1121}, {2877, 2877, 1122}, {2908, 2909, 1123}, {2911, 2913, 1124}, {2918, 2927, 1125}, {2949, 2954, 1126}, {2958, 2960, 1127}, {2962, 2965, 1128}, {2969, 2970, 1129}, {2972, 2972, 1130}, {2974, 2975, 1131}, {2979, 2980, 1132}, {2984, 2986, 1133}, {2990, 2997, 1134}, {2999, 3001, 1135}, {3047, 3055, 1136}, {3077, 3084, 1137}, {3086, 3088, 1138}, {3090, 3112, 1139}, {3114, 3123, 1140}, {3125, 3129, 1141}, {3168, 3169, 1142}, {3174, 3183, 1143}, {3205, 3212, 1144}, {3214, 3216, 1145}, {3218, 3240, 1146}, {3242, 3251, 1147}, {3253, 3257, 1148}, {3294, 3294, 1149}, {3296, 3297, 1150}, {3302, 3311, 1151}, {3333, 3340, 1152}, {3342, 3344, 1153}, {3346, 3368, 1154}, {3370, 3385, 1155}, {3424, 3425, 1156}, {3430, 3439, 1157}, {3585, 3630, 1158}, {3632, 3632, 1159}, {3634, 3635, 1160}, {3648, 3654, 1161}, {3664, 3673, 1162}, {3713, 3714, 1163}, {3716, 3716, 1164}, {3719, 3720, 1165}, {3722, 3722, 1166}, {3725, 3725, 1167}, {3732, 3735, 1168}, {3737, 3743, 1169}, {3745, 3747, 1170}, {3749, 3749, 1171}, {3751, 3751, 1172}, {3754, 3755, 1173}, {3757, 3758, 1174}, {3760, 3760, 1175}, {3762, 3763, 1176}, {3773, 3773, 1177}, {3776, 3780, 1178}, {3782, 3782, 1179}, {3792, 3801, 1180}, {3804, 3805, 1181}, {3872, 3881, 1182}, {3904, 3911, 1183}, {3913, 3945, 1184}, {4256, 4293, 1185}, {4304, 4342, 1186}, {4352, 4441, 1187}, {4447, 4514, 1188}, {4520, 4601, 1189}, {7680, 7835, 1190}, {7840, 7929, 1191}, {7936, 7957, 1192}, {7960, 7965, 1193}, {7968, 8005, 1194}, {8008, 8013, 1195}, {8016, 8023, 1196}, {8025, 8025, 1197}, {8027, 8027, 1198}, {8029, 8029, 1199}, {8031, 8061, 1200}, {8064, 8116, 1201}, {8118, 8124, 1202}, {8126, 8126, 1203}, {8130, 8132, 1204}, {8134, 8140, 1205}, {8144, 8147, 1206}, {8150, 8155, 1207}, {8160, 8172, 1208}, {8178, 8180, 1209}, {8182, 8188, 1210}, {8319, 8319, 1211}, {8450, 8450, 1212}, {8455, 8455, 1213}, {8458, 8467, 1214}, {8469, 8469, 1215}, {8472, 8477, 1216}, {8484, 8484, 1217}, {8486, 8486, 1218}, {8488, 8488, 1219}, {8490, 8497, 1220}, {8499, 8504, 1221}, {12293, 12293, 1222}, {12337, 12341, 1223}, {12353, 12436, 1224}, {12443, 12446, 1225}, {12449, 12538, 1226}, {12540, 12542, 1227}, {12549, 12588, 1228}, {12593, 12686, 1229}, {19968, 40869, 1230}, {44032, 55203, 1231}, {63744, 64045, 1232}, {64256, 64262, 1233}, {64275, 64279, 1234}, {64287, 64296, 1235}, {64298, 64310, 1236}, {64312, 64316, 1237}, {64318, 64318, 1238}, {64320, 64321, 1239}, {64323, 64324, 1240}, {64326, 64433, 1241}, {64467, 64829, 1242}, {64848, 64911, 1243}, {64914, 64967, 1244}, {65008, 65019, 1245}, {65136, 65138, 1246}, {65140, 65140, 1247}, {65142, 65276, 1248}, {65296, 65305, 1249}, {65313, 65338, 1250}, {65345, 65370, 1251}, {65382, 65470, 1252}, {65474, 65479, 1253}, {65482, 65487, 1254}, {65490, 65495, 1255}, {65498, 65500, 1256}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{0, 65535, -9}, },
            {},
            {{10, 10, 1257}, },
            {{36, 65500, -10}, },
            {{99, 99, 1258}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{46, 46, 1259}, {48, 57, 1260}, },
            {{46, 46, 1259}, {48, 48, 1261}, {49, 57, 1262}, },
            {{48, 57, 743}, },
            {{0, 9, 1263}, {10, 10, 1264}, {11, 12, 1263}, {13, 13, 1265}, {14, 41, 1263}, {42, 42, 1266}, {43, 46, 1263}, {47, 47, 1267}, {48, 65535, 1263}, },
            {{0, 65535, -9}, },
            {{36, 65500, -94}, },
            {{48, 57, 1268}, {99, 99, 1258}, },
            {{36, 65500, -19}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 65500, -94}, },
            {{36, 46, -19}, {48, 57, 977}, {65, 65500, -19}, },
            {{36, 65500, -20}, },
            {{36, 57, -10}, {65, 66, 513}, {67, 67, 1269}, {68, 90, 513}, {95, 65500, -10}, },
            {{36, 78, -26}, {79, 79, 1270}, {80, 65500, -26}, },
            {{36, 81, -21}, {82, 82, 1271}, {83, 65500, -21}, },
            {{36, 75, -23}, {76, 76, 1272}, {77, 90, 513}, {95, 65500, -10}, },
            {{36, 57, -10}, {65, 77, 513}, {78, 78, 1273}, {79, 90, 513}, {95, 65500, -10}, },
            {{36, 57, -10}, {65, 85, 513}, {86, 86, 1274}, {87, 90, 513}, {95, 65500, -10}, },
            {{36, 81, -21}, {82, 82, 1275}, {83, 65500, -21}, },
            {{36, 95, -10}, {97, 114, 515}, {115, 115, 1276}, {116, 122, 515}, {170, 65500, -10}, },
            {{36, 110, -34}, {111, 111, 1277}, {112, 65500, -34}, },
            {{36, 95, -10}, {97, 111, 515}, {112, 112, 1278}, {113, 122, 515}, {170, 65500, -10}, },
            {{36, 104, -46}, {105, 105, 1279}, {106, 65500, -41}, },
            {{36, 95, -10}, {97, 97, 1280}, {98, 65500, -42}, },
            {{36, 95, -10}, {97, 98, 515}, {99, 99, 1281}, {100, 122, 515}, {170, 65500, -10}, },
            {{36, 104, -46}, {105, 105, 1282}, {106, 65500, -41}, },
            {{36, 114, -988}, {115, 115, 1283}, {116, 65500, -988}, },
            {{36, 111, -990}, {112, 112, 1284}, {113, 65500, -990}, },
            {{36, 104, -46}, {105, 105, 1285}, {106, 65500, -41}, },
            {{36, 95, -10}, {97, 100, 515}, {101, 101, 1286}, {102, 122, 515}, {170, 65500, -10}, },
            {{36, 111, -990}, {112, 112, 1287}, {113, 65500, -990}, },
            {{36, 98, -993}, {99, 99, 1288}, {100, 65500, -993}, },
            {{36, 95, -10}, {97, 102, 515}, {103, 103, 1289}, {104, 122, 515}, {170, 65500, -10}, },
            {{36, 119, -36}, {120, 120, 1290}, {121, 65500, -36}, },
            {{36, 109, -39}, {110, 110, 1291}, {111, 65500, -39}, },
            {{36, 95, -10}, {97, 113, 515}, {114, 114, 1292}, {115, 115, 515}, {116, 116, 1293}, {117, 65500, -32}, },
            {{36, 95, -10}, {97, 99, 515}, {100, 100, 1294}, {101, 122, 515}, {170, 65500, -10}, },
            {{36, 95, -10}, {97, 115, 515}, {116, 116, 1295}, {117, 65500, -32}, },
            {{36, 107, -37}, {108, 108, 1296}, {109, 65500, -37}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 115, -1006}, {116, 116, 1297}, {117, 65500, -32}, },
            {{36, 95, -10}, {97, 97, 1298}, {98, 65500, -42}, },
            {{36, 109, -39}, {110, 110, 1299}, {111, 121, 515}, {122, 122, 1300}, {170, 65500, -10}, },
            {{36, 100, -998}, {101, 101, 1301}, {102, 65500, -998}, },
            {{36, 113, -1004}, {114, 114, 1302}, {115, 65500, -33}, },
            {{36, 95, -10}, {97, 97, 1303}, {98, 65500, -42}, },
            {{36, 109, -39}, {110, 110, 1304}, {111, 65500, -39}, },
            {{36, 107, -37}, {108, 108, 1305}, {109, 65500, -37}, },
            {{36, 99, -1005}, {100, 100, 1306}, {101, 65500, -1005}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{108, 108, 1307}, },
            {{114, 114, 1308}, },
            {{117, 117, 1309}, },
            {{97, 97, 1310}, },
            {{36, 65500, -94}, },
            {{36, 65500, -279}, },
            {{99, 99, 1311}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {{36, 65500, -279}, },
            {},
            {{102, 102, 1312}, },
            {{48, 57, 1268}, },
            {{46, 57, -743}, },
            {{46, 46, 1259}, {48, 57, 1261}, },
            {{46, 57, -744}, },
            {{0, 9, 1313}, {10, 10, 1314}, {11, 12, 1313}, {13, 13, 1315}, {14, 41, 1313}, {42, 42, 1316}, {43, 65535, 1313}, },
            {{0, 65535, -1265}, },
            {{0, 9, 1313}, {10, 10, 1317}, {11, 65535, -1265}, },
            {{0, 65535, -746}, },
            {},
            {{48, 57, 1268}, },
            {{36, 81, -21}, {82, 82, 1318}, {83, 83, 513}, {84, 84, 1319}, {85, 65500, -27}, },
            {{36, 57, -10}, {65, 82, 513}, {83, 83, 1320}, {84, 90, 513}, {95, 65500, -10}, },
            {{36, 85, -986}, {86, 86, 1321}, {87, 65500, -986}, },
            {{36, 75, -23}, {76, 76, 1322}, {77, 65500, -984}, },
            {{36, 57, -10}, {65, 68, 513}, {69, 69, 1323}, {70, 90, 513}, {95, 65500, -10}, },
            {{36, 68, -1275}, {69, 69, 1324}, {70, 65500, -1275}, },
            {{36, 78, -26}, {79, 79, 1325}, {80, 65500, -26}, },
            {{36, 65500, -10}, },
            {{36, 114, -988}, {115, 115, 1326}, {116, 65500, -988}, },
            {{36, 95, -10}, {97, 103, 515}, {104, 104, 1327}, {105, 122, 515}, {170, 65500, -10}, },
            {{36, 109, -39}, {110, 110, 1328}, {111, 65500, -39}, },
            {{36, 109, -39}, {110, 110, 1329}, {111, 65500, -39}, },
            {{36, 95, -10}, {97, 106, 515}, {107, 107, 1330}, {108, 122, 515}, {170, 65500, -10}, },
            {{36, 102, -1001}, {103, 103, 1331}, {104, 65500, -1001}, },
            {{36, 103, -1280}, {104, 104, 1332}, {105, 65500, -1280}, },
            {{36, 65500, -10}, },
            {{36, 111, -990}, {112, 112, 1333}, {113, 65500, -990}, },
            {{36, 65500, -10}, },
            {{36, 110, -34}, {111, 111, 1334}, {112, 65500, -34}, },
            {{36, 107, -37}, {108, 108, 1335}, {109, 65500, -37}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 95, -10}, {97, 97, 1336}, {98, 65500, -42}, },
            {{36, 103, -1280}, {104, 104, 1337}, {105, 65500, -1280}, },
            {{36, 65500, -10}, },
            {{36, 95, -10}, {97, 97, 1338}, {98, 65500, -42}, },
            {{36, 100, -998}, {101, 101, 1339}, {102, 65500, -998}, },
            {{36, 116, -38}, {117, 117, 1340}, {118, 122, 515}, {170, 65500, -10}, },
            {{36, 111, -990}, {112, 112, 1341}, {113, 65500, -990}, },
            {{36, 103, -1280}, {104, 104, 1342}, {105, 65500, -1280}, },
            {{36, 100, -998}, {101, 101, 1343}, {102, 65500, -998}, },
            {{36, 95, -10}, {97, 118, 515}, {119, 119, 1344}, {120, 122, 515}, {170, 65500, -10}, },
            {{36, 115, -1006}, {116, 116, 1345}, {117, 65500, -32}, },
            {{36, 113, -1004}, {114, 114, 1346}, {115, 65500, -33}, },
            {{36, 103, -1280}, {104, 104, 1347}, {105, 65500, -1280}, },
            {{36, 100, -998}, {101, 101, 1348}, {102, 65500, -998}, },
            {{36, 115, -1006}, {116, 116, 1349}, {117, 65500, -32}, },
            {{112, 112, 1350}, },
            {{105, 105, 1351}, },
            {{101, 101, 1352}, },
            {{116, 116, 1353}, },
            {{102, 102, 1354}, },
            {{100, 100, 1355}, },
            {{0, 65535, -1265}, },
            {{0, 65535, -1265}, },
            {{0, 9, 1313}, {10, 10, 1356}, {11, 65535, -1265}, },
            {{0, 41, -746}, {42, 42, 1316}, {43, 65535, -746}, },
            {{0, 65535, -1265}, },
            {{36, 68, -1275}, {69, 69, 1357}, {70, 65500, -1275}, },
            {{36, 78, -26}, {79, 79, 1358}, {80, 65500, -26}, },
            {{36, 68, -1275}, {69, 69, 1359}, {70, 65500, -1275}, },
            {{36, 68, -1275}, {69, 69, 1360}, {70, 65500, -1275}, },
            {{36, 65500, -10}, },
            {{36, 81, -21}, {82, 82, 1361}, {83, 83, 513}, {84, 84, 1362}, {85, 65500, -27}, },
            {{36, 81, -21}, {82, 82, 1363}, {83, 83, 513}, {84, 84, 1364}, {85, 65500, -27}, },
            {{36, 57, -10}, {65, 74, 513}, {75, 75, 1365}, {76, 90, 513}, {95, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 95, -10}, {97, 97, 1366}, {98, 65500, -42}, },
            {{36, 65500, -10}, },
            {{36, 46, -10}, {48, 49, 512}, {50, 50, 1367}, {51, 65500, -47}, },
            {{36, 102, -1001}, {103, 103, 1368}, {104, 65500, -1001}, },
            {{36, 103, -1280}, {104, 104, 1369}, {105, 65500, -1280}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 115, -1006}, {116, 116, 1370}, {117, 65500, -32}, },
            {{36, 116, -38}, {117, 117, 1371}, {118, 65500, -1299}, },
            {{36, 95, -10}, {97, 108, 515}, {109, 109, 1372}, {110, 122, 515}, {170, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 115, -1006}, {116, 116, 1373}, {117, 65500, -32}, },
            {{36, 65500, -10}, },
            {{36, 113, -1004}, {114, 114, 1374}, {115, 65500, -33}, },
            {{36, 100, -998}, {101, 101, 1375}, {102, 65500, -998}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 115, -1006}, {116, 116, 1376}, {117, 65500, -32}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 103, -1280}, {104, 104, 1377}, {105, 65500, -1280}, },
            {{104, 104, 1378}, },
            {{103, 103, 1379}, },
            {},
            {{117, 117, 1380}, },
            {{100, 100, 1381}, },
            {{103, 103, 1382}, },
            {{0, 65535, -1265}, },
            {{36, 75, -23}, {76, 76, 1383}, {77, 65500, -984}, },
            {{36, 65500, -10}, },
            {{36, 57, -10}, {65, 79, 513}, {80, 80, 1384}, {81, 90, 513}, {95, 65500, -10}, },
            {{36, 81, -21}, {82, 82, 1385}, {83, 83, 513}, {84, 84, 1386}, {85, 65500, -27}, },
            {{36, 68, -1275}, {69, 69, 1387}, {70, 65500, -1275}, },
            {{36, 78, -26}, {79, 79, 1388}, {80, 65500, -26}, },
            {{36, 68, -1275}, {69, 69, 1389}, {70, 65500, -1275}, },
            {{36, 78, -26}, {79, 79, 1390}, {80, 65500, -26}, },
            {{36, 68, -1275}, {69, 69, 1391}, {70, 65500, -1275}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 113, -1004}, {114, 114, 1392}, {115, 65500, -33}, },
            {{36, 115, -1006}, {116, 116, 1393}, {117, 65500, -32}, },
            {{36, 65500, -10}, },
            {{36, 99, -1005}, {100, 100, 1394}, {101, 65500, -1005}, },
            {{36, 65500, -10}, },
            {{36, 100, -998}, {101, 101, 1395}, {102, 65500, -998}, },
            {{36, 95, -10}, {97, 97, 1396}, {98, 65500, -42}, },
            {{36, 65500, -10}, },
            {{36, 114, -988}, {115, 115, 1397}, {116, 65500, -988}, },
            {{36, 65500, -10}, },
            {{97, 97, 1398}, },
            {{104, 104, 1399}, },
            {{114, 114, 1400}, },
            {{103, 103, 1401}, },
            {},
            {{36, 65500, -10}, },
            {{36, 78, -26}, {79, 79, 1402}, {80, 65500, -26}, },
            {{36, 68, -1275}, {69, 69, 1403}, {70, 65500, -1275}, },
            {{36, 78, -26}, {79, 79, 1404}, {80, 65500, -26}, },
            {{36, 75, -23}, {76, 76, 1405}, {77, 65500, -984}, },
            {{36, 65500, -10}, },
            {{36, 75, -23}, {76, 76, 1406}, {77, 65500, -984}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 110, -34}, {111, 111, 1407}, {112, 65500, -34}, },
            {{36, 109, -39}, {110, 110, 1408}, {111, 65500, -39}, },
            {{36, 100, -998}, {101, 101, 1409}, {102, 65500, -998}, },
            {{36, 65500, -10}, },
            {{36, 115, -1006}, {116, 116, 1410}, {117, 65500, -32}, },
            {{36, 103, -1280}, {104, 104, 1411}, {105, 65500, -1280}, },
            {},
            {{116, 116, 1412}, },
            {{97, 97, 1413}, },
            {{34, 34, 1414}, },
            {{36, 75, -23}, {76, 76, 1415}, {77, 65500, -984}, },
            {{36, 75, -23}, {76, 76, 1416}, {77, 65500, -984}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 116, -38}, {117, 117, 1417}, {118, 65500, -1299}, },
            {{36, 100, -998}, {101, 101, 1418}, {102, 65500, -998}, },
            {{36, 65500, -10}, },
            {{36, 104, -46}, {105, 105, 1419}, {106, 65500, -41}, },
            {{36, 95, -10}, {97, 97, 1420}, {98, 65500, -42}, },
            {{110, 110, 1421}, },
            {{116, 116, 1422}, },
            {},
            {{36, 57, -10}, {65, 88, 513}, {89, 89, 1423}, {90, 90, 513}, {95, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 109, -39}, {110, 110, 1424}, {111, 65500, -39}, },
            {{36, 114, -988}, {115, 115, 1425}, {116, 65500, -988}, },
            {{36, 110, -34}, {111, 111, 1426}, {112, 65500, -34}, },
            {{36, 111, -990}, {112, 112, 1427}, {113, 65500, -990}, },
            {{101, 101, 1428}, },
            {{105, 105, 1429}, },
            {{36, 65500, -10}, },
            {{36, 99, -1005}, {100, 100, 1430}, {101, 65500, -1005}, },
            {{36, 114, -988}, {115, 115, 1431}, {116, 65500, -988}, },
            {{36, 109, -39}, {110, 110, 1432}, {111, 65500, -39}, },
            {{36, 100, -998}, {101, 101, 1433}, {102, 65500, -998}, },
            {{115, 115, 1434}, },
            {{111, 111, 1435}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{115, 115, 1436}, },
            {{110, 110, 1437}, },
            {},
            {},
        }
    };*/

    private static int[][] accept;
/*  {
        // INITIAL
        {52, 52, 52, 52, 52, 52, -1, 53, 50, 9, 10, 1, 2, 6, 3, -1, 4, 51, 51, 50, 50, 50, 50, 50, 50, 50, 11, 12, 5, 50, 25, 24, 50, 50, 50, 41, 22, 50, 50, 50, 39, 40, 21, 50, 50, 30, 31, 32, 7, 0, 8, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, -1, 50, 50, 50, 50, 50, 50, -1, 50, 50, 50, -1, 50, 50, 50, 50, 50, 50, 50, 50, -1, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, -1, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, -1, 50, 50, 50, 50, 50, 50, 50, 50, 50, -1, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, -1, 50, 50, 50, 50, 50, 50, -1, 50, 50, 50, 50, 50, 50, 50, -1, 50, 50, 50, 50, 50, -1, 50, 50, 50, 50, -1, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, -1, 50, -1, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, -1, 50, 50, 50, 50, 50, 50, 50, 52, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 53, 53, 53, 50, -1, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 51, 51, 51, -1, 53, -1, 51, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 51, 51, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 37, 38, 50, 50, 50, 50, 50, 50, 50, 50, 50, 33, 35, 34, 36, 29, 28, 26, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 53, -1, 51, -1, 51, 51, -1, -1, -1, -1, 54, 51, 50, 50, 50, 50, 50, 50, 50, 47, 50, 50, 50, 50, 50, 50, 47, 47, 50, 22, 50, 50, 47, 48, 48, 50, 50, 46, 50, 50, 23, 50, 47, 50, 50, 50, 50, 47, 50, 50, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 50, 50, 50, 50, 44, 50, 50, 50, 47, 50, 47, 47, 50, 50, 47, 41, 50, 50, 50, 19, 50, 18, 50, 50, 47, 17, 42, 47, 50, 47, 16, 50, -1, -1, 26, 27, -1, -1, -1, 50, 45, 50, 50, 50, 50, 50, 50, 50, 25, 48, 50, 50, 48, 50, 39, 50, 50, 20, 50, 43, -1, -1, -1, -1, 49, 45, 50, 50, 50, 50, 45, 50, 45, 44, 50, 50, 50, 40, 50, 50, 29, -1, -1, -1, 50, 50, 45, 45, 45, 50, 50, 15, 50, 50, -1, -1, 49, 50, 45, 50, 50, 50, 50, -1, -1, 45, 50, 50, 50, 50, -1, -1, 14, 24, 23, 13, -1, -1, 28, 27, },

    };*/

    public static class State
    {
        public final static State INITIAL = new State(0);

        private int id;

        private State(@SuppressWarnings("hiding") int id)
        {
            this.id = id;
        }

        public int id()
        {
            return this.id;
        }
    }

    static 
    {
        try
        {
            DataInputStream s = new DataInputStream(
                new BufferedInputStream(
                Lexer.class.getResourceAsStream("lexer.dat")));

            // read gotoTable
            int length = s.readInt();
            gotoTable = new int[length][][][];
            for(int i = 0; i < gotoTable.length; i++)
            {
                length = s.readInt();
                gotoTable[i] = new int[length][][];
                for(int j = 0; j < gotoTable[i].length; j++)
                {
                    length = s.readInt();
                    gotoTable[i][j] = new int[length][3];
                    for(int k = 0; k < gotoTable[i][j].length; k++)
                    {
                        for(int l = 0; l < 3; l++)
                        {
                            gotoTable[i][j][k][l] = s.readInt();
                        }
                    }
                }
            }

            // read accept
            length = s.readInt();
            accept = new int[length][];
            for(int i = 0; i < accept.length; i++)
            {
                length = s.readInt();
                accept[i] = new int[length];
                for(int j = 0; j < accept[i].length; j++)
                {
                    accept[i][j] = s.readInt();
                }
            }

            s.close();
        }
        catch(Exception e)
        {
            throw new RuntimeException("The file \"lexer.dat\" is either missing or corrupted.");
        }
    }
}
