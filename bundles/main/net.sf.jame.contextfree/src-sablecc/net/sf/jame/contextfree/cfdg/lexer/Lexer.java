/* This file was generated by SableCC (http://www.sablecc.org/). */

package net.sf.jame.contextfree.cfdg.lexer;

import java.io.*;
import net.sf.jame.contextfree.cfdg.node.*;

@SuppressWarnings("nls")
public class Lexer
{
    protected Token token;
    protected State state = State.INITIAL;

    private PushbackReader in;
    private int line;
    private int pos;
    private boolean cr;
    private boolean eof;
    private final StringBuffer text = new StringBuffer();

    @SuppressWarnings("unused")
    protected void filter() throws LexerException, IOException
    {
        // Do nothing
    }

    public Lexer(@SuppressWarnings("hiding") PushbackReader in)
    {
        this.in = in;
    }
 
    public Token peek() throws LexerException, IOException
    {
        while(this.token == null)
        {
            this.token = getToken();
            filter();
        }

        return this.token;
    }

    public Token next() throws LexerException, IOException
    {
        while(this.token == null)
        {
            this.token = getToken();
            filter();
        }

        Token result = this.token;
        this.token = null;
        return result;
    }

    protected Token getToken() throws IOException, LexerException
    {
        int dfa_state = 0;

        int start_pos = this.pos;
        int start_line = this.line;

        int accept_state = -1;
        int accept_token = -1;
        int accept_length = -1;
        int accept_pos = -1;
        int accept_line = -1;

        @SuppressWarnings("hiding") int[][][] gotoTable = Lexer.gotoTable[this.state.id()];
        @SuppressWarnings("hiding") int[] accept = Lexer.accept[this.state.id()];
        this.text.setLength(0);

        while(true)
        {
            int c = getChar();

            if(c != -1)
            {
                switch(c)
                {
                case 10:
                    if(this.cr)
                    {
                        this.cr = false;
                    }
                    else
                    {
                        this.line++;
                        this.pos = 0;
                    }
                    break;
                case 13:
                    this.line++;
                    this.pos = 0;
                    this.cr = true;
                    break;
                default:
                    this.pos++;
                    this.cr = false;
                    break;
                }

                this.text.append((char) c);

                do
                {
                    int oldState = (dfa_state < -1) ? (-2 -dfa_state) : dfa_state;

                    dfa_state = -1;

                    int[][] tmp1 =  gotoTable[oldState];
                    int low = 0;
                    int high = tmp1.length - 1;

                    while(low <= high)
                    {
                        int middle = (low + high) / 2;
                        int[] tmp2 = tmp1[middle];

                        if(c < tmp2[0])
                        {
                            high = middle - 1;
                        }
                        else if(c > tmp2[1])
                        {
                            low = middle + 1;
                        }
                        else
                        {
                            dfa_state = tmp2[2];
                            break;
                        }
                    }
                }while(dfa_state < -1);
            }
            else
            {
                dfa_state = -1;
            }

            if(dfa_state >= 0)
            {
                if(accept[dfa_state] != -1)
                {
                    accept_state = dfa_state;
                    accept_token = accept[dfa_state];
                    accept_length = this.text.length();
                    accept_pos = this.pos;
                    accept_line = this.line;
                }
            }
            else
            {
                if(accept_state != -1)
                {
                    switch(accept_token)
                    {
                    case 0:
                        {
                            @SuppressWarnings("hiding") Token token = new0(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 1:
                        {
                            @SuppressWarnings("hiding") Token token = new1(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 2:
                        {
                            @SuppressWarnings("hiding") Token token = new2(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 3:
                        {
                            @SuppressWarnings("hiding") Token token = new3(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 4:
                        {
                            @SuppressWarnings("hiding") Token token = new4(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 5:
                        {
                            @SuppressWarnings("hiding") Token token = new5(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 6:
                        {
                            @SuppressWarnings("hiding") Token token = new6(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 7:
                        {
                            @SuppressWarnings("hiding") Token token = new7(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 8:
                        {
                            @SuppressWarnings("hiding") Token token = new8(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 9:
                        {
                            @SuppressWarnings("hiding") Token token = new9(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 10:
                        {
                            @SuppressWarnings("hiding") Token token = new10(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 11:
                        {
                            @SuppressWarnings("hiding") Token token = new11(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 12:
                        {
                            @SuppressWarnings("hiding") Token token = new12(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 13:
                        {
                            @SuppressWarnings("hiding") Token token = new13(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 14:
                        {
                            @SuppressWarnings("hiding") Token token = new14(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 15:
                        {
                            @SuppressWarnings("hiding") Token token = new15(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 16:
                        {
                            @SuppressWarnings("hiding") Token token = new16(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 17:
                        {
                            @SuppressWarnings("hiding") Token token = new17(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 18:
                        {
                            @SuppressWarnings("hiding") Token token = new18(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 19:
                        {
                            @SuppressWarnings("hiding") Token token = new19(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 20:
                        {
                            @SuppressWarnings("hiding") Token token = new20(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 21:
                        {
                            @SuppressWarnings("hiding") Token token = new21(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 22:
                        {
                            @SuppressWarnings("hiding") Token token = new22(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 23:
                        {
                            @SuppressWarnings("hiding") Token token = new23(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 24:
                        {
                            @SuppressWarnings("hiding") Token token = new24(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 25:
                        {
                            @SuppressWarnings("hiding") Token token = new25(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 26:
                        {
                            @SuppressWarnings("hiding") Token token = new26(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 27:
                        {
                            @SuppressWarnings("hiding") Token token = new27(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 28:
                        {
                            @SuppressWarnings("hiding") Token token = new28(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 29:
                        {
                            @SuppressWarnings("hiding") Token token = new29(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 30:
                        {
                            @SuppressWarnings("hiding") Token token = new30(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 31:
                        {
                            @SuppressWarnings("hiding") Token token = new31(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 32:
                        {
                            @SuppressWarnings("hiding") Token token = new32(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 33:
                        {
                            @SuppressWarnings("hiding") Token token = new33(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 34:
                        {
                            @SuppressWarnings("hiding") Token token = new34(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 35:
                        {
                            @SuppressWarnings("hiding") Token token = new35(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 36:
                        {
                            @SuppressWarnings("hiding") Token token = new36(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 37:
                        {
                            @SuppressWarnings("hiding") Token token = new37(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 38:
                        {
                            @SuppressWarnings("hiding") Token token = new38(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 39:
                        {
                            @SuppressWarnings("hiding") Token token = new39(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 40:
                        {
                            @SuppressWarnings("hiding") Token token = new40(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 41:
                        {
                            @SuppressWarnings("hiding") Token token = new41(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 42:
                        {
                            @SuppressWarnings("hiding") Token token = new42(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 43:
                        {
                            @SuppressWarnings("hiding") Token token = new43(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 44:
                        {
                            @SuppressWarnings("hiding") Token token = new44(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 45:
                        {
                            @SuppressWarnings("hiding") Token token = new45(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 46:
                        {
                            @SuppressWarnings("hiding") Token token = new46(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 47:
                        {
                            @SuppressWarnings("hiding") Token token = new47(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 48:
                        {
                            @SuppressWarnings("hiding") Token token = new48(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 49:
                        {
                            @SuppressWarnings("hiding") Token token = new49(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 50:
                        {
                            @SuppressWarnings("hiding") Token token = new50(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 51:
                        {
                            @SuppressWarnings("hiding") Token token = new51(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    }
                }
                else
                {
                    if(this.text.length() > 0)
                    {
                        throw new LexerException(
                            "[" + (start_line + 1) + "," + (start_pos + 1) + "]" +
                            " Unknown token: " + this.text);
                    }

                    @SuppressWarnings("hiding") EOF token = new EOF(
                        start_line + 1,
                        start_pos + 1);
                    return token;
                }
            }
        }
    }

    Token new0(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TBar(line, pos); }
    Token new1(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TStar(line, pos); }
    Token new2(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TPlus(line, pos); }
    Token new3(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TMinus(line, pos); }
    Token new4(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TSlash(line, pos); }
    Token new5(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TArrow(line, pos); }
    Token new6(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TComma(line, pos); }
    Token new7(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TLCbkt(line, pos); }
    Token new8(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TRCbkt(line, pos); }
    Token new9(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TLRbkt(line, pos); }
    Token new10(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TRRbkt(line, pos); }
    Token new11(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TLSbkt(line, pos); }
    Token new12(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TRSbkt(line, pos); }
    Token new13(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TStartshape(line, pos); }
    Token new14(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TBackground(line, pos); }
    Token new15(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TInclude(line, pos); }
    Token new16(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TTile(line, pos); }
    Token new17(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TSize(line, pos); }
    Token new18(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TRule(line, pos); }
    Token new19(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TPath(line, pos); }
    Token new20(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TShape(line, pos); }
    Token new21(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TParametersToken(text, line, pos); }
    Token new22(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TSizeToken(text, line, pos); }
    Token new23(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new THueToken(text, line, pos); }
    Token new24(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TSaturationToken(text, line, pos); }
    Token new25(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TBrightnessToken(text, line, pos); }
    Token new26(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TAlphaToken(text, line, pos); }
    Token new27(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TTargetHueToken(text, line, pos); }
    Token new28(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TTargetSaturationToken(text, line, pos); }
    Token new29(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TTargetBrightnessToken(text, line, pos); }
    Token new30(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TTargetAlphaToken(text, line, pos); }
    Token new31(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TXToken(line, pos); }
    Token new32(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TYToken(line, pos); }
    Token new33(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TZToken(line, pos); }
    Token new34(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TX1Token(line, pos); }
    Token new35(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TY1Token(line, pos); }
    Token new36(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TX2Token(line, pos); }
    Token new37(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TY2Token(line, pos); }
    Token new38(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TRxToken(line, pos); }
    Token new39(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TRyToken(line, pos); }
    Token new40(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TRotateToken(text, line, pos); }
    Token new41(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TFlipToken(text, line, pos); }
    Token new42(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TSkewToken(line, pos); }
    Token new43(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TStrokewidthToken(line, pos); }
    Token new44(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TPathcmd(text, line, pos); }
    Token new45(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TPathop(text, line, pos); }
    Token new46(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TFilename(text, line, pos); }
    Token new47(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TString(text, line, pos); }
    Token new48(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TNumber(text, line, pos); }
    Token new49(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TWhiteSpace(text, line, pos); }
    Token new50(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TLineComment(text, line, pos); }
    Token new51(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TBlockComment(text, line, pos); }

    private int getChar() throws IOException
    {
        if(this.eof)
        {
            return -1;
        }

        int result = this.in.read();

        if(result == -1)
        {
            this.eof = true;
        }

        return result;
    }

    private void pushBack(int acceptLength) throws IOException
    {
        int length = this.text.length();
        for(int i = length - 1; i >= acceptLength; i--)
        {
            this.eof = false;

            this.in.unread(this.text.charAt(i));
        }
    }

    protected void unread(@SuppressWarnings("hiding") Token token) throws IOException
    {
        @SuppressWarnings("hiding") String text = token.getText();
        int length = text.length();

        for(int i = length - 1; i >= 0; i--)
        {
            this.eof = false;

            this.in.unread(text.charAt(i));
        }

        this.pos = token.getPos() - 1;
        this.line = token.getLine() - 1;
    }

    private String getText(int acceptLength)
    {
        StringBuffer s = new StringBuffer(acceptLength);
        for(int i = 0; i < acceptLength; i++)
        {
            s.append(this.text.charAt(i));
        }

        return s.toString();
    }

    private static int[][][][] gotoTable;
/*  {
        { // INITIAL
            {{9, 9, 1}, {10, 10, 2}, {12, 12, 3}, {13, 13, 4}, {32, 32, 5}, {34, 34, 6}, {35, 35, 7}, {36, 36, 8}, {40, 40, 9}, {41, 41, 10}, {42, 42, 11}, {43, 43, 12}, {44, 44, 13}, {45, 45, 14}, {46, 46, 15}, {47, 47, 16}, {48, 48, 17}, {49, 57, 18}, {65, 65, 19}, {66, 66, 20}, {67, 67, 21}, {68, 69, 20}, {70, 70, 22}, {71, 75, 20}, {76, 76, 23}, {77, 77, 24}, {78, 82, 20}, {83, 83, 25}, {84, 90, 20}, {91, 91, 26}, {93, 93, 27}, {94, 94, 28}, {95, 95, 29}, {97, 97, 30}, {98, 98, 31}, {99, 101, 32}, {102, 102, 33}, {103, 103, 32}, {104, 104, 34}, {105, 105, 35}, {106, 111, 32}, {112, 112, 36}, {113, 113, 32}, {114, 114, 37}, {115, 115, 38}, {116, 116, 39}, {117, 118, 32}, {119, 119, 40}, {120, 120, 41}, {121, 121, 42}, {122, 122, 43}, {123, 123, 44}, {124, 124, 45}, {125, 125, 46}, {170, 170, 47}, {181, 181, 48}, {186, 186, 49}, {192, 214, 50}, {216, 246, 51}, {248, 501, 52}, {506, 535, 53}, {592, 680, 54}, {688, 696, 55}, {699, 705, 56}, {720, 721, 57}, {736, 740, 58}, {890, 890, 59}, {902, 902, 60}, {904, 906, 61}, {908, 908, 62}, {910, 929, 63}, {931, 974, 64}, {976, 982, 65}, {986, 986, 66}, {988, 988, 67}, {990, 990, 68}, {992, 992, 69}, {994, 1011, 70}, {1025, 1036, 71}, {1038, 1103, 72}, {1105, 1116, 73}, {1118, 1153, 74}, {1168, 1220, 75}, {1223, 1224, 76}, {1227, 1228, 77}, {1232, 1259, 78}, {1262, 1269, 79}, {1272, 1273, 80}, {1329, 1366, 81}, {1369, 1369, 82}, {1377, 1415, 83}, {1488, 1514, 84}, {1520, 1522, 85}, {1569, 1594, 86}, {1600, 1610, 87}, {1632, 1641, 88}, {1649, 1719, 89}, {1722, 1726, 90}, {1728, 1742, 91}, {1744, 1747, 92}, {1749, 1749, 93}, {1765, 1766, 94}, {1776, 1785, 95}, {2309, 2361, 96}, {2365, 2365, 97}, {2392, 2401, 98}, {2406, 2415, 99}, {2437, 2444, 100}, {2447, 2448, 101}, {2451, 2472, 102}, {2474, 2480, 103}, {2482, 2482, 104}, {2486, 2489, 105}, {2524, 2525, 106}, {2527, 2529, 107}, {2534, 2543, 108}, {2544, 2545, 109}, {2565, 2570, 110}, {2575, 2576, 111}, {2579, 2600, 112}, {2602, 2608, 113}, {2610, 2611, 114}, {2613, 2614, 115}, {2616, 2617, 116}, {2649, 2652, 117}, {2654, 2654, 118}, {2662, 2671, 119}, {2674, 2676, 120}, {2693, 2699, 121}, {2701, 2701, 122}, {2703, 2705, 123}, {2707, 2728, 124}, {2730, 2736, 125}, {2738, 2739, 126}, {2741, 2745, 127}, {2749, 2749, 128}, {2784, 2784, 129}, {2790, 2799, 130}, {2821, 2828, 131}, {2831, 2832, 132}, {2835, 2856, 133}, {2858, 2864, 134}, {2866, 2867, 135}, {2870, 2873, 136}, {2877, 2877, 137}, {2908, 2909, 138}, {2911, 2913, 139}, {2918, 2927, 140}, {2949, 2954, 141}, {2958, 2960, 142}, {2962, 2965, 143}, {2969, 2970, 144}, {2972, 2972, 145}, {2974, 2975, 146}, {2979, 2980, 147}, {2984, 2986, 148}, {2990, 2997, 149}, {2999, 3001, 150}, {3047, 3055, 151}, {3077, 3084, 152}, {3086, 3088, 153}, {3090, 3112, 154}, {3114, 3123, 155}, {3125, 3129, 156}, {3168, 3169, 157}, {3174, 3183, 158}, {3205, 3212, 159}, {3214, 3216, 160}, {3218, 3240, 161}, {3242, 3251, 162}, {3253, 3257, 163}, {3294, 3294, 164}, {3296, 3297, 165}, {3302, 3311, 166}, {3333, 3340, 167}, {3342, 3344, 168}, {3346, 3368, 169}, {3370, 3385, 170}, {3424, 3425, 171}, {3430, 3439, 172}, {3585, 3630, 173}, {3632, 3632, 174}, {3634, 3635, 175}, {3648, 3654, 176}, {3664, 3673, 177}, {3713, 3714, 178}, {3716, 3716, 179}, {3719, 3720, 180}, {3722, 3722, 181}, {3725, 3725, 182}, {3732, 3735, 183}, {3737, 3743, 184}, {3745, 3747, 185}, {3749, 3749, 186}, {3751, 3751, 187}, {3754, 3755, 188}, {3757, 3758, 189}, {3760, 3760, 190}, {3762, 3763, 191}, {3773, 3773, 192}, {3776, 3780, 193}, {3782, 3782, 194}, {3792, 3801, 195}, {3804, 3805, 196}, {3872, 3881, 197}, {3904, 3911, 198}, {3913, 3945, 199}, {4256, 4293, 200}, {4304, 4342, 201}, {4352, 4441, 202}, {4447, 4514, 203}, {4520, 4601, 204}, {7680, 7835, 205}, {7840, 7929, 206}, {7936, 7957, 207}, {7960, 7965, 208}, {7968, 8005, 209}, {8008, 8013, 210}, {8016, 8023, 211}, {8025, 8025, 212}, {8027, 8027, 213}, {8029, 8029, 214}, {8031, 8061, 215}, {8064, 8116, 216}, {8118, 8124, 217}, {8126, 8126, 218}, {8130, 8132, 219}, {8134, 8140, 220}, {8144, 8147, 221}, {8150, 8155, 222}, {8160, 8172, 223}, {8178, 8180, 224}, {8182, 8188, 225}, {8319, 8319, 226}, {8450, 8450, 227}, {8455, 8455, 228}, {8458, 8467, 229}, {8469, 8469, 230}, {8472, 8477, 231}, {8484, 8484, 232}, {8486, 8486, 233}, {8488, 8488, 234}, {8490, 8497, 235}, {8499, 8504, 236}, {12293, 12293, 237}, {12337, 12341, 238}, {12353, 12436, 239}, {12443, 12446, 240}, {12449, 12538, 241}, {12540, 12542, 242}, {12549, 12588, 243}, {12593, 12686, 244}, {19968, 40869, 245}, {44032, 55203, 246}, {63744, 64045, 247}, {64256, 64262, 248}, {64275, 64279, 249}, {64287, 64296, 250}, {64298, 64310, 251}, {64312, 64316, 252}, {64318, 64318, 253}, {64320, 64321, 254}, {64323, 64324, 255}, {64326, 64433, 256}, {64467, 64829, 257}, {64848, 64911, 258}, {64914, 64967, 259}, {65008, 65019, 260}, {65136, 65138, 261}, {65140, 65140, 262}, {65142, 65276, 263}, {65296, 65305, 264}, {65313, 65338, 265}, {65345, 65370, 266}, {65382, 65470, 267}, {65474, 65479, 268}, {65482, 65487, 269}, {65490, 65495, 270}, {65498, 65500, 271}, },
            {{9, 32, -2}, },
            {{9, 32, -2}, },
            {{9, 32, -2}, },
            {{9, 9, 1}, {10, 10, 272}, {12, 32, -2}, },
            {{9, 32, -2}, },
            {{36, 36, 273}, {48, 57, 274}, {65, 90, 275}, {95, 95, 276}, {97, 122, 277}, {170, 170, 278}, {181, 181, 279}, {186, 186, 280}, {192, 214, 281}, {216, 246, 282}, {248, 501, 283}, {506, 535, 284}, {592, 680, 285}, {688, 696, 286}, {699, 705, 287}, {720, 721, 288}, {736, 740, 289}, {890, 890, 290}, {902, 902, 291}, {904, 906, 292}, {908, 908, 293}, {910, 929, 294}, {931, 974, 295}, {976, 982, 296}, {986, 986, 297}, {988, 988, 298}, {990, 990, 299}, {992, 992, 300}, {994, 1011, 301}, {1025, 1036, 302}, {1038, 1103, 303}, {1105, 1116, 304}, {1118, 1153, 305}, {1168, 1220, 306}, {1223, 1224, 307}, {1227, 1228, 308}, {1232, 1259, 309}, {1262, 1269, 310}, {1272, 1273, 311}, {1329, 1366, 312}, {1369, 1369, 313}, {1377, 1415, 314}, {1488, 1514, 315}, {1520, 1522, 316}, {1569, 1594, 317}, {1600, 1610, 318}, {1632, 1641, 319}, {1649, 1719, 320}, {1722, 1726, 321}, {1728, 1742, 322}, {1744, 1747, 323}, {1749, 1749, 324}, {1765, 1766, 325}, {1776, 1785, 326}, {2309, 2361, 327}, {2365, 2365, 328}, {2392, 2401, 329}, {2406, 2415, 330}, {2437, 2444, 331}, {2447, 2448, 332}, {2451, 2472, 333}, {2474, 2480, 334}, {2482, 2482, 335}, {2486, 2489, 336}, {2524, 2525, 337}, {2527, 2529, 338}, {2534, 2543, 339}, {2544, 2545, 340}, {2565, 2570, 341}, {2575, 2576, 342}, {2579, 2600, 343}, {2602, 2608, 344}, {2610, 2611, 345}, {2613, 2614, 346}, {2616, 2617, 347}, {2649, 2652, 348}, {2654, 2654, 349}, {2662, 2671, 350}, {2674, 2676, 351}, {2693, 2699, 352}, {2701, 2701, 353}, {2703, 2705, 354}, {2707, 2728, 355}, {2730, 2736, 356}, {2738, 2739, 357}, {2741, 2745, 358}, {2749, 2749, 359}, {2784, 2784, 360}, {2790, 2799, 361}, {2821, 2828, 362}, {2831, 2832, 363}, {2835, 2856, 364}, {2858, 2864, 365}, {2866, 2867, 366}, {2870, 2873, 367}, {2877, 2877, 368}, {2908, 2909, 369}, {2911, 2913, 370}, {2918, 2927, 371}, {2949, 2954, 372}, {2958, 2960, 373}, {2962, 2965, 374}, {2969, 2970, 375}, {2972, 2972, 376}, {2974, 2975, 377}, {2979, 2980, 378}, {2984, 2986, 379}, {2990, 2997, 380}, {2999, 3001, 381}, {3047, 3055, 382}, {3077, 3084, 383}, {3086, 3088, 384}, {3090, 3112, 385}, {3114, 3123, 386}, {3125, 3129, 387}, {3168, 3169, 388}, {3174, 3183, 389}, {3205, 3212, 390}, {3214, 3216, 391}, {3218, 3240, 392}, {3242, 3251, 393}, {3253, 3257, 394}, {3294, 3294, 395}, {3296, 3297, 396}, {3302, 3311, 397}, {3333, 3340, 398}, {3342, 3344, 399}, {3346, 3368, 400}, {3370, 3385, 401}, {3424, 3425, 402}, {3430, 3439, 403}, {3585, 3630, 404}, {3632, 3632, 405}, {3634, 3635, 406}, {3648, 3654, 407}, {3664, 3673, 408}, {3713, 3714, 409}, {3716, 3716, 410}, {3719, 3720, 411}, {3722, 3722, 412}, {3725, 3725, 413}, {3732, 3735, 414}, {3737, 3743, 415}, {3745, 3747, 416}, {3749, 3749, 417}, {3751, 3751, 418}, {3754, 3755, 419}, {3757, 3758, 420}, {3760, 3760, 421}, {3762, 3763, 422}, {3773, 3773, 423}, {3776, 3780, 424}, {3782, 3782, 425}, {3792, 3801, 426}, {3804, 3805, 427}, {3872, 3881, 428}, {3904, 3911, 429}, {3913, 3945, 430}, {4256, 4293, 431}, {4304, 4342, 432}, {4352, 4441, 433}, {4447, 4514, 434}, {4520, 4601, 435}, {7680, 7835, 436}, {7840, 7929, 437}, {7936, 7957, 438}, {7960, 7965, 439}, {7968, 8005, 440}, {8008, 8013, 441}, {8016, 8023, 442}, {8025, 8025, 443}, {8027, 8027, 444}, {8029, 8029, 445}, {8031, 8061, 446}, {8064, 8116, 447}, {8118, 8124, 448}, {8126, 8126, 449}, {8130, 8132, 450}, {8134, 8140, 451}, {8144, 8147, 452}, {8150, 8155, 453}, {8160, 8172, 454}, {8178, 8180, 455}, {8182, 8188, 456}, {8319, 8319, 457}, {8450, 8450, 458}, {8455, 8455, 459}, {8458, 8467, 460}, {8469, 8469, 461}, {8472, 8477, 462}, {8484, 8484, 463}, {8486, 8486, 464}, {8488, 8488, 465}, {8490, 8497, 466}, {8499, 8504, 467}, {12293, 12293, 468}, {12337, 12341, 469}, {12353, 12436, 470}, {12443, 12446, 471}, {12449, 12538, 472}, {12540, 12542, 473}, {12549, 12588, 474}, {12593, 12686, 475}, {19968, 40869, 476}, {44032, 55203, 477}, {63744, 64045, 478}, {64256, 64262, 479}, {64275, 64279, 480}, {64287, 64296, 481}, {64298, 64310, 482}, {64312, 64316, 483}, {64318, 64318, 484}, {64320, 64321, 485}, {64323, 64324, 486}, {64326, 64433, 487}, {64467, 64829, 488}, {64848, 64911, 489}, {64914, 64967, 490}, {65008, 65019, 491}, {65136, 65138, 492}, {65140, 65140, 493}, {65142, 65276, 494}, {65296, 65305, 495}, {65313, 65338, 496}, {65345, 65370, 497}, {65382, 65470, 498}, {65474, 65479, 499}, {65482, 65487, 500}, {65490, 65495, 501}, {65498, 65500, 502}, },
            {{0, 9, 503}, {10, 10, 504}, {11, 12, 503}, {13, 13, 505}, {14, 65535, 503}, },
            {{36, 36, 506}, {46, 46, 507}, {48, 57, 508}, {65, 90, 509}, {95, 95, 510}, {97, 122, 511}, {170, 170, 512}, {181, 181, 513}, {186, 186, 514}, {192, 214, 515}, {216, 246, 516}, {248, 501, 517}, {506, 535, 518}, {592, 680, 519}, {688, 696, 520}, {699, 705, 521}, {720, 721, 522}, {736, 740, 523}, {890, 890, 524}, {902, 902, 525}, {904, 906, 526}, {908, 908, 527}, {910, 929, 528}, {931, 974, 529}, {976, 982, 530}, {986, 986, 531}, {988, 988, 532}, {990, 990, 533}, {992, 992, 534}, {994, 1011, 535}, {1025, 1036, 536}, {1038, 1103, 537}, {1105, 1116, 538}, {1118, 1153, 539}, {1168, 1220, 540}, {1223, 1224, 541}, {1227, 1228, 542}, {1232, 1259, 543}, {1262, 1269, 544}, {1272, 1273, 545}, {1329, 1366, 546}, {1369, 1369, 547}, {1377, 1415, 548}, {1488, 1514, 549}, {1520, 1522, 550}, {1569, 1594, 551}, {1600, 1610, 552}, {1632, 1641, 553}, {1649, 1719, 554}, {1722, 1726, 555}, {1728, 1742, 556}, {1744, 1747, 557}, {1749, 1749, 558}, {1765, 1766, 559}, {1776, 1785, 560}, {2309, 2361, 561}, {2365, 2365, 562}, {2392, 2401, 563}, {2406, 2415, 564}, {2437, 2444, 565}, {2447, 2448, 566}, {2451, 2472, 567}, {2474, 2480, 568}, {2482, 2482, 569}, {2486, 2489, 570}, {2524, 2525, 571}, {2527, 2529, 572}, {2534, 2543, 573}, {2544, 2545, 574}, {2565, 2570, 575}, {2575, 2576, 576}, {2579, 2600, 577}, {2602, 2608, 578}, {2610, 2611, 579}, {2613, 2614, 580}, {2616, 2617, 581}, {2649, 2652, 582}, {2654, 2654, 583}, {2662, 2671, 584}, {2674, 2676, 585}, {2693, 2699, 586}, {2701, 2701, 587}, {2703, 2705, 588}, {2707, 2728, 589}, {2730, 2736, 590}, {2738, 2739, 591}, {2741, 2745, 592}, {2749, 2749, 593}, {2784, 2784, 594}, {2790, 2799, 595}, {2821, 2828, 596}, {2831, 2832, 597}, {2835, 2856, 598}, {2858, 2864, 599}, {2866, 2867, 600}, {2870, 2873, 601}, {2877, 2877, 602}, {2908, 2909, 603}, {2911, 2913, 604}, {2918, 2927, 605}, {2949, 2954, 606}, {2958, 2960, 607}, {2962, 2965, 608}, {2969, 2970, 609}, {2972, 2972, 610}, {2974, 2975, 611}, {2979, 2980, 612}, {2984, 2986, 613}, {2990, 2997, 614}, {2999, 3001, 615}, {3047, 3055, 616}, {3077, 3084, 617}, {3086, 3088, 618}, {3090, 3112, 619}, {3114, 3123, 620}, {3125, 3129, 621}, {3168, 3169, 622}, {3174, 3183, 623}, {3205, 3212, 624}, {3214, 3216, 625}, {3218, 3240, 626}, {3242, 3251, 627}, {3253, 3257, 628}, {3294, 3294, 629}, {3296, 3297, 630}, {3302, 3311, 631}, {3333, 3340, 632}, {3342, 3344, 633}, {3346, 3368, 634}, {3370, 3385, 635}, {3424, 3425, 636}, {3430, 3439, 637}, {3585, 3630, 638}, {3632, 3632, 639}, {3634, 3635, 640}, {3648, 3654, 641}, {3664, 3673, 642}, {3713, 3714, 643}, {3716, 3716, 644}, {3719, 3720, 645}, {3722, 3722, 646}, {3725, 3725, 647}, {3732, 3735, 648}, {3737, 3743, 649}, {3745, 3747, 650}, {3749, 3749, 651}, {3751, 3751, 652}, {3754, 3755, 653}, {3757, 3758, 654}, {3760, 3760, 655}, {3762, 3763, 656}, {3773, 3773, 657}, {3776, 3780, 658}, {3782, 3782, 659}, {3792, 3801, 660}, {3804, 3805, 661}, {3872, 3881, 662}, {3904, 3911, 663}, {3913, 3945, 664}, {4256, 4293, 665}, {4304, 4342, 666}, {4352, 4441, 667}, {4447, 4514, 668}, {4520, 4601, 669}, {7680, 7835, 670}, {7840, 7929, 671}, {7936, 7957, 672}, {7960, 7965, 673}, {7968, 8005, 674}, {8008, 8013, 675}, {8016, 8023, 676}, {8025, 8025, 677}, {8027, 8027, 678}, {8029, 8029, 679}, {8031, 8061, 680}, {8064, 8116, 681}, {8118, 8124, 682}, {8126, 8126, 683}, {8130, 8132, 684}, {8134, 8140, 685}, {8144, 8147, 686}, {8150, 8155, 687}, {8160, 8172, 688}, {8178, 8180, 689}, {8182, 8188, 690}, {8319, 8319, 691}, {8450, 8450, 692}, {8455, 8455, 693}, {8458, 8467, 694}, {8469, 8469, 695}, {8472, 8477, 696}, {8484, 8484, 697}, {8486, 8486, 698}, {8488, 8488, 699}, {8490, 8497, 700}, {8499, 8504, 701}, {12293, 12293, 702}, {12337, 12341, 703}, {12353, 12436, 704}, {12443, 12446, 705}, {12449, 12538, 706}, {12540, 12542, 707}, {12549, 12588, 708}, {12593, 12686, 709}, {19968, 40869, 710}, {44032, 55203, 711}, {63744, 64045, 712}, {64256, 64262, 713}, {64275, 64279, 714}, {64287, 64296, 715}, {64298, 64310, 716}, {64312, 64316, 717}, {64318, 64318, 718}, {64320, 64321, 719}, {64323, 64324, 720}, {64326, 64433, 721}, {64467, 64829, 722}, {64848, 64911, 723}, {64914, 64967, 724}, {65008, 65019, 725}, {65136, 65138, 726}, {65140, 65140, 727}, {65142, 65276, 728}, {65296, 65305, 729}, {65313, 65338, 730}, {65345, 65370, 731}, {65382, 65470, 732}, {65474, 65479, 733}, {65482, 65487, 734}, {65490, 65495, 735}, {65498, 65500, 736}, },
            {},
            {},
            {},
            {{46, 46, 15}, {48, 48, 737}, {49, 57, 738}, },
            {},
            {{46, 57, -14}, },
            {{48, 57, 739}, },
            {{42, 42, 740}, {47, 47, 741}, },
            {{36, 36, 742}, {46, 46, 743}, {48, 57, 744}, {65, 90, 745}, {95, 95, 746}, {97, 122, 747}, {170, 170, 748}, {181, 181, 749}, {186, 186, 750}, {192, 214, 751}, {216, 246, 752}, {248, 501, 753}, {506, 535, 754}, {592, 680, 755}, {688, 696, 756}, {699, 705, 757}, {720, 721, 758}, {736, 740, 759}, {890, 890, 760}, {902, 902, 761}, {904, 906, 762}, {908, 908, 763}, {910, 929, 764}, {931, 974, 765}, {976, 982, 766}, {986, 986, 767}, {988, 988, 768}, {990, 990, 769}, {992, 992, 770}, {994, 1011, 771}, {1025, 1036, 772}, {1038, 1103, 773}, {1105, 1116, 774}, {1118, 1153, 775}, {1168, 1220, 776}, {1223, 1224, 777}, {1227, 1228, 778}, {1232, 1259, 779}, {1262, 1269, 780}, {1272, 1273, 781}, {1329, 1366, 782}, {1369, 1369, 783}, {1377, 1415, 784}, {1488, 1514, 785}, {1520, 1522, 786}, {1569, 1594, 787}, {1600, 1610, 788}, {1632, 1641, 789}, {1649, 1719, 790}, {1722, 1726, 791}, {1728, 1742, 792}, {1744, 1747, 793}, {1749, 1749, 794}, {1765, 1766, 795}, {1776, 1785, 796}, {2309, 2361, 797}, {2365, 2365, 798}, {2392, 2401, 799}, {2406, 2415, 800}, {2437, 2444, 801}, {2447, 2448, 802}, {2451, 2472, 803}, {2474, 2480, 804}, {2482, 2482, 805}, {2486, 2489, 806}, {2524, 2525, 807}, {2527, 2529, 808}, {2534, 2543, 809}, {2544, 2545, 810}, {2565, 2570, 811}, {2575, 2576, 812}, {2579, 2600, 813}, {2602, 2608, 814}, {2610, 2611, 815}, {2613, 2614, 816}, {2616, 2617, 817}, {2649, 2652, 818}, {2654, 2654, 819}, {2662, 2671, 820}, {2674, 2676, 821}, {2693, 2699, 822}, {2701, 2701, 823}, {2703, 2705, 824}, {2707, 2728, 825}, {2730, 2736, 826}, {2738, 2739, 827}, {2741, 2745, 828}, {2749, 2749, 829}, {2784, 2784, 830}, {2790, 2799, 831}, {2821, 2828, 832}, {2831, 2832, 833}, {2835, 2856, 834}, {2858, 2864, 835}, {2866, 2867, 836}, {2870, 2873, 837}, {2877, 2877, 838}, {2908, 2909, 839}, {2911, 2913, 840}, {2918, 2927, 841}, {2949, 2954, 842}, {2958, 2960, 843}, {2962, 2965, 844}, {2969, 2970, 845}, {2972, 2972, 846}, {2974, 2975, 847}, {2979, 2980, 848}, {2984, 2986, 849}, {2990, 2997, 850}, {2999, 3001, 851}, {3047, 3055, 852}, {3077, 3084, 853}, {3086, 3088, 854}, {3090, 3112, 855}, {3114, 3123, 856}, {3125, 3129, 857}, {3168, 3169, 858}, {3174, 3183, 859}, {3205, 3212, 860}, {3214, 3216, 861}, {3218, 3240, 862}, {3242, 3251, 863}, {3253, 3257, 864}, {3294, 3294, 865}, {3296, 3297, 866}, {3302, 3311, 867}, {3333, 3340, 868}, {3342, 3344, 869}, {3346, 3368, 870}, {3370, 3385, 871}, {3424, 3425, 872}, {3430, 3439, 873}, {3585, 3630, 874}, {3632, 3632, 875}, {3634, 3635, 876}, {3648, 3654, 877}, {3664, 3673, 878}, {3713, 3714, 879}, {3716, 3716, 880}, {3719, 3720, 881}, {3722, 3722, 882}, {3725, 3725, 883}, {3732, 3735, 884}, {3737, 3743, 885}, {3745, 3747, 886}, {3749, 3749, 887}, {3751, 3751, 888}, {3754, 3755, 889}, {3757, 3758, 890}, {3760, 3760, 891}, {3762, 3763, 892}, {3773, 3773, 893}, {3776, 3780, 894}, {3782, 3782, 895}, {3792, 3801, 896}, {3804, 3805, 897}, {3872, 3881, 898}, {3904, 3911, 899}, {3913, 3945, 900}, {4256, 4293, 901}, {4304, 4342, 902}, {4352, 4441, 903}, {4447, 4514, 904}, {4520, 4601, 905}, {7680, 7835, 906}, {7840, 7929, 907}, {7936, 7957, 908}, {7960, 7965, 909}, {7968, 8005, 910}, {8008, 8013, 911}, {8016, 8023, 912}, {8025, 8025, 913}, {8027, 8027, 914}, {8029, 8029, 915}, {8031, 8061, 916}, {8064, 8116, 917}, {8118, 8124, 918}, {8126, 8126, 919}, {8130, 8132, 920}, {8134, 8140, 921}, {8144, 8147, 922}, {8150, 8155, 923}, {8160, 8172, 924}, {8178, 8180, 925}, {8182, 8188, 926}, {8319, 8319, 927}, {8450, 8450, 928}, {8455, 8455, 929}, {8458, 8467, 930}, {8469, 8469, 931}, {8472, 8477, 932}, {8484, 8484, 933}, {8486, 8486, 934}, {8488, 8488, 935}, {8490, 8497, 936}, {8499, 8504, 937}, {12293, 12293, 938}, {12337, 12341, 939}, {12353, 12436, 940}, {12443, 12446, 941}, {12449, 12538, 942}, {12540, 12542, 943}, {12549, 12588, 944}, {12593, 12686, 945}, {19968, 40869, 946}, {44032, 55203, 947}, {63744, 64045, 948}, {64256, 64262, 949}, {64275, 64279, 950}, {64287, 64296, 951}, {64298, 64310, 952}, {64312, 64316, 953}, {64318, 64318, 954}, {64320, 64321, 955}, {64323, 64324, 956}, {64326, 64433, 957}, {64467, 64829, 958}, {64848, 64911, 959}, {64914, 64967, 960}, {65008, 65019, 961}, {65136, 65138, 962}, {65140, 65140, 963}, {65142, 65276, 964}, {65296, 65305, 965}, {65313, 65338, 966}, {65345, 65370, 967}, {65382, 65470, 968}, {65474, 65479, 969}, {65482, 65487, 970}, {65490, 65495, 971}, {65498, 65500, 972}, },
            {{36, 46, -19}, {48, 48, 973}, {49, 57, 974}, {65, 65500, -19}, },
            {{36, 57, -10}, {65, 81, 509}, {82, 82, 975}, {83, 90, 509}, {95, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 57, -10}, {65, 75, 509}, {76, 76, 976}, {77, 84, 509}, {85, 85, 977}, {86, 90, 509}, {95, 65500, -10}, },
            {{36, 57, -10}, {65, 72, 509}, {73, 73, 978}, {74, 90, 509}, {95, 65500, -10}, },
            {{36, 72, -24}, {73, 73, 979}, {74, 65500, -24}, },
            {{36, 57, -10}, {65, 78, 509}, {79, 79, 980}, {80, 90, 509}, {95, 65500, -10}, },
            {{36, 57, -10}, {65, 83, 509}, {84, 84, 981}, {85, 90, 509}, {95, 65500, -10}, },
            {},
            {},
            {},
            {{36, 65500, -10}, },
            {{36, 95, -10}, {97, 107, 511}, {108, 108, 982}, {109, 122, 511}, {170, 65500, -10}, },
            {{36, 95, -10}, {97, 97, 983}, {98, 113, 511}, {114, 114, 984}, {115, 122, 511}, {170, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 107, -32}, {108, 108, 985}, {109, 65500, -32}, },
            {{36, 95, -10}, {97, 116, 511}, {117, 117, 986}, {118, 122, 511}, {170, 65500, -10}, },
            {{36, 95, -10}, {97, 109, 511}, {110, 110, 987}, {111, 122, 511}, {170, 65500, -10}, },
            {{36, 95, -10}, {97, 97, 988}, {98, 122, 511}, {170, 65500, -10}, },
            {{36, 95, -10}, {97, 110, 511}, {111, 111, 989}, {112, 116, 511}, {117, 117, 990}, {118, 119, 511}, {120, 120, 991}, {121, 121, 992}, {122, 122, 511}, {170, 65500, -10}, },
            {{36, 95, -10}, {97, 97, 993}, {98, 103, 511}, {104, 104, 994}, {105, 105, 995}, {106, 106, 511}, {107, 107, 996}, {108, 115, 511}, {116, 116, 997}, {117, 122, 511}, {170, 65500, -10}, },
            {{36, 95, -10}, {97, 104, 511}, {105, 105, 998}, {106, 122, 511}, {170, 65500, -10}, },
            {{36, 104, -41}, {105, 105, 999}, {106, 65500, -41}, },
            {{36, 46, -10}, {48, 48, 508}, {49, 49, 1000}, {50, 50, 1001}, {51, 57, 508}, {65, 65500, -10}, },
            {{36, 48, -43}, {49, 49, 1002}, {50, 50, 1003}, {51, 65500, -43}, },
            {{36, 65500, -10}, },
            {},
            {{97, 97, 1004}, {98, 98, 1005}, {104, 104, 1006}, {115, 115, 1007}, },
            {},
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 36, 742}, {46, 46, 507}, {48, 57, 1008}, {65, 65500, -19}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -90}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -90}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -90}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -90}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -90}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -90}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -90}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -90}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -90}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -90}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -90}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -90}, },
            {{36, 65500, -10}, },
            {{36, 65500, -90}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -90}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{9, 32, -2}, },
            {{36, 36, 1009}, {46, 46, 1010}, {48, 57, 1011}, {65, 90, 1012}, {95, 95, 1013}, {97, 122, 1014}, {170, 170, 1015}, {181, 181, 1016}, {186, 186, 1017}, {192, 214, 1018}, {216, 246, 1019}, {248, 501, 1020}, {506, 535, 1021}, {592, 680, 1022}, {688, 696, 1023}, {699, 705, 1024}, {720, 721, 1025}, {736, 740, 1026}, {890, 890, 1027}, {902, 902, 1028}, {904, 906, 1029}, {908, 908, 1030}, {910, 929, 1031}, {931, 974, 1032}, {976, 982, 1033}, {986, 986, 1034}, {988, 988, 1035}, {990, 990, 1036}, {992, 992, 1037}, {994, 1011, 1038}, {1025, 1036, 1039}, {1038, 1103, 1040}, {1105, 1116, 1041}, {1118, 1153, 1042}, {1168, 1220, 1043}, {1223, 1224, 1044}, {1227, 1228, 1045}, {1232, 1259, 1046}, {1262, 1269, 1047}, {1272, 1273, 1048}, {1329, 1366, 1049}, {1369, 1369, 1050}, {1377, 1415, 1051}, {1488, 1514, 1052}, {1520, 1522, 1053}, {1569, 1594, 1054}, {1600, 1610, 1055}, {1632, 1641, 1056}, {1649, 1719, 1057}, {1722, 1726, 1058}, {1728, 1742, 1059}, {1744, 1747, 1060}, {1749, 1749, 1061}, {1765, 1766, 1062}, {1776, 1785, 1063}, {2309, 2361, 1064}, {2365, 2365, 1065}, {2392, 2401, 1066}, {2406, 2415, 1067}, {2437, 2444, 1068}, {2447, 2448, 1069}, {2451, 2472, 1070}, {2474, 2480, 1071}, {2482, 2482, 1072}, {2486, 2489, 1073}, {2524, 2525, 1074}, {2527, 2529, 1075}, {2534, 2543, 1076}, {2544, 2545, 1077}, {2565, 2570, 1078}, {2575, 2576, 1079}, {2579, 2600, 1080}, {2602, 2608, 1081}, {2610, 2611, 1082}, {2613, 2614, 1083}, {2616, 2617, 1084}, {2649, 2652, 1085}, {2654, 2654, 1086}, {2662, 2671, 1087}, {2674, 2676, 1088}, {2693, 2699, 1089}, {2701, 2701, 1090}, {2703, 2705, 1091}, {2707, 2728, 1092}, {2730, 2736, 1093}, {2738, 2739, 1094}, {2741, 2745, 1095}, {2749, 2749, 1096}, {2784, 2784, 1097}, {2790, 2799, 1098}, {2821, 2828, 1099}, {2831, 2832, 1100}, {2835, 2856, 1101}, {2858, 2864, 1102}, {2866, 2867, 1103}, {2870, 2873, 1104}, {2877, 2877, 1105}, {2908, 2909, 1106}, {2911, 2913, 1107}, {2918, 2927, 1108}, {2949, 2954, 1109}, {2958, 2960, 1110}, {2962, 2965, 1111}, {2969, 2970, 1112}, {2972, 2972, 1113}, {2974, 2975, 1114}, {2979, 2980, 1115}, {2984, 2986, 1116}, {2990, 2997, 1117}, {2999, 3001, 1118}, {3047, 3055, 1119}, {3077, 3084, 1120}, {3086, 3088, 1121}, {3090, 3112, 1122}, {3114, 3123, 1123}, {3125, 3129, 1124}, {3168, 3169, 1125}, {3174, 3183, 1126}, {3205, 3212, 1127}, {3214, 3216, 1128}, {3218, 3240, 1129}, {3242, 3251, 1130}, {3253, 3257, 1131}, {3294, 3294, 1132}, {3296, 3297, 1133}, {3302, 3311, 1134}, {3333, 3340, 1135}, {3342, 3344, 1136}, {3346, 3368, 1137}, {3370, 3385, 1138}, {3424, 3425, 1139}, {3430, 3439, 1140}, {3585, 3630, 1141}, {3632, 3632, 1142}, {3634, 3635, 1143}, {3648, 3654, 1144}, {3664, 3673, 1145}, {3713, 3714, 1146}, {3716, 3716, 1147}, {3719, 3720, 1148}, {3722, 3722, 1149}, {3725, 3725, 1150}, {3732, 3735, 1151}, {3737, 3743, 1152}, {3745, 3747, 1153}, {3749, 3749, 1154}, {3751, 3751, 1155}, {3754, 3755, 1156}, {3757, 3758, 1157}, {3760, 3760, 1158}, {3762, 3763, 1159}, {3773, 3773, 1160}, {3776, 3780, 1161}, {3782, 3782, 1162}, {3792, 3801, 1163}, {3804, 3805, 1164}, {3872, 3881, 1165}, {3904, 3911, 1166}, {3913, 3945, 1167}, {4256, 4293, 1168}, {4304, 4342, 1169}, {4352, 4441, 1170}, {4447, 4514, 1171}, {4520, 4601, 1172}, {7680, 7835, 1173}, {7840, 7929, 1174}, {7936, 7957, 1175}, {7960, 7965, 1176}, {7968, 8005, 1177}, {8008, 8013, 1178}, {8016, 8023, 1179}, {8025, 8025, 1180}, {8027, 8027, 1181}, {8029, 8029, 1182}, {8031, 8061, 1183}, {8064, 8116, 1184}, {8118, 8124, 1185}, {8126, 8126, 1186}, {8130, 8132, 1187}, {8134, 8140, 1188}, {8144, 8147, 1189}, {8150, 8155, 1190}, {8160, 8172, 1191}, {8178, 8180, 1192}, {8182, 8188, 1193}, {8319, 8319, 1194}, {8450, 8450, 1195}, {8455, 8455, 1196}, {8458, 8467, 1197}, {8469, 8469, 1198}, {8472, 8477, 1199}, {8484, 8484, 1200}, {8486, 8486, 1201}, {8488, 8488, 1202}, {8490, 8497, 1203}, {8499, 8504, 1204}, {12293, 12293, 1205}, {12337, 12341, 1206}, {12353, 12436, 1207}, {12443, 12446, 1208}, {12449, 12538, 1209}, {12540, 12542, 1210}, {12549, 12588, 1211}, {12593, 12686, 1212}, {19968, 40869, 1213}, {44032, 55203, 1214}, {63744, 64045, 1215}, {64256, 64262, 1216}, {64275, 64279, 1217}, {64287, 64296, 1218}, {64298, 64310, 1219}, {64312, 64316, 1220}, {64318, 64318, 1221}, {64320, 64321, 1222}, {64323, 64324, 1223}, {64326, 64433, 1224}, {64467, 64829, 1225}, {64848, 64911, 1226}, {64914, 64967, 1227}, {65008, 65019, 1228}, {65136, 65138, 1229}, {65140, 65140, 1230}, {65142, 65276, 1231}, {65296, 65305, 1232}, {65313, 65338, 1233}, {65345, 65370, 1234}, {65382, 65470, 1235}, {65474, 65479, 1236}, {65482, 65487, 1237}, {65490, 65495, 1238}, {65498, 65500, 1239}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{0, 65535, -9}, },
            {},
            {{10, 10, 1240}, },
            {{36, 65500, -10}, },
            {{99, 99, 1241}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{46, 46, 1242}, {48, 57, 737}, },
            {{46, 46, 1242}, {48, 48, 1243}, {49, 57, 1244}, },
            {{48, 57, 739}, },
            {{0, 9, 1245}, {10, 10, 1246}, {11, 12, 1245}, {13, 13, 1247}, {14, 41, 1245}, {42, 42, 1248}, {43, 46, 1245}, {47, 47, 1249}, {48, 65535, 1245}, },
            {{0, 65535, -9}, },
            {{36, 65500, -90}, },
            {{48, 57, 1250}, {99, 99, 1241}, },
            {{36, 65500, -19}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 65500, -90}, },
            {{36, 46, -19}, {48, 57, 973}, {65, 65500, -19}, },
            {{36, 65500, -20}, },
            {{36, 57, -10}, {65, 66, 509}, {67, 67, 1251}, {68, 90, 509}, {95, 65500, -10}, },
            {{36, 78, -26}, {79, 79, 1252}, {80, 65500, -26}, },
            {{36, 81, -21}, {82, 82, 1253}, {83, 65500, -21}, },
            {{36, 75, -23}, {76, 76, 1254}, {77, 90, 509}, {95, 65500, -10}, },
            {{36, 57, -10}, {65, 77, 509}, {78, 78, 1255}, {79, 90, 509}, {95, 65500, -10}, },
            {{36, 57, -10}, {65, 85, 509}, {86, 86, 1256}, {87, 90, 509}, {95, 65500, -10}, },
            {{36, 81, -21}, {82, 82, 1257}, {83, 65500, -21}, },
            {{36, 95, -10}, {97, 111, 511}, {112, 112, 1258}, {113, 122, 511}, {170, 65500, -10}, },
            {{36, 95, -10}, {97, 98, 511}, {99, 99, 1259}, {100, 122, 511}, {170, 65500, -10}, },
            {{36, 104, -41}, {105, 105, 1260}, {106, 65500, -41}, },
            {{36, 104, -41}, {105, 105, 1261}, {106, 65500, -41}, },
            {{36, 95, -10}, {97, 100, 511}, {101, 101, 1262}, {102, 122, 511}, {170, 65500, -10}, },
            {{36, 98, -985}, {99, 99, 1263}, {100, 65500, -985}, },
            {{36, 95, -10}, {97, 113, 511}, {114, 114, 1264}, {115, 115, 511}, {116, 116, 1265}, {117, 65500, -40}, },
            {{36, 95, -10}, {97, 115, 511}, {116, 116, 1266}, {117, 65500, -40}, },
            {{36, 107, -32}, {108, 108, 1267}, {109, 65500, -32}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 115, -991}, {116, 116, 1268}, {117, 65500, -40}, },
            {{36, 95, -10}, {97, 97, 1269}, {98, 65500, -38}, },
            {{36, 95, -10}, {97, 121, 511}, {122, 122, 1270}, {170, 65500, -10}, },
            {{36, 100, -988}, {101, 101, 1271}, {102, 65500, -988}, },
            {{36, 95, -10}, {97, 97, 1272}, {98, 65500, -38}, },
            {{36, 107, -32}, {108, 108, 1273}, {109, 65500, -32}, },
            {{36, 95, -10}, {97, 99, 511}, {100, 100, 1274}, {101, 122, 511}, {170, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{108, 108, 1275}, },
            {{114, 114, 1276}, },
            {{117, 117, 1277}, },
            {{97, 97, 1278}, },
            {{36, 65500, -90}, },
            {{36, 65500, -275}, },
            {{99, 99, 1279}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {{36, 65500, -275}, },
            {},
            {{102, 102, 1280}, },
            {{48, 57, 1250}, },
            {{46, 46, 1242}, {48, 57, 1243}, },
            {{46, 57, -740}, },
            {{0, 9, 1281}, {10, 10, 1282}, {11, 12, 1281}, {13, 13, 1283}, {14, 41, 1281}, {42, 42, 1284}, {43, 65535, 1281}, },
            {{0, 65535, -1247}, },
            {{0, 9, 1281}, {10, 10, 1285}, {11, 65535, -1247}, },
            {{0, 65535, -742}, },
            {},
            {{48, 57, 1250}, },
            {{36, 81, -21}, {82, 82, 1286}, {83, 83, 509}, {84, 84, 1287}, {85, 65500, -27}, },
            {{36, 57, -10}, {65, 82, 509}, {83, 83, 1288}, {84, 90, 509}, {95, 65500, -10}, },
            {{36, 85, -982}, {86, 86, 1289}, {87, 65500, -982}, },
            {{36, 75, -23}, {76, 76, 1290}, {77, 65500, -980}, },
            {{36, 57, -10}, {65, 68, 509}, {69, 69, 1291}, {70, 90, 509}, {95, 65500, -10}, },
            {{36, 68, -1257}, {69, 69, 1292}, {70, 65500, -1257}, },
            {{36, 78, -26}, {79, 79, 1293}, {80, 65500, -26}, },
            {{36, 95, -10}, {97, 103, 511}, {104, 104, 1294}, {105, 122, 511}, {170, 65500, -10}, },
            {{36, 95, -10}, {97, 106, 511}, {107, 107, 1295}, {108, 122, 511}, {170, 65500, -10}, },
            {{36, 95, -10}, {97, 102, 511}, {103, 103, 1296}, {104, 122, 511}, {170, 65500, -10}, },
            {{36, 111, -984}, {112, 112, 1297}, {113, 65500, -984}, },
            {{36, 65500, -10}, },
            {{36, 107, -32}, {108, 108, 1298}, {109, 65500, -32}, },
            {{36, 95, -10}, {97, 97, 1299}, {98, 65500, -38}, },
            {{36, 103, -1260}, {104, 104, 1300}, {105, 65500, -1260}, },
            {{36, 95, -10}, {97, 97, 1301}, {98, 65500, -38}, },
            {{36, 100, -988}, {101, 101, 1302}, {102, 65500, -988}, },
            {{36, 116, -36}, {117, 117, 1303}, {118, 65500, -36}, },
            {{36, 111, -984}, {112, 112, 1304}, {113, 65500, -984}, },
            {{36, 100, -988}, {101, 101, 1305}, {102, 65500, -988}, },
            {{36, 95, -10}, {97, 118, 511}, {119, 119, 1306}, {120, 122, 511}, {170, 65500, -10}, },
            {{36, 113, -990}, {114, 114, 1307}, {115, 65500, -33}, },
            {{36, 100, -988}, {101, 101, 1308}, {102, 65500, -988}, },
            {{36, 115, -991}, {116, 116, 1309}, {117, 65500, -40}, },
            {{112, 112, 1310}, },
            {{105, 105, 1311}, },
            {{101, 101, 1312}, },
            {{116, 116, 1313}, },
            {{102, 102, 1314}, },
            {{100, 100, 1315}, },
            {{0, 65535, -1247}, },
            {{0, 65535, -1247}, },
            {{0, 9, 1281}, {10, 10, 1316}, {11, 65535, -1247}, },
            {{0, 41, -742}, {42, 42, 1284}, {43, 65535, -742}, },
            {{0, 65535, -1247}, },
            {{36, 68, -1257}, {69, 69, 1317}, {70, 65500, -1257}, },
            {{36, 78, -26}, {79, 79, 1318}, {80, 65500, -26}, },
            {{36, 68, -1257}, {69, 69, 1319}, {70, 65500, -1257}, },
            {{36, 68, -1257}, {69, 69, 1320}, {70, 65500, -1257}, },
            {{36, 65500, -10}, },
            {{36, 81, -21}, {82, 82, 1321}, {83, 83, 509}, {84, 84, 1322}, {85, 65500, -27}, },
            {{36, 81, -21}, {82, 82, 1323}, {83, 83, 509}, {84, 84, 1324}, {85, 65500, -27}, },
            {{36, 57, -10}, {65, 74, 509}, {75, 75, 1325}, {76, 90, 509}, {95, 65500, -10}, },
            {{36, 95, -10}, {97, 97, 1326}, {98, 65500, -38}, },
            {{36, 102, -1262}, {103, 103, 1327}, {104, 65500, -1262}, },
            {{36, 103, -1260}, {104, 104, 1328}, {105, 65500, -1260}, },
            {{36, 65500, -10}, },
            {{36, 116, -36}, {117, 117, 1329}, {118, 65500, -36}, },
            {{36, 95, -10}, {97, 108, 511}, {109, 109, 1330}, {110, 122, 511}, {170, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 115, -991}, {116, 116, 1331}, {117, 65500, -40}, },
            {{36, 65500, -10}, },
            {{36, 113, -990}, {114, 114, 1332}, {115, 65500, -33}, },
            {{36, 100, -988}, {101, 101, 1333}, {102, 65500, -988}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 115, -991}, {116, 116, 1334}, {117, 65500, -40}, },
            {{36, 65500, -10}, },
            {{36, 103, -1260}, {104, 104, 1335}, {105, 65500, -1260}, },
            {{104, 104, 1336}, },
            {{103, 103, 1337}, },
            {},
            {{117, 117, 1338}, },
            {{100, 100, 1339}, },
            {{103, 103, 1340}, },
            {{0, 65535, -1247}, },
            {{36, 75, -23}, {76, 76, 1341}, {77, 65500, -980}, },
            {{36, 65500, -10}, },
            {{36, 57, -10}, {65, 79, 509}, {80, 80, 1342}, {81, 90, 509}, {95, 65500, -10}, },
            {{36, 81, -21}, {82, 82, 1343}, {83, 83, 509}, {84, 84, 1344}, {85, 65500, -27}, },
            {{36, 68, -1257}, {69, 69, 1345}, {70, 65500, -1257}, },
            {{36, 78, -26}, {79, 79, 1346}, {80, 65500, -26}, },
            {{36, 68, -1257}, {69, 69, 1347}, {70, 65500, -1257}, },
            {{36, 78, -26}, {79, 79, 1348}, {80, 65500, -26}, },
            {{36, 68, -1257}, {69, 69, 1349}, {70, 65500, -1257}, },
            {{36, 65500, -10}, },
            {{36, 113, -990}, {114, 114, 1350}, {115, 65500, -33}, },
            {{36, 115, -991}, {116, 116, 1351}, {117, 65500, -40}, },
            {{36, 99, -1001}, {100, 100, 1352}, {101, 65500, -1001}, },
            {{36, 65500, -10}, },
            {{36, 100, -988}, {101, 101, 1353}, {102, 65500, -988}, },
            {{36, 95, -10}, {97, 97, 1354}, {98, 65500, -38}, },
            {{36, 65500, -10}, },
            {{36, 95, -10}, {97, 114, 511}, {115, 115, 1355}, {116, 122, 511}, {170, 65500, -10}, },
            {{36, 65500, -10}, },
            {{97, 97, 1356}, },
            {{104, 104, 1357}, },
            {{114, 114, 1358}, },
            {{103, 103, 1359}, },
            {},
            {{36, 65500, -10}, },
            {{36, 78, -26}, {79, 79, 1360}, {80, 65500, -26}, },
            {{36, 68, -1257}, {69, 69, 1361}, {70, 65500, -1257}, },
            {{36, 78, -26}, {79, 79, 1362}, {80, 65500, -26}, },
            {{36, 75, -23}, {76, 76, 1363}, {77, 65500, -980}, },
            {{36, 65500, -10}, },
            {{36, 75, -23}, {76, 76, 1364}, {77, 65500, -980}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 110, -39}, {111, 111, 1365}, {112, 122, 511}, {170, 65500, -10}, },
            {{36, 109, -37}, {110, 110, 1366}, {111, 65500, -37}, },
            {{36, 100, -988}, {101, 101, 1367}, {102, 65500, -988}, },
            {{36, 65500, -10}, },
            {{36, 115, -991}, {116, 116, 1368}, {117, 65500, -40}, },
            {{36, 103, -1260}, {104, 104, 1369}, {105, 65500, -1260}, },
            {},
            {{116, 116, 1370}, },
            {{97, 97, 1371}, },
            {{34, 34, 1372}, },
            {{36, 75, -23}, {76, 76, 1373}, {77, 65500, -980}, },
            {{36, 75, -23}, {76, 76, 1374}, {77, 65500, -980}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 116, -36}, {117, 117, 1375}, {118, 65500, -36}, },
            {{36, 100, -988}, {101, 101, 1376}, {102, 65500, -988}, },
            {{36, 65500, -10}, },
            {{36, 104, -41}, {105, 105, 1377}, {106, 65500, -41}, },
            {{36, 95, -10}, {97, 97, 1378}, {98, 65500, -38}, },
            {{110, 110, 1379}, },
            {{116, 116, 1380}, },
            {},
            {{36, 57, -10}, {65, 88, 509}, {89, 89, 1381}, {90, 90, 509}, {95, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 109, -37}, {110, 110, 1382}, {111, 65500, -37}, },
            {{36, 114, -1336}, {115, 115, 1383}, {116, 65500, -1336}, },
            {{36, 110, -39}, {111, 111, 1384}, {112, 65500, -1352}, },
            {{36, 111, -984}, {112, 112, 1385}, {113, 65500, -984}, },
            {{101, 101, 1386}, },
            {{105, 105, 1387}, },
            {{36, 65500, -10}, },
            {{36, 99, -1001}, {100, 100, 1388}, {101, 65500, -1001}, },
            {{36, 114, -1336}, {115, 115, 1389}, {116, 65500, -1336}, },
            {{36, 109, -37}, {110, 110, 1390}, {111, 65500, -37}, },
            {{36, 100, -988}, {101, 101, 1391}, {102, 65500, -988}, },
            {{115, 115, 1392}, },
            {{111, 111, 1393}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{115, 115, 1394}, },
            {{110, 110, 1395}, },
            {},
            {},
        }
    };*/

    private static int[][] accept;
/*  {
        // INITIAL
        {49, 49, 49, 49, 49, 49, -1, 50, 47, 9, 10, 1, 2, 6, 3, -1, 4, -1, 48, 47, 47, 47, 47, 47, 47, 47, 11, 12, 5, 47, 26, 25, 47, 41, 23, 47, 21, 40, 22, 47, 47, 31, 32, 33, 7, 0, 8, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, -1, 47, 47, 47, 47, 47, 47, -1, 47, 47, 47, -1, 47, 47, 47, 47, 47, 47, 47, 47, -1, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, -1, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, -1, 47, 47, 47, 47, 47, 47, 47, 47, 47, -1, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, -1, 47, 47, 47, 47, 47, 47, -1, 47, 47, 47, 47, 47, 47, 47, -1, 47, 47, 47, 47, 47, -1, 47, 47, 47, 47, -1, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, -1, 47, -1, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, -1, 47, 47, 47, 47, 47, 47, 47, 49, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 50, 50, 50, 47, -1, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, -1, 48, 48, -1, 50, -1, 48, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 48, 48, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 38, 39, 47, 47, 47, 47, 47, 47, 47, 34, 36, 35, 37, 30, 29, 27, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 50, -1, 48, 48, 48, -1, -1, -1, -1, 51, 48, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 47, 23, 47, 47, 47, 47, 47, 24, 47, 47, 47, 47, 47, 47, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 47, 47, 47, 47, 44, 47, 47, 47, 47, 47, 47, 41, 47, 47, 19, 47, 18, 47, 47, 17, 42, 47, 16, 47, -1, -1, 27, 28, -1, -1, -1, 47, 45, 47, 47, 47, 47, 47, 47, 47, 26, 47, 47, 47, 21, 47, 47, 20, 47, 43, -1, -1, -1, -1, 46, 45, 47, 47, 47, 47, 45, 47, 45, 44, 47, 47, 47, 40, 47, 47, 30, -1, -1, -1, 47, 47, 45, 45, 45, 47, 47, 15, 47, 47, -1, -1, 46, 47, 45, 47, 47, 47, 47, -1, -1, 45, 47, 47, 47, 47, -1, -1, 14, 25, 24, 13, -1, -1, 29, 28, },

    };*/

    public static class State
    {
        public final static State INITIAL = new State(0);

        private int id;

        private State(@SuppressWarnings("hiding") int id)
        {
            this.id = id;
        }

        public int id()
        {
            return this.id;
        }
    }

    static 
    {
        try
        {
            DataInputStream s = new DataInputStream(
                new BufferedInputStream(
                Lexer.class.getResourceAsStream("lexer.dat")));

            // read gotoTable
            int length = s.readInt();
            gotoTable = new int[length][][][];
            for(int i = 0; i < gotoTable.length; i++)
            {
                length = s.readInt();
                gotoTable[i] = new int[length][][];
                for(int j = 0; j < gotoTable[i].length; j++)
                {
                    length = s.readInt();
                    gotoTable[i][j] = new int[length][3];
                    for(int k = 0; k < gotoTable[i][j].length; k++)
                    {
                        for(int l = 0; l < 3; l++)
                        {
                            gotoTable[i][j][k][l] = s.readInt();
                        }
                    }
                }
            }

            // read accept
            length = s.readInt();
            accept = new int[length][];
            for(int i = 0; i < accept.length; i++)
            {
                length = s.readInt();
                accept[i] = new int[length];
                for(int j = 0; j < accept[i].length; j++)
                {
                    accept[i][j] = s.readInt();
                }
            }

            s.close();
        }
        catch(Exception e)
        {
            throw new RuntimeException("The file \"lexer.dat\" is either missing or corrupted.");
        }
    }
}
