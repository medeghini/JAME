/* This file was generated by SableCC (http://www.sablecc.org/). */

package net.sf.jame.contextfree.cfdg.lexer;

import java.io.*;
import net.sf.jame.contextfree.cfdg.node.*;

@SuppressWarnings("nls")
public class Lexer
{
    protected Token token;
    protected State state = State.INITIAL;

    private PushbackReader in;
    private int line;
    private int pos;
    private boolean cr;
    private boolean eof;
    private final StringBuffer text = new StringBuffer();

    @SuppressWarnings("unused")
    protected void filter() throws LexerException, IOException
    {
        // Do nothing
    }

    public Lexer(@SuppressWarnings("hiding") PushbackReader in)
    {
        this.in = in;
    }
 
    public Token peek() throws LexerException, IOException
    {
        while(this.token == null)
        {
            this.token = getToken();
            filter();
        }

        return this.token;
    }

    public Token next() throws LexerException, IOException
    {
        while(this.token == null)
        {
            this.token = getToken();
            filter();
        }

        Token result = this.token;
        this.token = null;
        return result;
    }

    protected Token getToken() throws IOException, LexerException
    {
        int dfa_state = 0;

        int start_pos = this.pos;
        int start_line = this.line;

        int accept_state = -1;
        int accept_token = -1;
        int accept_length = -1;
        int accept_pos = -1;
        int accept_line = -1;

        @SuppressWarnings("hiding") int[][][] gotoTable = Lexer.gotoTable[this.state.id()];
        @SuppressWarnings("hiding") int[] accept = Lexer.accept[this.state.id()];
        this.text.setLength(0);

        while(true)
        {
            int c = getChar();

            if(c != -1)
            {
                switch(c)
                {
                case 10:
                    if(this.cr)
                    {
                        this.cr = false;
                    }
                    else
                    {
                        this.line++;
                        this.pos = 0;
                    }
                    break;
                case 13:
                    this.line++;
                    this.pos = 0;
                    this.cr = true;
                    break;
                default:
                    this.pos++;
                    this.cr = false;
                    break;
                }

                this.text.append((char) c);

                do
                {
                    int oldState = (dfa_state < -1) ? (-2 -dfa_state) : dfa_state;

                    dfa_state = -1;

                    int[][] tmp1 =  gotoTable[oldState];
                    int low = 0;
                    int high = tmp1.length - 1;

                    while(low <= high)
                    {
                        int middle = (low + high) / 2;
                        int[] tmp2 = tmp1[middle];

                        if(c < tmp2[0])
                        {
                            high = middle - 1;
                        }
                        else if(c > tmp2[1])
                        {
                            low = middle + 1;
                        }
                        else
                        {
                            dfa_state = tmp2[2];
                            break;
                        }
                    }
                }while(dfa_state < -1);
            }
            else
            {
                dfa_state = -1;
            }

            if(dfa_state >= 0)
            {
                if(accept[dfa_state] != -1)
                {
                    accept_state = dfa_state;
                    accept_token = accept[dfa_state];
                    accept_length = this.text.length();
                    accept_pos = this.pos;
                    accept_line = this.line;
                }
            }
            else
            {
                if(accept_state != -1)
                {
                    switch(accept_token)
                    {
                    case 0:
                        {
                            @SuppressWarnings("hiding") Token token = new0(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 1:
                        {
                            @SuppressWarnings("hiding") Token token = new1(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 2:
                        {
                            @SuppressWarnings("hiding") Token token = new2(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 3:
                        {
                            @SuppressWarnings("hiding") Token token = new3(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 4:
                        {
                            @SuppressWarnings("hiding") Token token = new4(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 5:
                        {
                            @SuppressWarnings("hiding") Token token = new5(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 6:
                        {
                            @SuppressWarnings("hiding") Token token = new6(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 7:
                        {
                            @SuppressWarnings("hiding") Token token = new7(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 8:
                        {
                            @SuppressWarnings("hiding") Token token = new8(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 9:
                        {
                            @SuppressWarnings("hiding") Token token = new9(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 10:
                        {
                            @SuppressWarnings("hiding") Token token = new10(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 11:
                        {
                            @SuppressWarnings("hiding") Token token = new11(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 12:
                        {
                            @SuppressWarnings("hiding") Token token = new12(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 13:
                        {
                            @SuppressWarnings("hiding") Token token = new13(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 14:
                        {
                            @SuppressWarnings("hiding") Token token = new14(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 15:
                        {
                            @SuppressWarnings("hiding") Token token = new15(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 16:
                        {
                            @SuppressWarnings("hiding") Token token = new16(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 17:
                        {
                            @SuppressWarnings("hiding") Token token = new17(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 18:
                        {
                            @SuppressWarnings("hiding") Token token = new18(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 19:
                        {
                            @SuppressWarnings("hiding") Token token = new19(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 20:
                        {
                            @SuppressWarnings("hiding") Token token = new20(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 21:
                        {
                            @SuppressWarnings("hiding") Token token = new21(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 22:
                        {
                            @SuppressWarnings("hiding") Token token = new22(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 23:
                        {
                            @SuppressWarnings("hiding") Token token = new23(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 24:
                        {
                            @SuppressWarnings("hiding") Token token = new24(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 25:
                        {
                            @SuppressWarnings("hiding") Token token = new25(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 26:
                        {
                            @SuppressWarnings("hiding") Token token = new26(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 27:
                        {
                            @SuppressWarnings("hiding") Token token = new27(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 28:
                        {
                            @SuppressWarnings("hiding") Token token = new28(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 29:
                        {
                            @SuppressWarnings("hiding") Token token = new29(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 30:
                        {
                            @SuppressWarnings("hiding") Token token = new30(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 31:
                        {
                            @SuppressWarnings("hiding") Token token = new31(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 32:
                        {
                            @SuppressWarnings("hiding") Token token = new32(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 33:
                        {
                            @SuppressWarnings("hiding") Token token = new33(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 34:
                        {
                            @SuppressWarnings("hiding") Token token = new34(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 35:
                        {
                            @SuppressWarnings("hiding") Token token = new35(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 36:
                        {
                            @SuppressWarnings("hiding") Token token = new36(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 37:
                        {
                            @SuppressWarnings("hiding") Token token = new37(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 38:
                        {
                            @SuppressWarnings("hiding") Token token = new38(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 39:
                        {
                            @SuppressWarnings("hiding") Token token = new39(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 40:
                        {
                            @SuppressWarnings("hiding") Token token = new40(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 41:
                        {
                            @SuppressWarnings("hiding") Token token = new41(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 42:
                        {
                            @SuppressWarnings("hiding") Token token = new42(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 43:
                        {
                            @SuppressWarnings("hiding") Token token = new43(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 44:
                        {
                            @SuppressWarnings("hiding") Token token = new44(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 45:
                        {
                            @SuppressWarnings("hiding") Token token = new45(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 46:
                        {
                            @SuppressWarnings("hiding") Token token = new46(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 47:
                        {
                            @SuppressWarnings("hiding") Token token = new47(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 48:
                        {
                            @SuppressWarnings("hiding") Token token = new48(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 49:
                        {
                            @SuppressWarnings("hiding") Token token = new49(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 50:
                        {
                            @SuppressWarnings("hiding") Token token = new50(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    }
                }
                else
                {
                    if(this.text.length() > 0)
                    {
                        throw new LexerException(
                            "[" + (start_line + 1) + "," + (start_pos + 1) + "]" +
                            " Unknown token: " + this.text);
                    }

                    @SuppressWarnings("hiding") EOF token = new EOF(
                        start_line + 1,
                        start_pos + 1);
                    return token;
                }
            }
        }
    }

    Token new0(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TBar(line, pos); }
    Token new1(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TStar(line, pos); }
    Token new2(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TPlus(line, pos); }
    Token new3(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TMinus(line, pos); }
    Token new4(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TSlash(line, pos); }
    Token new5(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TArrow(line, pos); }
    Token new6(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TComma(line, pos); }
    Token new7(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TLCbkt(line, pos); }
    Token new8(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TRCbkt(line, pos); }
    Token new9(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TLRbkt(line, pos); }
    Token new10(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TRRbkt(line, pos); }
    Token new11(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TLSbkt(line, pos); }
    Token new12(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TRSbkt(line, pos); }
    Token new13(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TStartshape(line, pos); }
    Token new14(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TBackground(line, pos); }
    Token new15(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TInclude(line, pos); }
    Token new16(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TTile(line, pos); }
    Token new17(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TSize(line, pos); }
    Token new18(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TRule(line, pos); }
    Token new19(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TPath(line, pos); }
    Token new20(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TShape(line, pos); }
    Token new21(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TParametersToken(text, line, pos); }
    Token new22(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TSizeToken(text, line, pos); }
    Token new23(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new THueToken(text, line, pos); }
    Token new24(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TSaturationToken(text, line, pos); }
    Token new25(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TBrightnessToken(text, line, pos); }
    Token new26(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TAlphaToken(text, line, pos); }
    Token new27(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TTargetHueToken(text, line, pos); }
    Token new28(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TTargetSaturationToken(text, line, pos); }
    Token new29(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TTargetBrightnessToken(text, line, pos); }
    Token new30(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TTargetAlphaToken(text, line, pos); }
    Token new31(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TXToken(line, pos); }
    Token new32(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TYToken(line, pos); }
    Token new33(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TZToken(line, pos); }
    Token new34(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TX1Token(line, pos); }
    Token new35(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TY1Token(line, pos); }
    Token new36(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TX2Token(line, pos); }
    Token new37(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TY2Token(line, pos); }
    Token new38(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TRxToken(line, pos); }
    Token new39(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TRyToken(line, pos); }
    Token new40(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TRotateToken(text, line, pos); }
    Token new41(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TFlipToken(text, line, pos); }
    Token new42(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TSkewToken(line, pos); }
    Token new43(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TStrokewidthToken(line, pos); }
    Token new44(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TPathop(text, line, pos); }
    Token new45(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TFilename(text, line, pos); }
    Token new46(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TString(text, line, pos); }
    Token new47(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TNumber(text, line, pos); }
    Token new48(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TWhiteSpace(text, line, pos); }
    Token new49(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TLineComment(text, line, pos); }
    Token new50(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TBlockComment(text, line, pos); }

    private int getChar() throws IOException
    {
        if(this.eof)
        {
            return -1;
        }

        int result = this.in.read();

        if(result == -1)
        {
            this.eof = true;
        }

        return result;
    }

    private void pushBack(int acceptLength) throws IOException
    {
        int length = this.text.length();
        for(int i = length - 1; i >= acceptLength; i--)
        {
            this.eof = false;

            this.in.unread(this.text.charAt(i));
        }
    }

    protected void unread(@SuppressWarnings("hiding") Token token) throws IOException
    {
        @SuppressWarnings("hiding") String text = token.getText();
        int length = text.length();

        for(int i = length - 1; i >= 0; i--)
        {
            this.eof = false;

            this.in.unread(text.charAt(i));
        }

        this.pos = token.getPos() - 1;
        this.line = token.getLine() - 1;
    }

    private String getText(int acceptLength)
    {
        StringBuffer s = new StringBuffer(acceptLength);
        for(int i = 0; i < acceptLength; i++)
        {
            s.append(this.text.charAt(i));
        }

        return s.toString();
    }

    private static int[][][][] gotoTable;
/*  {
        { // INITIAL
            {{9, 9, 1}, {10, 10, 2}, {12, 12, 3}, {13, 13, 4}, {32, 32, 5}, {34, 34, 6}, {35, 35, 7}, {36, 36, 8}, {40, 40, 9}, {41, 41, 10}, {42, 42, 11}, {43, 43, 12}, {44, 44, 13}, {45, 45, 14}, {46, 46, 15}, {47, 47, 16}, {48, 48, 17}, {49, 57, 18}, {65, 65, 19}, {66, 66, 20}, {67, 67, 21}, {68, 75, 20}, {76, 76, 22}, {77, 77, 23}, {78, 90, 20}, {91, 91, 24}, {93, 93, 25}, {94, 94, 26}, {95, 95, 27}, {97, 97, 28}, {98, 98, 29}, {99, 101, 30}, {102, 102, 31}, {103, 103, 30}, {104, 104, 32}, {105, 105, 33}, {106, 111, 30}, {112, 112, 34}, {113, 113, 30}, {114, 114, 35}, {115, 115, 36}, {116, 116, 37}, {117, 118, 30}, {119, 119, 38}, {120, 120, 39}, {121, 121, 40}, {122, 122, 41}, {123, 123, 42}, {124, 124, 43}, {125, 125, 44}, {170, 170, 45}, {181, 181, 46}, {186, 186, 47}, {192, 214, 48}, {216, 246, 49}, {248, 501, 50}, {506, 535, 51}, {592, 680, 52}, {688, 696, 53}, {699, 705, 54}, {720, 721, 55}, {736, 740, 56}, {890, 890, 57}, {902, 902, 58}, {904, 906, 59}, {908, 908, 60}, {910, 929, 61}, {931, 974, 62}, {976, 982, 63}, {986, 986, 64}, {988, 988, 65}, {990, 990, 66}, {992, 992, 67}, {994, 1011, 68}, {1025, 1036, 69}, {1038, 1103, 70}, {1105, 1116, 71}, {1118, 1153, 72}, {1168, 1220, 73}, {1223, 1224, 74}, {1227, 1228, 75}, {1232, 1259, 76}, {1262, 1269, 77}, {1272, 1273, 78}, {1329, 1366, 79}, {1369, 1369, 80}, {1377, 1415, 81}, {1488, 1514, 82}, {1520, 1522, 83}, {1569, 1594, 84}, {1600, 1610, 85}, {1632, 1641, 86}, {1649, 1719, 87}, {1722, 1726, 88}, {1728, 1742, 89}, {1744, 1747, 90}, {1749, 1749, 91}, {1765, 1766, 92}, {1776, 1785, 93}, {2309, 2361, 94}, {2365, 2365, 95}, {2392, 2401, 96}, {2406, 2415, 97}, {2437, 2444, 98}, {2447, 2448, 99}, {2451, 2472, 100}, {2474, 2480, 101}, {2482, 2482, 102}, {2486, 2489, 103}, {2524, 2525, 104}, {2527, 2529, 105}, {2534, 2543, 106}, {2544, 2545, 107}, {2565, 2570, 108}, {2575, 2576, 109}, {2579, 2600, 110}, {2602, 2608, 111}, {2610, 2611, 112}, {2613, 2614, 113}, {2616, 2617, 114}, {2649, 2652, 115}, {2654, 2654, 116}, {2662, 2671, 117}, {2674, 2676, 118}, {2693, 2699, 119}, {2701, 2701, 120}, {2703, 2705, 121}, {2707, 2728, 122}, {2730, 2736, 123}, {2738, 2739, 124}, {2741, 2745, 125}, {2749, 2749, 126}, {2784, 2784, 127}, {2790, 2799, 128}, {2821, 2828, 129}, {2831, 2832, 130}, {2835, 2856, 131}, {2858, 2864, 132}, {2866, 2867, 133}, {2870, 2873, 134}, {2877, 2877, 135}, {2908, 2909, 136}, {2911, 2913, 137}, {2918, 2927, 138}, {2949, 2954, 139}, {2958, 2960, 140}, {2962, 2965, 141}, {2969, 2970, 142}, {2972, 2972, 143}, {2974, 2975, 144}, {2979, 2980, 145}, {2984, 2986, 146}, {2990, 2997, 147}, {2999, 3001, 148}, {3047, 3055, 149}, {3077, 3084, 150}, {3086, 3088, 151}, {3090, 3112, 152}, {3114, 3123, 153}, {3125, 3129, 154}, {3168, 3169, 155}, {3174, 3183, 156}, {3205, 3212, 157}, {3214, 3216, 158}, {3218, 3240, 159}, {3242, 3251, 160}, {3253, 3257, 161}, {3294, 3294, 162}, {3296, 3297, 163}, {3302, 3311, 164}, {3333, 3340, 165}, {3342, 3344, 166}, {3346, 3368, 167}, {3370, 3385, 168}, {3424, 3425, 169}, {3430, 3439, 170}, {3585, 3630, 171}, {3632, 3632, 172}, {3634, 3635, 173}, {3648, 3654, 174}, {3664, 3673, 175}, {3713, 3714, 176}, {3716, 3716, 177}, {3719, 3720, 178}, {3722, 3722, 179}, {3725, 3725, 180}, {3732, 3735, 181}, {3737, 3743, 182}, {3745, 3747, 183}, {3749, 3749, 184}, {3751, 3751, 185}, {3754, 3755, 186}, {3757, 3758, 187}, {3760, 3760, 188}, {3762, 3763, 189}, {3773, 3773, 190}, {3776, 3780, 191}, {3782, 3782, 192}, {3792, 3801, 193}, {3804, 3805, 194}, {3872, 3881, 195}, {3904, 3911, 196}, {3913, 3945, 197}, {4256, 4293, 198}, {4304, 4342, 199}, {4352, 4441, 200}, {4447, 4514, 201}, {4520, 4601, 202}, {7680, 7835, 203}, {7840, 7929, 204}, {7936, 7957, 205}, {7960, 7965, 206}, {7968, 8005, 207}, {8008, 8013, 208}, {8016, 8023, 209}, {8025, 8025, 210}, {8027, 8027, 211}, {8029, 8029, 212}, {8031, 8061, 213}, {8064, 8116, 214}, {8118, 8124, 215}, {8126, 8126, 216}, {8130, 8132, 217}, {8134, 8140, 218}, {8144, 8147, 219}, {8150, 8155, 220}, {8160, 8172, 221}, {8178, 8180, 222}, {8182, 8188, 223}, {8319, 8319, 224}, {8450, 8450, 225}, {8455, 8455, 226}, {8458, 8467, 227}, {8469, 8469, 228}, {8472, 8477, 229}, {8484, 8484, 230}, {8486, 8486, 231}, {8488, 8488, 232}, {8490, 8497, 233}, {8499, 8504, 234}, {12293, 12293, 235}, {12337, 12341, 236}, {12353, 12436, 237}, {12443, 12446, 238}, {12449, 12538, 239}, {12540, 12542, 240}, {12549, 12588, 241}, {12593, 12686, 242}, {19968, 40869, 243}, {44032, 55203, 244}, {63744, 64045, 245}, {64256, 64262, 246}, {64275, 64279, 247}, {64287, 64296, 248}, {64298, 64310, 249}, {64312, 64316, 250}, {64318, 64318, 251}, {64320, 64321, 252}, {64323, 64324, 253}, {64326, 64433, 254}, {64467, 64829, 255}, {64848, 64911, 256}, {64914, 64967, 257}, {65008, 65019, 258}, {65136, 65138, 259}, {65140, 65140, 260}, {65142, 65276, 261}, {65296, 65305, 262}, {65313, 65338, 263}, {65345, 65370, 264}, {65382, 65470, 265}, {65474, 65479, 266}, {65482, 65487, 267}, {65490, 65495, 268}, {65498, 65500, 269}, },
            {{9, 32, -2}, },
            {{9, 32, -2}, },
            {{9, 32, -2}, },
            {{9, 9, 1}, {10, 10, 270}, {12, 32, -2}, },
            {{9, 32, -2}, },
            {{36, 36, 271}, {48, 57, 272}, {65, 90, 273}, {95, 95, 274}, {97, 122, 275}, {170, 170, 276}, {181, 181, 277}, {186, 186, 278}, {192, 214, 279}, {216, 246, 280}, {248, 501, 281}, {506, 535, 282}, {592, 680, 283}, {688, 696, 284}, {699, 705, 285}, {720, 721, 286}, {736, 740, 287}, {890, 890, 288}, {902, 902, 289}, {904, 906, 290}, {908, 908, 291}, {910, 929, 292}, {931, 974, 293}, {976, 982, 294}, {986, 986, 295}, {988, 988, 296}, {990, 990, 297}, {992, 992, 298}, {994, 1011, 299}, {1025, 1036, 300}, {1038, 1103, 301}, {1105, 1116, 302}, {1118, 1153, 303}, {1168, 1220, 304}, {1223, 1224, 305}, {1227, 1228, 306}, {1232, 1259, 307}, {1262, 1269, 308}, {1272, 1273, 309}, {1329, 1366, 310}, {1369, 1369, 311}, {1377, 1415, 312}, {1488, 1514, 313}, {1520, 1522, 314}, {1569, 1594, 315}, {1600, 1610, 316}, {1632, 1641, 317}, {1649, 1719, 318}, {1722, 1726, 319}, {1728, 1742, 320}, {1744, 1747, 321}, {1749, 1749, 322}, {1765, 1766, 323}, {1776, 1785, 324}, {2309, 2361, 325}, {2365, 2365, 326}, {2392, 2401, 327}, {2406, 2415, 328}, {2437, 2444, 329}, {2447, 2448, 330}, {2451, 2472, 331}, {2474, 2480, 332}, {2482, 2482, 333}, {2486, 2489, 334}, {2524, 2525, 335}, {2527, 2529, 336}, {2534, 2543, 337}, {2544, 2545, 338}, {2565, 2570, 339}, {2575, 2576, 340}, {2579, 2600, 341}, {2602, 2608, 342}, {2610, 2611, 343}, {2613, 2614, 344}, {2616, 2617, 345}, {2649, 2652, 346}, {2654, 2654, 347}, {2662, 2671, 348}, {2674, 2676, 349}, {2693, 2699, 350}, {2701, 2701, 351}, {2703, 2705, 352}, {2707, 2728, 353}, {2730, 2736, 354}, {2738, 2739, 355}, {2741, 2745, 356}, {2749, 2749, 357}, {2784, 2784, 358}, {2790, 2799, 359}, {2821, 2828, 360}, {2831, 2832, 361}, {2835, 2856, 362}, {2858, 2864, 363}, {2866, 2867, 364}, {2870, 2873, 365}, {2877, 2877, 366}, {2908, 2909, 367}, {2911, 2913, 368}, {2918, 2927, 369}, {2949, 2954, 370}, {2958, 2960, 371}, {2962, 2965, 372}, {2969, 2970, 373}, {2972, 2972, 374}, {2974, 2975, 375}, {2979, 2980, 376}, {2984, 2986, 377}, {2990, 2997, 378}, {2999, 3001, 379}, {3047, 3055, 380}, {3077, 3084, 381}, {3086, 3088, 382}, {3090, 3112, 383}, {3114, 3123, 384}, {3125, 3129, 385}, {3168, 3169, 386}, {3174, 3183, 387}, {3205, 3212, 388}, {3214, 3216, 389}, {3218, 3240, 390}, {3242, 3251, 391}, {3253, 3257, 392}, {3294, 3294, 393}, {3296, 3297, 394}, {3302, 3311, 395}, {3333, 3340, 396}, {3342, 3344, 397}, {3346, 3368, 398}, {3370, 3385, 399}, {3424, 3425, 400}, {3430, 3439, 401}, {3585, 3630, 402}, {3632, 3632, 403}, {3634, 3635, 404}, {3648, 3654, 405}, {3664, 3673, 406}, {3713, 3714, 407}, {3716, 3716, 408}, {3719, 3720, 409}, {3722, 3722, 410}, {3725, 3725, 411}, {3732, 3735, 412}, {3737, 3743, 413}, {3745, 3747, 414}, {3749, 3749, 415}, {3751, 3751, 416}, {3754, 3755, 417}, {3757, 3758, 418}, {3760, 3760, 419}, {3762, 3763, 420}, {3773, 3773, 421}, {3776, 3780, 422}, {3782, 3782, 423}, {3792, 3801, 424}, {3804, 3805, 425}, {3872, 3881, 426}, {3904, 3911, 427}, {3913, 3945, 428}, {4256, 4293, 429}, {4304, 4342, 430}, {4352, 4441, 431}, {4447, 4514, 432}, {4520, 4601, 433}, {7680, 7835, 434}, {7840, 7929, 435}, {7936, 7957, 436}, {7960, 7965, 437}, {7968, 8005, 438}, {8008, 8013, 439}, {8016, 8023, 440}, {8025, 8025, 441}, {8027, 8027, 442}, {8029, 8029, 443}, {8031, 8061, 444}, {8064, 8116, 445}, {8118, 8124, 446}, {8126, 8126, 447}, {8130, 8132, 448}, {8134, 8140, 449}, {8144, 8147, 450}, {8150, 8155, 451}, {8160, 8172, 452}, {8178, 8180, 453}, {8182, 8188, 454}, {8319, 8319, 455}, {8450, 8450, 456}, {8455, 8455, 457}, {8458, 8467, 458}, {8469, 8469, 459}, {8472, 8477, 460}, {8484, 8484, 461}, {8486, 8486, 462}, {8488, 8488, 463}, {8490, 8497, 464}, {8499, 8504, 465}, {12293, 12293, 466}, {12337, 12341, 467}, {12353, 12436, 468}, {12443, 12446, 469}, {12449, 12538, 470}, {12540, 12542, 471}, {12549, 12588, 472}, {12593, 12686, 473}, {19968, 40869, 474}, {44032, 55203, 475}, {63744, 64045, 476}, {64256, 64262, 477}, {64275, 64279, 478}, {64287, 64296, 479}, {64298, 64310, 480}, {64312, 64316, 481}, {64318, 64318, 482}, {64320, 64321, 483}, {64323, 64324, 484}, {64326, 64433, 485}, {64467, 64829, 486}, {64848, 64911, 487}, {64914, 64967, 488}, {65008, 65019, 489}, {65136, 65138, 490}, {65140, 65140, 491}, {65142, 65276, 492}, {65296, 65305, 493}, {65313, 65338, 494}, {65345, 65370, 495}, {65382, 65470, 496}, {65474, 65479, 497}, {65482, 65487, 498}, {65490, 65495, 499}, {65498, 65500, 500}, },
            {{0, 9, 501}, {10, 10, 502}, {11, 12, 501}, {13, 13, 503}, {14, 65535, 501}, },
            {{36, 36, 504}, {46, 46, 505}, {48, 57, 506}, {65, 90, 507}, {95, 95, 508}, {97, 122, 509}, {170, 170, 510}, {181, 181, 511}, {186, 186, 512}, {192, 214, 513}, {216, 246, 514}, {248, 501, 515}, {506, 535, 516}, {592, 680, 517}, {688, 696, 518}, {699, 705, 519}, {720, 721, 520}, {736, 740, 521}, {890, 890, 522}, {902, 902, 523}, {904, 906, 524}, {908, 908, 525}, {910, 929, 526}, {931, 974, 527}, {976, 982, 528}, {986, 986, 529}, {988, 988, 530}, {990, 990, 531}, {992, 992, 532}, {994, 1011, 533}, {1025, 1036, 534}, {1038, 1103, 535}, {1105, 1116, 536}, {1118, 1153, 537}, {1168, 1220, 538}, {1223, 1224, 539}, {1227, 1228, 540}, {1232, 1259, 541}, {1262, 1269, 542}, {1272, 1273, 543}, {1329, 1366, 544}, {1369, 1369, 545}, {1377, 1415, 546}, {1488, 1514, 547}, {1520, 1522, 548}, {1569, 1594, 549}, {1600, 1610, 550}, {1632, 1641, 551}, {1649, 1719, 552}, {1722, 1726, 553}, {1728, 1742, 554}, {1744, 1747, 555}, {1749, 1749, 556}, {1765, 1766, 557}, {1776, 1785, 558}, {2309, 2361, 559}, {2365, 2365, 560}, {2392, 2401, 561}, {2406, 2415, 562}, {2437, 2444, 563}, {2447, 2448, 564}, {2451, 2472, 565}, {2474, 2480, 566}, {2482, 2482, 567}, {2486, 2489, 568}, {2524, 2525, 569}, {2527, 2529, 570}, {2534, 2543, 571}, {2544, 2545, 572}, {2565, 2570, 573}, {2575, 2576, 574}, {2579, 2600, 575}, {2602, 2608, 576}, {2610, 2611, 577}, {2613, 2614, 578}, {2616, 2617, 579}, {2649, 2652, 580}, {2654, 2654, 581}, {2662, 2671, 582}, {2674, 2676, 583}, {2693, 2699, 584}, {2701, 2701, 585}, {2703, 2705, 586}, {2707, 2728, 587}, {2730, 2736, 588}, {2738, 2739, 589}, {2741, 2745, 590}, {2749, 2749, 591}, {2784, 2784, 592}, {2790, 2799, 593}, {2821, 2828, 594}, {2831, 2832, 595}, {2835, 2856, 596}, {2858, 2864, 597}, {2866, 2867, 598}, {2870, 2873, 599}, {2877, 2877, 600}, {2908, 2909, 601}, {2911, 2913, 602}, {2918, 2927, 603}, {2949, 2954, 604}, {2958, 2960, 605}, {2962, 2965, 606}, {2969, 2970, 607}, {2972, 2972, 608}, {2974, 2975, 609}, {2979, 2980, 610}, {2984, 2986, 611}, {2990, 2997, 612}, {2999, 3001, 613}, {3047, 3055, 614}, {3077, 3084, 615}, {3086, 3088, 616}, {3090, 3112, 617}, {3114, 3123, 618}, {3125, 3129, 619}, {3168, 3169, 620}, {3174, 3183, 621}, {3205, 3212, 622}, {3214, 3216, 623}, {3218, 3240, 624}, {3242, 3251, 625}, {3253, 3257, 626}, {3294, 3294, 627}, {3296, 3297, 628}, {3302, 3311, 629}, {3333, 3340, 630}, {3342, 3344, 631}, {3346, 3368, 632}, {3370, 3385, 633}, {3424, 3425, 634}, {3430, 3439, 635}, {3585, 3630, 636}, {3632, 3632, 637}, {3634, 3635, 638}, {3648, 3654, 639}, {3664, 3673, 640}, {3713, 3714, 641}, {3716, 3716, 642}, {3719, 3720, 643}, {3722, 3722, 644}, {3725, 3725, 645}, {3732, 3735, 646}, {3737, 3743, 647}, {3745, 3747, 648}, {3749, 3749, 649}, {3751, 3751, 650}, {3754, 3755, 651}, {3757, 3758, 652}, {3760, 3760, 653}, {3762, 3763, 654}, {3773, 3773, 655}, {3776, 3780, 656}, {3782, 3782, 657}, {3792, 3801, 658}, {3804, 3805, 659}, {3872, 3881, 660}, {3904, 3911, 661}, {3913, 3945, 662}, {4256, 4293, 663}, {4304, 4342, 664}, {4352, 4441, 665}, {4447, 4514, 666}, {4520, 4601, 667}, {7680, 7835, 668}, {7840, 7929, 669}, {7936, 7957, 670}, {7960, 7965, 671}, {7968, 8005, 672}, {8008, 8013, 673}, {8016, 8023, 674}, {8025, 8025, 675}, {8027, 8027, 676}, {8029, 8029, 677}, {8031, 8061, 678}, {8064, 8116, 679}, {8118, 8124, 680}, {8126, 8126, 681}, {8130, 8132, 682}, {8134, 8140, 683}, {8144, 8147, 684}, {8150, 8155, 685}, {8160, 8172, 686}, {8178, 8180, 687}, {8182, 8188, 688}, {8319, 8319, 689}, {8450, 8450, 690}, {8455, 8455, 691}, {8458, 8467, 692}, {8469, 8469, 693}, {8472, 8477, 694}, {8484, 8484, 695}, {8486, 8486, 696}, {8488, 8488, 697}, {8490, 8497, 698}, {8499, 8504, 699}, {12293, 12293, 700}, {12337, 12341, 701}, {12353, 12436, 702}, {12443, 12446, 703}, {12449, 12538, 704}, {12540, 12542, 705}, {12549, 12588, 706}, {12593, 12686, 707}, {19968, 40869, 708}, {44032, 55203, 709}, {63744, 64045, 710}, {64256, 64262, 711}, {64275, 64279, 712}, {64287, 64296, 713}, {64298, 64310, 714}, {64312, 64316, 715}, {64318, 64318, 716}, {64320, 64321, 717}, {64323, 64324, 718}, {64326, 64433, 719}, {64467, 64829, 720}, {64848, 64911, 721}, {64914, 64967, 722}, {65008, 65019, 723}, {65136, 65138, 724}, {65140, 65140, 725}, {65142, 65276, 726}, {65296, 65305, 727}, {65313, 65338, 728}, {65345, 65370, 729}, {65382, 65470, 730}, {65474, 65479, 731}, {65482, 65487, 732}, {65490, 65495, 733}, {65498, 65500, 734}, },
            {},
            {},
            {},
            {{46, 46, 15}, {48, 48, 735}, {49, 57, 736}, },
            {},
            {{46, 57, -14}, },
            {{48, 57, 737}, },
            {{42, 42, 738}, {47, 47, 739}, },
            {{36, 36, 740}, {46, 46, 741}, {48, 57, 742}, {65, 90, 743}, {95, 95, 744}, {97, 122, 745}, {170, 170, 746}, {181, 181, 747}, {186, 186, 748}, {192, 214, 749}, {216, 246, 750}, {248, 501, 751}, {506, 535, 752}, {592, 680, 753}, {688, 696, 754}, {699, 705, 755}, {720, 721, 756}, {736, 740, 757}, {890, 890, 758}, {902, 902, 759}, {904, 906, 760}, {908, 908, 761}, {910, 929, 762}, {931, 974, 763}, {976, 982, 764}, {986, 986, 765}, {988, 988, 766}, {990, 990, 767}, {992, 992, 768}, {994, 1011, 769}, {1025, 1036, 770}, {1038, 1103, 771}, {1105, 1116, 772}, {1118, 1153, 773}, {1168, 1220, 774}, {1223, 1224, 775}, {1227, 1228, 776}, {1232, 1259, 777}, {1262, 1269, 778}, {1272, 1273, 779}, {1329, 1366, 780}, {1369, 1369, 781}, {1377, 1415, 782}, {1488, 1514, 783}, {1520, 1522, 784}, {1569, 1594, 785}, {1600, 1610, 786}, {1632, 1641, 787}, {1649, 1719, 788}, {1722, 1726, 789}, {1728, 1742, 790}, {1744, 1747, 791}, {1749, 1749, 792}, {1765, 1766, 793}, {1776, 1785, 794}, {2309, 2361, 795}, {2365, 2365, 796}, {2392, 2401, 797}, {2406, 2415, 798}, {2437, 2444, 799}, {2447, 2448, 800}, {2451, 2472, 801}, {2474, 2480, 802}, {2482, 2482, 803}, {2486, 2489, 804}, {2524, 2525, 805}, {2527, 2529, 806}, {2534, 2543, 807}, {2544, 2545, 808}, {2565, 2570, 809}, {2575, 2576, 810}, {2579, 2600, 811}, {2602, 2608, 812}, {2610, 2611, 813}, {2613, 2614, 814}, {2616, 2617, 815}, {2649, 2652, 816}, {2654, 2654, 817}, {2662, 2671, 818}, {2674, 2676, 819}, {2693, 2699, 820}, {2701, 2701, 821}, {2703, 2705, 822}, {2707, 2728, 823}, {2730, 2736, 824}, {2738, 2739, 825}, {2741, 2745, 826}, {2749, 2749, 827}, {2784, 2784, 828}, {2790, 2799, 829}, {2821, 2828, 830}, {2831, 2832, 831}, {2835, 2856, 832}, {2858, 2864, 833}, {2866, 2867, 834}, {2870, 2873, 835}, {2877, 2877, 836}, {2908, 2909, 837}, {2911, 2913, 838}, {2918, 2927, 839}, {2949, 2954, 840}, {2958, 2960, 841}, {2962, 2965, 842}, {2969, 2970, 843}, {2972, 2972, 844}, {2974, 2975, 845}, {2979, 2980, 846}, {2984, 2986, 847}, {2990, 2997, 848}, {2999, 3001, 849}, {3047, 3055, 850}, {3077, 3084, 851}, {3086, 3088, 852}, {3090, 3112, 853}, {3114, 3123, 854}, {3125, 3129, 855}, {3168, 3169, 856}, {3174, 3183, 857}, {3205, 3212, 858}, {3214, 3216, 859}, {3218, 3240, 860}, {3242, 3251, 861}, {3253, 3257, 862}, {3294, 3294, 863}, {3296, 3297, 864}, {3302, 3311, 865}, {3333, 3340, 866}, {3342, 3344, 867}, {3346, 3368, 868}, {3370, 3385, 869}, {3424, 3425, 870}, {3430, 3439, 871}, {3585, 3630, 872}, {3632, 3632, 873}, {3634, 3635, 874}, {3648, 3654, 875}, {3664, 3673, 876}, {3713, 3714, 877}, {3716, 3716, 878}, {3719, 3720, 879}, {3722, 3722, 880}, {3725, 3725, 881}, {3732, 3735, 882}, {3737, 3743, 883}, {3745, 3747, 884}, {3749, 3749, 885}, {3751, 3751, 886}, {3754, 3755, 887}, {3757, 3758, 888}, {3760, 3760, 889}, {3762, 3763, 890}, {3773, 3773, 891}, {3776, 3780, 892}, {3782, 3782, 893}, {3792, 3801, 894}, {3804, 3805, 895}, {3872, 3881, 896}, {3904, 3911, 897}, {3913, 3945, 898}, {4256, 4293, 899}, {4304, 4342, 900}, {4352, 4441, 901}, {4447, 4514, 902}, {4520, 4601, 903}, {7680, 7835, 904}, {7840, 7929, 905}, {7936, 7957, 906}, {7960, 7965, 907}, {7968, 8005, 908}, {8008, 8013, 909}, {8016, 8023, 910}, {8025, 8025, 911}, {8027, 8027, 912}, {8029, 8029, 913}, {8031, 8061, 914}, {8064, 8116, 915}, {8118, 8124, 916}, {8126, 8126, 917}, {8130, 8132, 918}, {8134, 8140, 919}, {8144, 8147, 920}, {8150, 8155, 921}, {8160, 8172, 922}, {8178, 8180, 923}, {8182, 8188, 924}, {8319, 8319, 925}, {8450, 8450, 926}, {8455, 8455, 927}, {8458, 8467, 928}, {8469, 8469, 929}, {8472, 8477, 930}, {8484, 8484, 931}, {8486, 8486, 932}, {8488, 8488, 933}, {8490, 8497, 934}, {8499, 8504, 935}, {12293, 12293, 936}, {12337, 12341, 937}, {12353, 12436, 938}, {12443, 12446, 939}, {12449, 12538, 940}, {12540, 12542, 941}, {12549, 12588, 942}, {12593, 12686, 943}, {19968, 40869, 944}, {44032, 55203, 945}, {63744, 64045, 946}, {64256, 64262, 947}, {64275, 64279, 948}, {64287, 64296, 949}, {64298, 64310, 950}, {64312, 64316, 951}, {64318, 64318, 952}, {64320, 64321, 953}, {64323, 64324, 954}, {64326, 64433, 955}, {64467, 64829, 956}, {64848, 64911, 957}, {64914, 64967, 958}, {65008, 65019, 959}, {65136, 65138, 960}, {65140, 65140, 961}, {65142, 65276, 962}, {65296, 65305, 963}, {65313, 65338, 964}, {65345, 65370, 965}, {65382, 65470, 966}, {65474, 65479, 967}, {65482, 65487, 968}, {65490, 65495, 969}, {65498, 65500, 970}, },
            {{36, 46, -19}, {48, 48, 971}, {49, 57, 972}, {65, 65500, -19}, },
            {{36, 57, -10}, {65, 81, 507}, {82, 82, 973}, {83, 90, 507}, {95, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 57, -10}, {65, 75, 507}, {76, 76, 974}, {77, 84, 507}, {85, 85, 975}, {86, 90, 507}, {95, 65500, -10}, },
            {{36, 57, -10}, {65, 72, 507}, {73, 73, 976}, {74, 90, 507}, {95, 65500, -10}, },
            {{36, 57, -10}, {65, 78, 507}, {79, 79, 977}, {80, 90, 507}, {95, 65500, -10}, },
            {},
            {},
            {},
            {{36, 65500, -10}, },
            {{36, 95, -10}, {97, 107, 509}, {108, 108, 978}, {109, 122, 509}, {170, 65500, -10}, },
            {{36, 95, -10}, {97, 97, 979}, {98, 113, 509}, {114, 114, 980}, {115, 122, 509}, {170, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 107, -30}, {108, 108, 981}, {109, 65500, -30}, },
            {{36, 95, -10}, {97, 116, 509}, {117, 117, 982}, {118, 122, 509}, {170, 65500, -10}, },
            {{36, 95, -10}, {97, 109, 509}, {110, 110, 983}, {111, 122, 509}, {170, 65500, -10}, },
            {{36, 95, -10}, {97, 97, 984}, {98, 122, 509}, {170, 65500, -10}, },
            {{36, 95, -10}, {97, 110, 509}, {111, 111, 985}, {112, 116, 509}, {117, 117, 986}, {118, 119, 509}, {120, 120, 987}, {121, 121, 988}, {122, 122, 509}, {170, 65500, -10}, },
            {{36, 95, -10}, {97, 97, 989}, {98, 103, 509}, {104, 104, 990}, {105, 105, 991}, {106, 106, 509}, {107, 107, 992}, {108, 115, 509}, {116, 116, 993}, {117, 122, 509}, {170, 65500, -10}, },
            {{36, 95, -10}, {97, 104, 509}, {105, 105, 994}, {106, 122, 509}, {170, 65500, -10}, },
            {{36, 104, -39}, {105, 105, 995}, {106, 65500, -39}, },
            {{36, 46, -10}, {48, 48, 506}, {49, 49, 996}, {50, 50, 997}, {51, 57, 506}, {65, 65500, -10}, },
            {{36, 48, -41}, {49, 49, 998}, {50, 50, 999}, {51, 65500, -41}, },
            {{36, 65500, -10}, },
            {},
            {{97, 97, 1000}, {98, 98, 1001}, {104, 104, 1002}, {115, 115, 1003}, },
            {},
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 36, 740}, {46, 46, 505}, {48, 57, 1004}, {65, 65500, -19}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -88}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -88}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -88}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -88}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -88}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -88}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -88}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -88}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -88}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -88}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -88}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -88}, },
            {{36, 65500, -10}, },
            {{36, 65500, -88}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -88}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{9, 32, -2}, },
            {{36, 36, 1005}, {46, 46, 1006}, {48, 57, 1007}, {65, 90, 1008}, {95, 95, 1009}, {97, 122, 1010}, {170, 170, 1011}, {181, 181, 1012}, {186, 186, 1013}, {192, 214, 1014}, {216, 246, 1015}, {248, 501, 1016}, {506, 535, 1017}, {592, 680, 1018}, {688, 696, 1019}, {699, 705, 1020}, {720, 721, 1021}, {736, 740, 1022}, {890, 890, 1023}, {902, 902, 1024}, {904, 906, 1025}, {908, 908, 1026}, {910, 929, 1027}, {931, 974, 1028}, {976, 982, 1029}, {986, 986, 1030}, {988, 988, 1031}, {990, 990, 1032}, {992, 992, 1033}, {994, 1011, 1034}, {1025, 1036, 1035}, {1038, 1103, 1036}, {1105, 1116, 1037}, {1118, 1153, 1038}, {1168, 1220, 1039}, {1223, 1224, 1040}, {1227, 1228, 1041}, {1232, 1259, 1042}, {1262, 1269, 1043}, {1272, 1273, 1044}, {1329, 1366, 1045}, {1369, 1369, 1046}, {1377, 1415, 1047}, {1488, 1514, 1048}, {1520, 1522, 1049}, {1569, 1594, 1050}, {1600, 1610, 1051}, {1632, 1641, 1052}, {1649, 1719, 1053}, {1722, 1726, 1054}, {1728, 1742, 1055}, {1744, 1747, 1056}, {1749, 1749, 1057}, {1765, 1766, 1058}, {1776, 1785, 1059}, {2309, 2361, 1060}, {2365, 2365, 1061}, {2392, 2401, 1062}, {2406, 2415, 1063}, {2437, 2444, 1064}, {2447, 2448, 1065}, {2451, 2472, 1066}, {2474, 2480, 1067}, {2482, 2482, 1068}, {2486, 2489, 1069}, {2524, 2525, 1070}, {2527, 2529, 1071}, {2534, 2543, 1072}, {2544, 2545, 1073}, {2565, 2570, 1074}, {2575, 2576, 1075}, {2579, 2600, 1076}, {2602, 2608, 1077}, {2610, 2611, 1078}, {2613, 2614, 1079}, {2616, 2617, 1080}, {2649, 2652, 1081}, {2654, 2654, 1082}, {2662, 2671, 1083}, {2674, 2676, 1084}, {2693, 2699, 1085}, {2701, 2701, 1086}, {2703, 2705, 1087}, {2707, 2728, 1088}, {2730, 2736, 1089}, {2738, 2739, 1090}, {2741, 2745, 1091}, {2749, 2749, 1092}, {2784, 2784, 1093}, {2790, 2799, 1094}, {2821, 2828, 1095}, {2831, 2832, 1096}, {2835, 2856, 1097}, {2858, 2864, 1098}, {2866, 2867, 1099}, {2870, 2873, 1100}, {2877, 2877, 1101}, {2908, 2909, 1102}, {2911, 2913, 1103}, {2918, 2927, 1104}, {2949, 2954, 1105}, {2958, 2960, 1106}, {2962, 2965, 1107}, {2969, 2970, 1108}, {2972, 2972, 1109}, {2974, 2975, 1110}, {2979, 2980, 1111}, {2984, 2986, 1112}, {2990, 2997, 1113}, {2999, 3001, 1114}, {3047, 3055, 1115}, {3077, 3084, 1116}, {3086, 3088, 1117}, {3090, 3112, 1118}, {3114, 3123, 1119}, {3125, 3129, 1120}, {3168, 3169, 1121}, {3174, 3183, 1122}, {3205, 3212, 1123}, {3214, 3216, 1124}, {3218, 3240, 1125}, {3242, 3251, 1126}, {3253, 3257, 1127}, {3294, 3294, 1128}, {3296, 3297, 1129}, {3302, 3311, 1130}, {3333, 3340, 1131}, {3342, 3344, 1132}, {3346, 3368, 1133}, {3370, 3385, 1134}, {3424, 3425, 1135}, {3430, 3439, 1136}, {3585, 3630, 1137}, {3632, 3632, 1138}, {3634, 3635, 1139}, {3648, 3654, 1140}, {3664, 3673, 1141}, {3713, 3714, 1142}, {3716, 3716, 1143}, {3719, 3720, 1144}, {3722, 3722, 1145}, {3725, 3725, 1146}, {3732, 3735, 1147}, {3737, 3743, 1148}, {3745, 3747, 1149}, {3749, 3749, 1150}, {3751, 3751, 1151}, {3754, 3755, 1152}, {3757, 3758, 1153}, {3760, 3760, 1154}, {3762, 3763, 1155}, {3773, 3773, 1156}, {3776, 3780, 1157}, {3782, 3782, 1158}, {3792, 3801, 1159}, {3804, 3805, 1160}, {3872, 3881, 1161}, {3904, 3911, 1162}, {3913, 3945, 1163}, {4256, 4293, 1164}, {4304, 4342, 1165}, {4352, 4441, 1166}, {4447, 4514, 1167}, {4520, 4601, 1168}, {7680, 7835, 1169}, {7840, 7929, 1170}, {7936, 7957, 1171}, {7960, 7965, 1172}, {7968, 8005, 1173}, {8008, 8013, 1174}, {8016, 8023, 1175}, {8025, 8025, 1176}, {8027, 8027, 1177}, {8029, 8029, 1178}, {8031, 8061, 1179}, {8064, 8116, 1180}, {8118, 8124, 1181}, {8126, 8126, 1182}, {8130, 8132, 1183}, {8134, 8140, 1184}, {8144, 8147, 1185}, {8150, 8155, 1186}, {8160, 8172, 1187}, {8178, 8180, 1188}, {8182, 8188, 1189}, {8319, 8319, 1190}, {8450, 8450, 1191}, {8455, 8455, 1192}, {8458, 8467, 1193}, {8469, 8469, 1194}, {8472, 8477, 1195}, {8484, 8484, 1196}, {8486, 8486, 1197}, {8488, 8488, 1198}, {8490, 8497, 1199}, {8499, 8504, 1200}, {12293, 12293, 1201}, {12337, 12341, 1202}, {12353, 12436, 1203}, {12443, 12446, 1204}, {12449, 12538, 1205}, {12540, 12542, 1206}, {12549, 12588, 1207}, {12593, 12686, 1208}, {19968, 40869, 1209}, {44032, 55203, 1210}, {63744, 64045, 1211}, {64256, 64262, 1212}, {64275, 64279, 1213}, {64287, 64296, 1214}, {64298, 64310, 1215}, {64312, 64316, 1216}, {64318, 64318, 1217}, {64320, 64321, 1218}, {64323, 64324, 1219}, {64326, 64433, 1220}, {64467, 64829, 1221}, {64848, 64911, 1222}, {64914, 64967, 1223}, {65008, 65019, 1224}, {65136, 65138, 1225}, {65140, 65140, 1226}, {65142, 65276, 1227}, {65296, 65305, 1228}, {65313, 65338, 1229}, {65345, 65370, 1230}, {65382, 65470, 1231}, {65474, 65479, 1232}, {65482, 65487, 1233}, {65490, 65495, 1234}, {65498, 65500, 1235}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{0, 65535, -9}, },
            {},
            {{10, 10, 1236}, },
            {{36, 65500, -10}, },
            {{99, 99, 1237}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{46, 46, 1238}, {48, 57, 735}, },
            {{46, 46, 1238}, {48, 48, 1239}, {49, 57, 1240}, },
            {{48, 57, 737}, },
            {{0, 9, 1241}, {10, 10, 1242}, {11, 12, 1241}, {13, 13, 1243}, {14, 41, 1241}, {42, 42, 1244}, {43, 46, 1241}, {47, 47, 1245}, {48, 65535, 1241}, },
            {{0, 65535, -9}, },
            {{36, 65500, -88}, },
            {{48, 57, 1246}, {99, 99, 1237}, },
            {{36, 65500, -19}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 65500, -88}, },
            {{36, 46, -19}, {48, 57, 971}, {65, 65500, -19}, },
            {{36, 65500, -20}, },
            {{36, 57, -10}, {65, 66, 507}, {67, 67, 1247}, {68, 90, 507}, {95, 65500, -10}, },
            {{36, 78, -25}, {79, 79, 1248}, {80, 65500, -25}, },
            {{36, 81, -21}, {82, 82, 1249}, {83, 65500, -21}, },
            {{36, 57, -10}, {65, 77, 507}, {78, 78, 1250}, {79, 90, 507}, {95, 65500, -10}, },
            {{36, 57, -10}, {65, 85, 507}, {86, 86, 1251}, {87, 90, 507}, {95, 65500, -10}, },
            {{36, 95, -10}, {97, 111, 509}, {112, 112, 1252}, {113, 122, 509}, {170, 65500, -10}, },
            {{36, 95, -10}, {97, 98, 509}, {99, 99, 1253}, {100, 122, 509}, {170, 65500, -10}, },
            {{36, 104, -39}, {105, 105, 1254}, {106, 65500, -39}, },
            {{36, 104, -39}, {105, 105, 1255}, {106, 65500, -39}, },
            {{36, 95, -10}, {97, 100, 509}, {101, 101, 1256}, {102, 122, 509}, {170, 65500, -10}, },
            {{36, 98, -981}, {99, 99, 1257}, {100, 65500, -981}, },
            {{36, 95, -10}, {97, 113, 509}, {114, 114, 1258}, {115, 115, 509}, {116, 116, 1259}, {117, 65500, -38}, },
            {{36, 95, -10}, {97, 115, 509}, {116, 116, 1260}, {117, 65500, -38}, },
            {{36, 107, -30}, {108, 108, 1261}, {109, 65500, -30}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 115, -987}, {116, 116, 1262}, {117, 65500, -38}, },
            {{36, 95, -10}, {97, 97, 1263}, {98, 65500, -36}, },
            {{36, 95, -10}, {97, 121, 509}, {122, 122, 1264}, {170, 65500, -10}, },
            {{36, 100, -984}, {101, 101, 1265}, {102, 65500, -984}, },
            {{36, 95, -10}, {97, 97, 1266}, {98, 65500, -36}, },
            {{36, 107, -30}, {108, 108, 1267}, {109, 65500, -30}, },
            {{36, 95, -10}, {97, 99, 509}, {100, 100, 1268}, {101, 122, 509}, {170, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{108, 108, 1269}, },
            {{114, 114, 1270}, },
            {{117, 117, 1271}, },
            {{97, 97, 1272}, },
            {{36, 65500, -88}, },
            {{36, 65500, -273}, },
            {{99, 99, 1273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {{36, 65500, -273}, },
            {},
            {{102, 102, 1274}, },
            {{48, 57, 1246}, },
            {{46, 46, 1238}, {48, 57, 1239}, },
            {{46, 57, -738}, },
            {{0, 9, 1275}, {10, 10, 1276}, {11, 12, 1275}, {13, 13, 1277}, {14, 41, 1275}, {42, 42, 1278}, {43, 65535, 1275}, },
            {{0, 65535, -1243}, },
            {{0, 9, 1275}, {10, 10, 1279}, {11, 65535, -1243}, },
            {{0, 65535, -740}, },
            {},
            {{48, 57, 1246}, },
            {{36, 81, -21}, {82, 82, 1280}, {83, 83, 507}, {84, 84, 1281}, {85, 90, 507}, {95, 65500, -10}, },
            {{36, 57, -10}, {65, 82, 507}, {83, 83, 1282}, {84, 90, 507}, {95, 65500, -10}, },
            {{36, 85, -979}, {86, 86, 1283}, {87, 65500, -979}, },
            {{36, 57, -10}, {65, 68, 507}, {69, 69, 1284}, {70, 90, 507}, {95, 65500, -10}, },
            {{36, 68, -1252}, {69, 69, 1285}, {70, 65500, -1252}, },
            {{36, 95, -10}, {97, 103, 509}, {104, 104, 1286}, {105, 122, 509}, {170, 65500, -10}, },
            {{36, 95, -10}, {97, 106, 509}, {107, 107, 1287}, {108, 122, 509}, {170, 65500, -10}, },
            {{36, 95, -10}, {97, 102, 509}, {103, 103, 1288}, {104, 122, 509}, {170, 65500, -10}, },
            {{36, 111, -980}, {112, 112, 1289}, {113, 65500, -980}, },
            {{36, 65500, -10}, },
            {{36, 107, -30}, {108, 108, 1290}, {109, 65500, -30}, },
            {{36, 95, -10}, {97, 97, 1291}, {98, 65500, -36}, },
            {{36, 103, -1254}, {104, 104, 1292}, {105, 65500, -1254}, },
            {{36, 95, -10}, {97, 97, 1293}, {98, 65500, -36}, },
            {{36, 100, -984}, {101, 101, 1294}, {102, 65500, -984}, },
            {{36, 116, -34}, {117, 117, 1295}, {118, 65500, -34}, },
            {{36, 111, -980}, {112, 112, 1296}, {113, 65500, -980}, },
            {{36, 100, -984}, {101, 101, 1297}, {102, 65500, -984}, },
            {{36, 95, -10}, {97, 118, 509}, {119, 119, 1298}, {120, 122, 509}, {170, 65500, -10}, },
            {{36, 113, -986}, {114, 114, 1299}, {115, 65500, -31}, },
            {{36, 100, -984}, {101, 101, 1300}, {102, 65500, -984}, },
            {{36, 115, -987}, {116, 116, 1301}, {117, 65500, -38}, },
            {{112, 112, 1302}, },
            {{105, 105, 1303}, },
            {{101, 101, 1304}, },
            {{116, 116, 1305}, },
            {{102, 102, 1306}, },
            {{100, 100, 1307}, },
            {{0, 65535, -1243}, },
            {{0, 65535, -1243}, },
            {{0, 9, 1275}, {10, 10, 1308}, {11, 65535, -1243}, },
            {{0, 41, -740}, {42, 42, 1278}, {43, 65535, -740}, },
            {{0, 65535, -1243}, },
            {{36, 68, -1252}, {69, 69, 1309}, {70, 65500, -1252}, },
            {{36, 78, -25}, {79, 79, 1310}, {80, 65500, -25}, },
            {{36, 68, -1252}, {69, 69, 1311}, {70, 65500, -1252}, },
            {{36, 68, -1252}, {69, 69, 1312}, {70, 65500, -1252}, },
            {{36, 81, -21}, {82, 82, 1313}, {83, 83, 507}, {84, 84, 1314}, {85, 65500, -1249}, },
            {{36, 81, -21}, {82, 82, 1315}, {83, 83, 507}, {84, 84, 1316}, {85, 65500, -1249}, },
            {{36, 95, -10}, {97, 97, 1317}, {98, 65500, -36}, },
            {{36, 102, -1256}, {103, 103, 1318}, {104, 65500, -1256}, },
            {{36, 103, -1254}, {104, 104, 1319}, {105, 65500, -1254}, },
            {{36, 65500, -10}, },
            {{36, 116, -34}, {117, 117, 1320}, {118, 65500, -34}, },
            {{36, 95, -10}, {97, 108, 509}, {109, 109, 1321}, {110, 122, 509}, {170, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 115, -987}, {116, 116, 1322}, {117, 65500, -38}, },
            {{36, 65500, -10}, },
            {{36, 113, -986}, {114, 114, 1323}, {115, 65500, -31}, },
            {{36, 100, -984}, {101, 101, 1324}, {102, 65500, -984}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 115, -987}, {116, 116, 1325}, {117, 65500, -38}, },
            {{36, 65500, -10}, },
            {{36, 103, -1254}, {104, 104, 1326}, {105, 65500, -1254}, },
            {{104, 104, 1327}, },
            {{103, 103, 1328}, },
            {},
            {{117, 117, 1329}, },
            {{100, 100, 1330}, },
            {{103, 103, 1331}, },
            {{0, 65535, -1243}, },
            {{36, 75, -23}, {76, 76, 1332}, {77, 90, 507}, {95, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 57, -10}, {65, 79, 507}, {80, 80, 1333}, {81, 90, 507}, {95, 65500, -10}, },
            {{36, 81, -21}, {82, 82, 1334}, {83, 83, 507}, {84, 84, 1335}, {85, 65500, -1249}, },
            {{36, 68, -1252}, {69, 69, 1336}, {70, 65500, -1252}, },
            {{36, 78, -25}, {79, 79, 1337}, {80, 65500, -25}, },
            {{36, 68, -1252}, {69, 69, 1338}, {70, 65500, -1252}, },
            {{36, 78, -25}, {79, 79, 1339}, {80, 65500, -25}, },
            {{36, 65500, -10}, },
            {{36, 113, -986}, {114, 114, 1340}, {115, 65500, -31}, },
            {{36, 115, -987}, {116, 116, 1341}, {117, 65500, -38}, },
            {{36, 99, -997}, {100, 100, 1342}, {101, 65500, -997}, },
            {{36, 65500, -10}, },
            {{36, 100, -984}, {101, 101, 1343}, {102, 65500, -984}, },
            {{36, 95, -10}, {97, 97, 1344}, {98, 65500, -36}, },
            {{36, 65500, -10}, },
            {{36, 95, -10}, {97, 114, 509}, {115, 115, 1345}, {116, 122, 509}, {170, 65500, -10}, },
            {{36, 65500, -10}, },
            {{97, 97, 1346}, },
            {{104, 104, 1347}, },
            {{114, 114, 1348}, },
            {{103, 103, 1349}, },
            {},
            {{36, 65500, -10}, },
            {{36, 78, -25}, {79, 79, 1350}, {80, 65500, -25}, },
            {{36, 68, -1252}, {69, 69, 1351}, {70, 65500, -1252}, },
            {{36, 78, -25}, {79, 79, 1352}, {80, 65500, -25}, },
            {{36, 75, -23}, {76, 76, 1353}, {77, 65500, -1311}, },
            {{36, 65500, -10}, },
            {{36, 75, -23}, {76, 76, 1354}, {77, 65500, -1311}, },
            {{36, 65500, -10}, },
            {{36, 110, -37}, {111, 111, 1355}, {112, 122, 509}, {170, 65500, -10}, },
            {{36, 109, -35}, {110, 110, 1356}, {111, 65500, -35}, },
            {{36, 100, -984}, {101, 101, 1357}, {102, 65500, -984}, },
            {{36, 65500, -10}, },
            {{36, 115, -987}, {116, 116, 1358}, {117, 65500, -38}, },
            {{36, 103, -1254}, {104, 104, 1359}, {105, 65500, -1254}, },
            {},
            {{116, 116, 1360}, },
            {{97, 97, 1361}, },
            {{34, 34, 1362}, },
            {{36, 75, -23}, {76, 76, 1363}, {77, 65500, -1311}, },
            {{36, 75, -23}, {76, 76, 1364}, {77, 65500, -1311}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 116, -34}, {117, 117, 1365}, {118, 65500, -34}, },
            {{36, 100, -984}, {101, 101, 1366}, {102, 65500, -984}, },
            {{36, 65500, -10}, },
            {{36, 104, -39}, {105, 105, 1367}, {106, 65500, -39}, },
            {{36, 95, -10}, {97, 97, 1368}, {98, 65500, -36}, },
            {{110, 110, 1369}, },
            {{116, 116, 1370}, },
            {},
            {{36, 57, -10}, {65, 88, 507}, {89, 89, 1371}, {90, 90, 507}, {95, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 109, -35}, {110, 110, 1372}, {111, 65500, -35}, },
            {{36, 114, -1327}, {115, 115, 1373}, {116, 65500, -1327}, },
            {{36, 110, -37}, {111, 111, 1374}, {112, 65500, -1342}, },
            {{36, 111, -980}, {112, 112, 1375}, {113, 65500, -980}, },
            {{101, 101, 1376}, },
            {{105, 105, 1377}, },
            {{36, 65500, -10}, },
            {{36, 99, -997}, {100, 100, 1378}, {101, 65500, -997}, },
            {{36, 114, -1327}, {115, 115, 1379}, {116, 65500, -1327}, },
            {{36, 109, -35}, {110, 110, 1380}, {111, 65500, -35}, },
            {{36, 100, -984}, {101, 101, 1381}, {102, 65500, -984}, },
            {{115, 115, 1382}, },
            {{111, 111, 1383}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{36, 65500, -10}, },
            {{115, 115, 1384}, },
            {{110, 110, 1385}, },
            {},
            {},
        }
    };*/

    private static int[][] accept;
/*  {
        // INITIAL
        {48, 48, 48, 48, 48, 48, -1, 49, 46, 9, 10, 1, 2, 6, 3, -1, 4, -1, 47, 46, 46, 46, 46, 46, 11, 12, 5, 46, 26, 25, 46, 41, 23, 46, 21, 40, 22, 46, 46, 31, 32, 33, 7, 0, 8, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, -1, 46, 46, 46, 46, 46, 46, -1, 46, 46, 46, -1, 46, 46, 46, 46, 46, 46, 46, 46, -1, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, -1, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, -1, 46, 46, 46, 46, 46, 46, 46, 46, 46, -1, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, -1, 46, 46, 46, 46, 46, 46, -1, 46, 46, 46, 46, 46, 46, 46, -1, 46, 46, 46, 46, 46, -1, 46, 46, 46, 46, -1, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, -1, 46, -1, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, -1, 46, 46, 46, 46, 46, 46, 46, 48, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 49, 49, 49, 46, -1, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, -1, 47, 47, -1, 49, -1, 47, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 47, 47, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 46, 38, 39, 46, 46, 46, 46, 46, 46, 46, 34, 36, 35, 37, 30, 29, 27, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 49, -1, 47, 47, 47, -1, -1, -1, -1, 50, 47, 46, 46, 46, 46, 46, 46, 46, 46, 46, 23, 46, 46, 46, 46, 46, 24, 46, 46, 46, 46, 46, 46, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 46, 46, 46, 46, 46, 46, 46, 46, 46, 41, 46, 46, 19, 46, 18, 46, 46, 17, 42, 46, 16, 46, -1, -1, 27, 28, -1, -1, -1, 46, 44, 46, 46, 46, 46, 46, 46, 26, 46, 46, 46, 21, 46, 46, 20, 46, 43, -1, -1, -1, -1, 45, 44, 46, 46, 46, 46, 44, 46, 44, 46, 46, 46, 40, 46, 46, 30, -1, -1, -1, 46, 46, 44, 44, 44, 46, 46, 15, 46, 46, -1, -1, 45, 46, 44, 46, 46, 46, 46, -1, -1, 44, 46, 46, 46, 46, -1, -1, 14, 25, 24, 13, -1, -1, 29, 28, },

    };*/

    public static class State
    {
        public final static State INITIAL = new State(0);

        private int id;

        private State(@SuppressWarnings("hiding") int id)
        {
            this.id = id;
        }

        public int id()
        {
            return this.id;
        }
    }

    static 
    {
        try
        {
            DataInputStream s = new DataInputStream(
                new BufferedInputStream(
                Lexer.class.getResourceAsStream("lexer.dat")));

            // read gotoTable
            int length = s.readInt();
            gotoTable = new int[length][][][];
            for(int i = 0; i < gotoTable.length; i++)
            {
                length = s.readInt();
                gotoTable[i] = new int[length][][];
                for(int j = 0; j < gotoTable[i].length; j++)
                {
                    length = s.readInt();
                    gotoTable[i][j] = new int[length][3];
                    for(int k = 0; k < gotoTable[i][j].length; k++)
                    {
                        for(int l = 0; l < 3; l++)
                        {
                            gotoTable[i][j][k][l] = s.readInt();
                        }
                    }
                }
            }

            // read accept
            length = s.readInt();
            accept = new int[length][];
            for(int i = 0; i < accept.length; i++)
            {
                length = s.readInt();
                accept[i] = new int[length];
                for(int j = 0; j < accept[i].length; j++)
                {
                    accept[i][j] = s.readInt();
                }
            }

            s.close();
        }
        catch(Exception e)
        {
            throw new RuntimeException("The file \"lexer.dat\" is either missing or corrupted.");
        }
    }
}
